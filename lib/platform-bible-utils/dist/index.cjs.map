{"version":3,"file":"index.cjs","sources":["../src/async-variable.ts","../src/util.ts","../src/document-combiner-engine.ts","../src/non-validating-document-combiner.ts","../src/unsubscriber-async-list.ts","../src/platform-event-emitter.model.ts","../src/mutex.ts","../src/mutex-map.ts","../src/scripture-util.ts","../src/unsubscriber.ts","../../../node_modules/char-regex/index.js","../../../node_modules/stringz/dist/index.js","../src/string-util.ts","../../../node_modules/fast-equals/dist/esm/index.mjs","../src/equality-checking.ts","../src/serialization.ts","../src/menus.model.ts"],"sourcesContent":["/** This class provides a convenient way for one task to wait on a variable that another task sets. */\nexport default class AsyncVariable<T> {\n  private readonly variableName: string;\n  private readonly promiseToValue: Promise<T>;\n  private resolver: ((value: T) => void) | undefined;\n  private rejecter: ((reason: string | undefined) => void) | undefined;\n\n  /**\n   * Creates an instance of the class\n   *\n   * @param variableName Name to use when logging about this variable\n   * @param rejectIfNotSettledWithinMS Milliseconds to wait before verifying if the promise was\n   *   settled (resolved or rejected); will reject if it has not settled by that time. Use -1 if you\n   *   do not want a timeout at all.\n   */\n  constructor(variableName: string, rejectIfNotSettledWithinMS: number = 10000) {\n    this.variableName = variableName;\n    this.promiseToValue = new Promise<T>((resolve, reject) => {\n      this.resolver = resolve;\n      this.rejecter = reject;\n    });\n    if (rejectIfNotSettledWithinMS > 0) {\n      setTimeout(() => {\n        if (this.rejecter) {\n          this.rejecter(`Timeout reached when waiting for ${this.variableName} to settle`);\n          this.complete();\n        }\n      }, rejectIfNotSettledWithinMS);\n    }\n    Object.seal(this);\n  }\n\n  /**\n   * Get this variable's promise to a value. This always returns the same promise even after the\n   * value has been resolved or rejected.\n   *\n   * @returns The promise for the value to be set\n   */\n  get promise(): Promise<T> {\n    return this.promiseToValue;\n  }\n\n  /**\n   * A simple way to see if this variable's promise was resolved or rejected already\n   *\n   * @returns Whether the variable was already resolved or rejected\n   */\n  get hasSettled(): boolean {\n    return Object.isFrozen(this);\n  }\n\n  /**\n   * Resolve this variable's promise to the given value\n   *\n   * @param value This variable's promise will resolve to this value\n   * @param throwIfAlreadySettled Determines whether to throw if the variable was already resolved\n   *   or rejected\n   */\n  resolveToValue(value: T, throwIfAlreadySettled: boolean = false): void {\n    if (this.resolver) {\n      console.debug(`${this.variableName} is being resolved now`);\n      this.resolver(value);\n      this.complete();\n    } else {\n      if (throwIfAlreadySettled) throw Error(`${this.variableName} was already settled`);\n      console.debug(`Ignoring subsequent resolution of ${this.variableName}`);\n    }\n  }\n\n  /**\n   * Reject this variable's promise for the value with the given reason\n   *\n   * @param reason This variable's promise will be rejected with this reason\n   * @param throwIfAlreadySettled Determines whether to throw if the variable was already resolved\n   *   or rejected\n   */\n  rejectWithReason(reason: string, throwIfAlreadySettled: boolean = false): void {\n    if (this.rejecter) {\n      console.debug(`${this.variableName} is being rejected now`);\n      this.rejecter(reason);\n      this.complete();\n    } else {\n      if (throwIfAlreadySettled) throw Error(`${this.variableName} was already settled`);\n      console.debug(`Ignoring subsequent rejection of ${this.variableName}`);\n    }\n  }\n\n  /** Prevent any further updates to this variable */\n  private complete(): void {\n    this.resolver = undefined;\n    this.rejecter = undefined;\n    Object.freeze(this);\n  }\n}\n","/** Collection of functions, objects, and types that are used as helpers in other services. */\n\n// Thanks to blubberdiblub at https://stackoverflow.com/a/68141099/217579\nexport function newGuid(): string {\n  return '00-0-4-1-000'.replace(/[^-]/g, (s) =>\n    // @ts-expect-error ts(2363) this works fine\n    // eslint-disable-next-line no-bitwise\n    (((Math.random() + ~~s) * 0x10000) >> s).toString(16).padStart(4, '0'),\n  );\n}\n\n// thanks to DRAX at https://stackoverflow.com/a/9436948\n/**\n * Determine whether the object is a string\n *\n * @param o Object to determine if it is a string\n * @returns True if the object is a string; false otherwise\n */\nexport function isString(o: unknown): o is string {\n  return typeof o === 'string' || o instanceof String;\n}\n\n/**\n * If deepClone isn't used when copying properties between objects, you may be left with dangling\n * references between the source and target of property copying operations.\n *\n * @param obj Object to clone\n * @returns Duplicate copy of `obj` without any references back to the original one\n */\nexport function deepClone<T>(obj: T): T {\n  // Assert the return type matches what is expected\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  return JSON.parse(JSON.stringify(obj)) as T;\n}\n\n/**\n * Get a function that reduces calls to the function passed in\n *\n * @param fn The function to debounce\n * @param delay How much delay in milliseconds after the most recent call to the debounced function\n *   to call the function\n * @returns Function that, when called, only calls the function passed in at maximum every delay ms\n */\n// We don't know the parameter types since this function can be anything\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function debounce<T extends (...args: any[]) => void>(fn: T, delay = 300): T {\n  if (isString(fn)) throw new Error('Tried to debounce a string! Could be XSS');\n  let timeout: ReturnType<typeof setTimeout>;\n  // Ensure the right return type.\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  return ((...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), delay);\n  }) as T;\n}\n\n/**\n * Groups each item in the array of items into a map according to the keySelector\n *\n * @param items Array of items to group by\n * @param keySelector Function to run on each item to get the key for the group to which it belongs\n * @param valueSelector Function to run on each item to get the value it should have in the group\n *   (like map function). If not provided, uses the item itself\n * @returns Map of keys to groups of values corresponding to each item\n */\nexport function groupBy<T, K>(items: T[], keySelector: (item: T) => K): Map<K, Array<T>>;\nexport function groupBy<T, K, V>(\n  items: T[],\n  keySelector: (item: T) => K,\n  valueSelector: (item: T, key: K) => V,\n): Map<K, Array<V>>;\nexport function groupBy<T, K, V = T>(\n  items: T[],\n  keySelector: (item: T) => K,\n  valueSelector?: (item: T, key: K) => V,\n): Map<K, Array<V | T>> {\n  const map = new Map<K, Array<V | T>>();\n  items.forEach((item) => {\n    const key = keySelector(item);\n    const group = map.get(key);\n    const value = valueSelector ? valueSelector(item, key) : item;\n    if (group) group.push(value);\n    else map.set(key, [value]);\n  });\n  return map;\n}\n\n// From https://kentcdodds.com/blog/get-a-catch-block-error-message-with-typescript\ntype ErrorWithMessage = {\n  message: string;\n};\n\n// From https://kentcdodds.com/blog/get-a-catch-block-error-message-with-typescript\nfunction isErrorWithMessage(error: unknown): error is ErrorWithMessage {\n  return (\n    typeof error === 'object' &&\n    // We're potentially dealing with objects we didn't create, so they might contain `null`\n    // eslint-disable-next-line no-null/no-null\n    error !== null &&\n    'message' in error &&\n    // Type assert `error` to check it's `message`.\n    // eslint-disable-next-line no-type-assertion/no-type-assertion\n    typeof (error as Record<string, unknown>).message === 'string'\n  );\n}\n\n// From https://kentcdodds.com/blog/get-a-catch-block-error-message-with-typescript\n/**\n * Function to get an error from the object (useful for getting an error in a catch block)\n *\n * @param error Error object whose message to get\n * @returns Message of the error - if object has message, returns message. Otherwise tries to\n *   stringify\n */\nfunction toErrorWithMessage(maybeError: unknown): ErrorWithMessage {\n  if (isErrorWithMessage(maybeError)) return maybeError;\n\n  try {\n    return new Error(JSON.stringify(maybeError));\n  } catch {\n    // fallback in case there's an error stringifying the maybeError\n    // like with circular references for example.\n    return new Error(String(maybeError));\n  }\n}\n\n// From https://kentcdodds.com/blog/get-a-catch-block-error-message-with-typescript\n/**\n * Function to get an error message from the object (useful for getting error message in a catch\n * block)\n *\n * @example `try {...} catch (e) { logger.info(getErrorMessage(e)) }`\n *\n * @param error Error object whose message to get\n * @returns Message of the error - if object has message, returns message. Otherwise tries to\n *   stringify\n */\nexport function getErrorMessage(error: unknown) {\n  return toErrorWithMessage(error).message;\n}\n\n/** Asynchronously waits for the specified number of milliseconds. (wraps setTimeout in a promise) */\nexport function wait(ms: number) {\n  // eslint-disable-next-line no-promise-executor-return\n  return new Promise<void>((resolve) => setTimeout(resolve, ms));\n}\n\n/**\n * Runs the specified function and will timeout if it takes longer than the specified wait time\n *\n * @param fn The function to run\n * @param maxWaitTimeInMS The maximum amount of time to wait for the function to resolve\n * @returns Promise that resolves to the resolved value of the function or undefined if it ran\n *   longer than the specified wait time\n */\nexport function waitForDuration<TResult>(fn: () => Promise<TResult>, maxWaitTimeInMS: number) {\n  const timeout = wait(maxWaitTimeInMS).then(() => undefined);\n  return Promise.any([timeout, fn()]);\n}\n\n/**\n * Get all functions on an object and its prototype chain (so we don't miss any class methods or any\n * object methods). Note that the functions on the final item in the prototype chain (i.e., Object)\n * are skipped to avoid including functions like `__defineGetter__`, `__defineSetter__`, `toString`,\n * etc.\n *\n * @param obj Object whose functions to get\n * @param objId Optional ID of the object to use for debug logging\n * @returns Array of all function names on an object\n */\n// Note: lodash has something that MIGHT do the same thing as this. Investigate for https://github.com/paranext/paranext-core/issues/134\nexport function getAllObjectFunctionNames(\n  obj: { [property: string]: unknown },\n  objId: string = 'obj',\n): Set<string> {\n  const objectFunctionNames = new Set<string>();\n\n  // Get all function properties directly defined on the object\n  Object.getOwnPropertyNames(obj).forEach((property) => {\n    try {\n      if (typeof obj[property] === 'function') objectFunctionNames.add(property);\n    } catch (error) {\n      console.debug(`Skipping ${property} on ${objId} due to error: ${error}`);\n    }\n  });\n\n  // Walk up the prototype chain and get additional function properties, skipping the functions\n  // provided by the final (Object) prototype\n  let objectPrototype = Object.getPrototypeOf(obj);\n  while (objectPrototype && Object.getPrototypeOf(objectPrototype)) {\n    Object.getOwnPropertyNames(objectPrototype).forEach((property) => {\n      try {\n        if (typeof obj[property] === 'function') objectFunctionNames.add(property);\n      } catch (error) {\n        console.debug(`Skipping ${property} on ${objId}'s prototype due to error: ${error}`);\n      }\n    });\n    objectPrototype = Object.getPrototypeOf(objectPrototype);\n  }\n\n  return objectFunctionNames;\n}\n\n/**\n * Creates a synchronous proxy for an asynchronous object. The proxy allows calling methods on an\n * object that is asynchronously fetched using a provided asynchronous function.\n *\n * @param getObject - A function that returns a promise resolving to the object whose asynchronous\n *   methods to call.\n * @param objectToProxy - An optional object that is the object that is proxied. If a property is\n *   accessed that does exist on this object, it will be returned. If a property is accessed that\n *   does not exist on this object, it will be considered to be an asynchronous method called on the\n *   object returned from getObject.\n * @returns A synchronous proxy for the asynchronous object.\n */\nexport function createSyncProxyForAsyncObject<T extends object>(\n  getObject: (args?: unknown[]) => Promise<T>,\n  objectToProxy: Partial<T> = {},\n): T {\n  // objectToProxy will have only the synchronously accessed properties of T on it, and this proxy\n  // makes the async methods that do not exist yet available synchronously so we have all of T\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  return new Proxy(objectToProxy as T, {\n    get(target, prop) {\n      // We don't have any type information for T, so we assume methodName exists on it and will let JavaScript throw if it doesn't exist\n      // @ts-expect-error 7053\n      if (prop in target) return target[prop];\n      return async (...args: unknown[]) => {\n        // 7053: We don't have any type information for T, so we assume methodName exists on it and will let JavaScript throw if it doesn't exist\n        // 2556: The args here are the parameters for the method specified\n        // @ts-expect-error 7053 2556\n        return (await getObject())[prop](...args);\n      };\n    },\n  });\n}\n\n/** Within type T, recursively change all properties to be optional */\nexport type DeepPartial<T> = T extends object ? { [P in keyof T]?: DeepPartial<T[P]> } : T;\n\n/** Within type T, recursively change properties that were of type A to be of type B */\nexport type ReplaceType<T, A, B> = T extends A\n  ? B\n  : T extends object\n    ? { [K in keyof T]: ReplaceType<T[K], A, B> }\n    : T;\n","import { deepClone } from './util';\n\nexport type JsonDocumentLike = { [key: string]: unknown };\n\n/**\n * Options for DocumentCombinerEngine objects\n *\n * - `copyDocuments`: If true, this instance will perform a deep copy of all provided documents before\n *   composing the output. If false, then changes made to provided documents after they are\n *   contributed will be reflected in the next time output is composed.\n * - `ignoreDuplicateProperties`: If true, then duplicate properties are skipped if they are seen in\n *   contributed documents. If false, then throw when duplicate properties are seen in contributed\n *   documents.\n */\nexport type DocumentCombinerOptions = {\n  copyDocuments: boolean;\n  ignoreDuplicateProperties: boolean;\n};\n\n/**\n * Base class for any code that wants to compose JSON documents (in the form of JS objects) together\n * into a single output document.\n */\nexport default abstract class DocumentCombinerEngine {\n  protected baseDocument: JsonDocumentLike;\n  protected readonly contributions = new Map<string, JsonDocumentLike>();\n  protected latestOutput: JsonDocumentLike | undefined;\n  protected readonly options: DocumentCombinerOptions;\n\n  /**\n   * Create a DocumentCombinerEngine instance\n   *\n   * @param baseDocument This is the first document that will be used when composing the output\n   * @param options Options used by this object when combining documents\n   */\n  protected constructor(baseDocument: JsonDocumentLike, options: DocumentCombinerOptions) {\n    // Setting baseDocument redundantly because TS doesn't understand that updateBaseDocument does it\n    this.baseDocument = baseDocument;\n    this.options = options;\n    this.updateBaseDocument(baseDocument);\n  }\n\n  /**\n   * Update the starting document for composition process\n   *\n   * @param baseDocument Base JSON document/JS object that all other documents are added to\n   * @returns Recalculated output document given the new starting state and existing other documents\n   */\n  updateBaseDocument(baseDocument: JsonDocumentLike): JsonDocumentLike | undefined {\n    this.validateStartingDocument(baseDocument);\n    this.baseDocument = this.options.copyDocuments ? deepClone(baseDocument) : baseDocument;\n    return this.rebuild();\n  }\n\n  /**\n   * Add or update one of the contribution documents for the composition process\n   *\n   * @param documentName Name of the contributed document to combine\n   * @param document Content of the contributed document to combine\n   * @returns Recalculated output document given the new or updated contribution and existing other\n   *   documents\n   */\n  addOrUpdateContribution(\n    documentName: string,\n    document: JsonDocumentLike,\n  ): JsonDocumentLike | undefined {\n    this.validateContribution(documentName, document);\n    const previousDocumentVersion = this.contributions.get(documentName);\n    const documentToSet = this.options.copyDocuments && !!document ? deepClone(document) : document;\n    this.contributions.set(documentName, documentToSet);\n    try {\n      return this.rebuild();\n    } catch (error) {\n      // If the output isn't valid after adding/updating the contribution, put it back how it was\n      if (previousDocumentVersion) this.contributions.set(documentName, previousDocumentVersion);\n      else this.contributions.delete(documentName);\n      throw new Error(`Error when setting the document named ${documentName}: ${error}`);\n    }\n  }\n\n  /**\n   * Delete one of the contribution documents for the composition process\n   *\n   * @param documentName Name of the contributed document to delete\n   * @returns Recalculated output document given the remaining other documents\n   */\n  deleteContribution(documentName: string): object | undefined {\n    const document = this.contributions.get(documentName);\n    if (!document) throw new Error(`${documentName} does not exist`);\n    this.contributions.delete(documentName);\n    try {\n      return this.rebuild();\n    } catch (error) {\n      // If the output isn't valid after deleting the contribution, put it back and rethrow\n      this.contributions.set(documentName, document);\n      throw new Error(`Error when deleting the document named ${documentName}: ${error}`);\n    }\n  }\n\n  /**\n   * Delete all present contribution documents for the composition process and return to the base\n   * document\n   *\n   * @returns Recalculated output document consisting only of the base document\n   */\n  deleteAllContributions(): object | undefined {\n    // Save out all contributions\n    const contributions = [...this.contributions.entries()];\n\n    // Delete all contributions\n    contributions.forEach(([contributionName]) => this.contributions.delete(contributionName));\n\n    // Rebuild with no contributions\n    try {\n      return this.rebuild();\n    } catch (error) {\n      // If the output isn't valid after deleting all contributions, put them back and rethrow\n      contributions.forEach(([contributionName, document]) =>\n        this.contributions.set(contributionName, document),\n      );\n      throw new Error(`Error when deleting all contributions: ${error}`);\n    }\n  }\n\n  /**\n   * Run the document composition process given the starting document and all contributions. Throws\n   * if the output document fails to validate properly.\n   *\n   * @returns Recalculated output document given the starting and contributed documents\n   */\n  rebuild(): JsonDocumentLike | undefined {\n    // The starting document is the output if there are no other contributions\n    if (this.contributions.size === 0) {\n      let potentialOutput = deepClone(this.baseDocument);\n      potentialOutput = this.transformFinalOutput(potentialOutput);\n      this.validateOutput(potentialOutput);\n      this.latestOutput = potentialOutput;\n      return this.latestOutput;\n    }\n\n    // Compose the output by validating each document one at a time to pinpoint errors better\n    let outputIteration = this.baseDocument;\n    this.contributions.forEach((contribution: JsonDocumentLike) => {\n      outputIteration = mergeObjects(\n        outputIteration,\n        contribution,\n        this.options.ignoreDuplicateProperties,\n      );\n      this.validateOutput(outputIteration);\n    });\n    outputIteration = this.transformFinalOutput(outputIteration);\n    this.validateOutput(outputIteration);\n    this.latestOutput = outputIteration;\n    return this.latestOutput;\n  }\n\n  /**\n   * Throw an error if the provided document is not a valid starting document.\n   *\n   * @param baseDocument Base JSON document/JS object that all other documents are added to\n   */\n  protected abstract validateStartingDocument(baseDocument: JsonDocumentLike): void;\n\n  /**\n   * Throw an error if the provided document is not a valid contribution document.\n   *\n   * @param documentName Name of the contributed document to combine\n   * @param document Content of the contributed document to combine\n   */\n  protected abstract validateContribution(documentName: string, document: JsonDocumentLike): void;\n\n  /**\n   * Throw an error if the provided output is not valid.\n   *\n   * @param output Output document that could potentially be returned to callers\n   */\n  protected abstract validateOutput(output: JsonDocumentLike): void;\n\n  /**\n   * Transform the document that is the composition of the base document and all contribution\n   * documents. This is the last step that will be run prior to validation before\n   * `this.latestOutput` is updated to the new output.\n   *\n   * @param finalOutput Final output document that could potentially be returned to callers. \"Final\"\n   *   means no further contribution documents will be merged.\n   */\n  protected abstract transformFinalOutput(finalOutput: JsonDocumentLike): JsonDocumentLike;\n}\n\n// #region Helper functions\n\n/**\n * Determines if the input values are objects but not arrays\n *\n * @param values Objects to check\n * @returns True if all the values are objects but not arrays\n */\nfunction areNonArrayObjects(...values: unknown[]): boolean {\n  let allMatch = true;\n  values.forEach((value: unknown) => {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) allMatch = false;\n  });\n  return allMatch;\n}\n\n/**\n * Determines if the input values are arrays\n *\n * @param value Objects to check\n * @returns True if the values are arrays\n */\nfunction areArrayObjects(...values: unknown[]): boolean {\n  let allMatch = true;\n  values.forEach((value: unknown) => {\n    if (!value || typeof value !== 'object' || !Array.isArray(value)) allMatch = false;\n  });\n  return allMatch;\n}\n\n/**\n * Recursively merge the properties of one object (copyFrom) into another (startingPoint). Throws if\n * copyFrom would overwrite values already existing in startingPoint.\n *\n * @param startingPoint Object that is the starting point for the return value\n * @param copyFrom Object whose values are copied into the return value\n * @returns Object that is the combination of the two documents\n */\nfunction mergeObjects(\n  startingPoint: JsonDocumentLike,\n  copyFrom: JsonDocumentLike,\n  ignoreDuplicateProperties: boolean,\n): JsonDocumentLike {\n  const retVal = deepClone(startingPoint);\n  if (!copyFrom) return retVal;\n\n  Object.keys(copyFrom).forEach((key: string | number) => {\n    if (Object.hasOwn(startingPoint, key)) {\n      if (areNonArrayObjects(startingPoint[key], copyFrom[key])) {\n        retVal[key] = mergeObjects(\n          // We know these are objects from the `if` check\n          /* eslint-disable no-type-assertion/no-type-assertion */\n          startingPoint[key] as JsonDocumentLike,\n          copyFrom[key] as JsonDocumentLike,\n          ignoreDuplicateProperties,\n          /* eslint-enable no-type-assertion/no-type-assertion */\n        );\n      } else if (areArrayObjects(startingPoint[key], copyFrom[key])) {\n        // We know these are arrays because of the `else if` check\n        // eslint-disable-next-line no-type-assertion/no-type-assertion\n        retVal[key] = (retVal[key] as Array<unknown>).concat(copyFrom[key] as Array<unknown>);\n      } else if (!ignoreDuplicateProperties)\n        throw new Error(`Cannot merge objects: key \"${key}\" already exists in the target object`);\n    } else {\n      retVal[key] = copyFrom[key];\n    }\n  });\n\n  return retVal;\n}\n\n// #endregion\n","import DocumentCombinerEngine, {\n  DocumentCombinerOptions,\n  JsonDocumentLike,\n} from './document-combiner-engine';\n\nexport default class NonValidatingDocumentCombiner extends DocumentCombinerEngine {\n  // Making the protected base constructor public\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(baseDocument: JsonDocumentLike, options: DocumentCombinerOptions) {\n    super(baseDocument, options);\n  }\n\n  get output(): JsonDocumentLike | undefined {\n    return this.latestOutput;\n  }\n\n  // Intentionally not using `this`\n  // eslint-disable-next-line class-methods-use-this\n  protected transformFinalOutput(finalOutput: JsonDocumentLike): JsonDocumentLike {\n    return finalOutput;\n  }\n\n  // These abstract methods from the base class are intentionally left blank\n  /* eslint-disable @typescript-eslint/no-unused-vars, class-methods-use-this */\n  protected validateStartingDocument(_startingDocument: JsonDocumentLike): void {}\n  protected validateContribution(_documentName: string, _document: JsonDocumentLike): void {}\n  protected validateOutput(_output: JsonDocumentLike): void {}\n  /* eslint-enable @typescript-eslint/no-unused-vars, class-methods-use-this */\n}\n","import { Dispose } from './disposal.model';\nimport { Unsubscriber, UnsubscriberAsync } from './unsubscriber';\n\n/** Simple collection for UnsubscriberAsync objects that also provides an easy way to run them. */\nexport default class UnsubscriberAsyncList {\n  readonly unsubscribers = new Set<UnsubscriberAsync | Unsubscriber>();\n\n  constructor(private name = 'Anonymous') {}\n\n  /**\n   * Add unsubscribers to the list. Note that duplicates are not added twice.\n   *\n   * @param unsubscribers - Objects that were returned from a registration process.\n   */\n  add(...unsubscribers: (UnsubscriberAsync | Unsubscriber | Dispose)[]) {\n    unsubscribers.forEach((unsubscriber) => {\n      if ('dispose' in unsubscriber) this.unsubscribers.add(unsubscriber.dispose);\n      else this.unsubscribers.add(unsubscriber);\n    });\n  }\n\n  /**\n   * Run all unsubscribers added to this list and then clear the list.\n   *\n   * @returns `true` if all unsubscribers succeeded, `false` otherwise.\n   */\n  async runAllUnsubscribers(): Promise<boolean> {\n    const unsubs = [...this.unsubscribers].map((unsubscriber) => unsubscriber());\n    const results = await Promise.all(unsubs);\n    this.unsubscribers.clear();\n    return results.every((unsubscriberSucceeded, index) => {\n      if (!unsubscriberSucceeded)\n        console.error(`UnsubscriberAsyncList ${this.name}: Unsubscriber at index ${index} failed!`);\n\n      return unsubscriberSucceeded;\n    });\n  }\n}\n","/** Interfaces, classes, and functions related to events and event emitters */\n\nimport { Dispose } from './disposal.model';\nimport { PlatformEvent, PlatformEventHandler } from './platform-event';\n\n/**\n * Event manager - accepts subscriptions to an event and runs the subscription callbacks when the\n * event is emitted Use eventEmitter.event(callback) to subscribe to the event. Use\n * eventEmitter.emit(event) to run the subscriptions. Generally, this EventEmitter should be\n * private, and its event should be public. That way, the emitter is not publicized, but anyone can\n * subscribe to the event.\n */\nexport default class PlatformEventEmitter<T> implements Dispose {\n  /**\n   * Subscribes a function to run when this event is emitted.\n   *\n   * @param callback Function to run with the event when it is emitted\n   * @returns Unsubscriber function to run to stop calling the passed-in function when the event is\n   *   emitted\n   * @alias event\n   */\n  subscribe = this.event;\n\n  /** All callback functions that will run when this event is emitted. Lazy loaded */\n  private subscriptions?: PlatformEventHandler<T>[];\n  /** Event for listeners to subscribe to. Lazy loaded */\n  private lazyEvent?: PlatformEvent<T>;\n  /** Whether this emitter has been disposed */\n  private isDisposed = false;\n\n  /**\n   * Event for listeners to subscribe to. Subscribes a function to run when this event is emitted.\n   * Use like `const unsubscriber = event(callback)`\n   *\n   * @param callback Function to run with the event when it is emitted\n   * @returns Unsubscriber function to run to stop calling the passed-in function when the event is\n   *   emitted\n   */\n  get event(): PlatformEvent<T> {\n    this.assertNotDisposed();\n\n    if (!this.lazyEvent) {\n      this.lazyEvent = (callback) => {\n        if (!callback || typeof callback !== 'function')\n          throw new Error(`Event handler callback must be a function!`);\n\n        // Initialize this.subscriptions if it does not exist\n        if (!this.subscriptions) this.subscriptions = [];\n\n        this.subscriptions.push(callback);\n\n        return () => {\n          if (!this.subscriptions) return false; // Did not find any subscribed callbacks\n\n          const callbackIndex = this.subscriptions.indexOf(callback);\n\n          if (callbackIndex < 0) return false; // Did not find this callback in the subscriptions\n\n          // Remove the callback\n          this.subscriptions.splice(callbackIndex, 1);\n\n          return true;\n        };\n      };\n    }\n    return this.lazyEvent;\n  }\n\n  /** Disposes of this event, preparing it to release from memory */\n  dispose = () => {\n    return this.disposeFn();\n  };\n\n  /**\n   * Runs the subscriptions for the event\n   *\n   * @param event Event data to provide to subscribed callbacks\n   */\n  emit = (event: T) => {\n    // Do not do anything other than emitFn here. This emit is just binding `this` to emitFn\n    this.emitFn(event);\n  };\n\n  /**\n   * Function that runs the subscriptions for the event. Added here so children can override emit\n   * and still call the base functionality. See NetworkEventEmitter.emit for example\n   */\n  protected emitFn(event: T) {\n    this.assertNotDisposed();\n\n    this.subscriptions?.forEach((callback) => callback(event));\n  }\n\n  /** Check to make sure this emitter is not disposed. Throw if it is */\n  protected assertNotDisposed() {\n    if (this.isDisposed) throw new Error('Emitter is disposed');\n  }\n\n  /**\n   * Disposes of this event, preparing it to release from memory. Added here so children can\n   * override emit and still call the base functionality.\n   */\n  protected disposeFn() {\n    this.assertNotDisposed();\n\n    this.isDisposed = true;\n    this.subscriptions = undefined;\n    this.lazyEvent = undefined;\n    return Promise.resolve(true);\n  }\n}\n","import { Mutex as AsyncMutex } from 'async-mutex';\n\n// Extending Mutex from async-mutex so we can add JSDoc\n\n/**\n * Class that allows calling asynchronous functions multiple times at once while only running one at\n * a time.\n *\n * @example\n *\n * ```typescript\n * const mutex = new Mutex();\n *\n * mutex.runExclusive(async () => {\n *   // Do some asynchronous stuff\n *   console.log('These run one-at-a-time');\n * });\n *\n * mutex.runExclusive(async () => {\n *   // Do some asynchronous stuff\n *   console.log('These run one-at-a-time');\n * });\n * ```\n *\n * See [`async-mutex`](https://www.npmjs.com/package/async-mutex) for more information.\n */\nclass Mutex extends AsyncMutex {}\n\nexport default Mutex;\n","import Mutex from './mutex';\n\n/** Map of {@link Mutex}es that automatically (lazily) generates a new {@link Mutex} for any new key */\nclass MutexMap {\n  private mutexesByID = new Map<string, Mutex>();\n\n  get(mutexID: string): Mutex {\n    let retVal = this.mutexesByID.get(mutexID);\n    if (retVal) return retVal;\n\n    retVal = new Mutex();\n    this.mutexesByID.set(mutexID, retVal);\n    return retVal;\n  }\n}\n\nexport default MutexMap;\n","import { BookInfo, ScriptureReference } from './scripture.model';\n\nconst scrBookData: BookInfo[] = [\n  { shortName: 'ERR', fullNames: ['ERROR'], chapters: -1 },\n  { shortName: 'GEN', fullNames: ['Genesis'], chapters: 50 },\n  { shortName: 'EXO', fullNames: ['Exodus'], chapters: 40 },\n  { shortName: 'LEV', fullNames: ['Leviticus'], chapters: 27 },\n  { shortName: 'NUM', fullNames: ['Numbers'], chapters: 36 },\n  { shortName: 'DEU', fullNames: ['Deuteronomy'], chapters: 34 },\n  { shortName: 'JOS', fullNames: ['Joshua'], chapters: 24 },\n  { shortName: 'JDG', fullNames: ['Judges'], chapters: 21 },\n  { shortName: 'RUT', fullNames: ['Ruth'], chapters: 4 },\n  { shortName: '1SA', fullNames: ['1 Samuel'], chapters: 31 },\n  { shortName: '2SA', fullNames: ['2 Samuel'], chapters: 24 },\n  { shortName: '1KI', fullNames: ['1 Kings'], chapters: 22 },\n  { shortName: '2KI', fullNames: ['2 Kings'], chapters: 25 },\n  { shortName: '1CH', fullNames: ['1 Chronicles'], chapters: 29 },\n  { shortName: '2CH', fullNames: ['2 Chronicles'], chapters: 36 },\n  { shortName: 'EZR', fullNames: ['Ezra'], chapters: 10 },\n  { shortName: 'NEH', fullNames: ['Nehemiah'], chapters: 13 },\n  { shortName: 'EST', fullNames: ['Esther'], chapters: 10 },\n  { shortName: 'JOB', fullNames: ['Job'], chapters: 42 },\n  { shortName: 'PSA', fullNames: ['Psalm', 'Psalms'], chapters: 150 },\n  { shortName: 'PRO', fullNames: ['Proverbs'], chapters: 31 },\n  { shortName: 'ECC', fullNames: ['Ecclesiastes'], chapters: 12 },\n  { shortName: 'SNG', fullNames: ['Song of Solomon', 'Song of Songs'], chapters: 8 },\n  { shortName: 'ISA', fullNames: ['Isaiah'], chapters: 66 },\n  { shortName: 'JER', fullNames: ['Jeremiah'], chapters: 52 },\n  { shortName: 'LAM', fullNames: ['Lamentations'], chapters: 5 },\n  { shortName: 'EZK', fullNames: ['Ezekiel'], chapters: 48 },\n  { shortName: 'DAN', fullNames: ['Daniel'], chapters: 12 },\n  { shortName: 'HOS', fullNames: ['Hosea'], chapters: 14 },\n  { shortName: 'JOL', fullNames: ['Joel'], chapters: 3 },\n  { shortName: 'AMO', fullNames: ['Amos'], chapters: 9 },\n  { shortName: 'OBA', fullNames: ['Obadiah'], chapters: 1 },\n  { shortName: 'JON', fullNames: ['Jonah'], chapters: 4 },\n  { shortName: 'MIC', fullNames: ['Micah'], chapters: 7 },\n  { shortName: 'NAM', fullNames: ['Nahum'], chapters: 3 },\n  { shortName: 'HAB', fullNames: ['Habakkuk'], chapters: 3 },\n  { shortName: 'ZEP', fullNames: ['Zephaniah'], chapters: 3 },\n  { shortName: 'HAG', fullNames: ['Haggai'], chapters: 2 },\n  { shortName: 'ZEC', fullNames: ['Zechariah'], chapters: 14 },\n  { shortName: 'MAL', fullNames: ['Malachi'], chapters: 4 },\n  { shortName: 'MAT', fullNames: ['Matthew'], chapters: 28 },\n  { shortName: 'MRK', fullNames: ['Mark'], chapters: 16 },\n  { shortName: 'LUK', fullNames: ['Luke'], chapters: 24 },\n  { shortName: 'JHN', fullNames: ['John'], chapters: 21 },\n  { shortName: 'ACT', fullNames: ['Acts'], chapters: 28 },\n  { shortName: 'ROM', fullNames: ['Romans'], chapters: 16 },\n  { shortName: '1CO', fullNames: ['1 Corinthians'], chapters: 16 },\n  { shortName: '2CO', fullNames: ['2 Corinthians'], chapters: 13 },\n  { shortName: 'GAL', fullNames: ['Galatians'], chapters: 6 },\n  { shortName: 'EPH', fullNames: ['Ephesians'], chapters: 6 },\n  { shortName: 'PHP', fullNames: ['Philippians'], chapters: 4 },\n  { shortName: 'COL', fullNames: ['Colossians'], chapters: 4 },\n  { shortName: '1TH', fullNames: ['1 Thessalonians'], chapters: 5 },\n  { shortName: '2TH', fullNames: ['2 Thessalonians'], chapters: 3 },\n  { shortName: '1TI', fullNames: ['1 Timothy'], chapters: 6 },\n  { shortName: '2TI', fullNames: ['2 Timothy'], chapters: 4 },\n  { shortName: 'TIT', fullNames: ['Titus'], chapters: 3 },\n  { shortName: 'PHM', fullNames: ['Philemon'], chapters: 1 },\n  { shortName: 'HEB', fullNames: ['Hebrews'], chapters: 13 },\n  { shortName: 'JAS', fullNames: ['James'], chapters: 5 },\n  { shortName: '1PE', fullNames: ['1 Peter'], chapters: 5 },\n  { shortName: '2PE', fullNames: ['2 Peter'], chapters: 3 },\n  { shortName: '1JN', fullNames: ['1 John'], chapters: 5 },\n  { shortName: '2JN', fullNames: ['2 John'], chapters: 1 },\n  { shortName: '3JN', fullNames: ['3 John'], chapters: 1 },\n  { shortName: 'JUD', fullNames: ['Jude'], chapters: 1 },\n  { shortName: 'REV', fullNames: ['Revelation'], chapters: 22 },\n];\n\nexport const FIRST_SCR_BOOK_NUM = 1;\nexport const LAST_SCR_BOOK_NUM = scrBookData.length - 1;\nexport const FIRST_SCR_CHAPTER_NUM = 1;\nexport const FIRST_SCR_VERSE_NUM = 1;\n\nexport const getChaptersForBook = (bookNum: number): number => {\n  return scrBookData[bookNum]?.chapters ?? -1;\n};\n\nexport const offsetBook = (scrRef: ScriptureReference, offset: number): ScriptureReference => ({\n  bookNum: Math.max(FIRST_SCR_BOOK_NUM, Math.min(scrRef.bookNum + offset, LAST_SCR_BOOK_NUM)),\n  chapterNum: 1,\n  verseNum: 1,\n});\n\nexport const offsetChapter = (scrRef: ScriptureReference, offset: number): ScriptureReference => ({\n  ...scrRef,\n  chapterNum: Math.min(\n    Math.max(FIRST_SCR_CHAPTER_NUM, scrRef.chapterNum + offset),\n    getChaptersForBook(scrRef.bookNum),\n  ),\n  verseNum: 1,\n});\n\nexport const offsetVerse = (scrRef: ScriptureReference, offset: number): ScriptureReference => ({\n  ...scrRef,\n  verseNum: Math.max(FIRST_SCR_VERSE_NUM, scrRef.verseNum + offset),\n});\n","/** Function to run to dispose of something. Returns true if successfully unsubscribed */\nexport type Unsubscriber = () => boolean;\n\n/**\n * Returns an Unsubscriber function that combines all the unsubscribers passed in.\n *\n * @param unsubscribers All unsubscribers to aggregate into one unsubscriber\n * @returns Function that unsubscribes from all passed in unsubscribers when run\n */\nexport const aggregateUnsubscribers = (unsubscribers: Unsubscriber[]): Unsubscriber => {\n  return (...args) => {\n    // Run the unsubscriber for each handler\n    const unsubs = unsubscribers.map((unsubscriber) => unsubscriber(...args));\n\n    // If all the unsubscribers resolve to truthiness, we succeed\n    return unsubs.every((success) => success);\n  };\n};\n\n/**\n * Function to run to dispose of something that runs asynchronously. The promise resolves to true if\n * successfully unsubscribed\n */\nexport type UnsubscriberAsync = () => Promise<boolean>;\n\n/**\n * Returns an UnsubscriberAsync function that combines all the unsubscribers passed in.\n *\n * @param unsubscribers - All unsubscribers to aggregate into one unsubscriber.\n * @returns Function that unsubscribes from all passed in unsubscribers when run\n */\nexport const aggregateUnsubscriberAsyncs = (\n  unsubscribers: (UnsubscriberAsync | Unsubscriber)[],\n): UnsubscriberAsync => {\n  return async (...args) => {\n    // Run the unsubscriber for each handler\n    const unsubPromises = unsubscribers.map(async (unsubscriber) => unsubscriber(...args));\n\n    // If all the unsubscribers resolve to truthiness, we succeed\n    return (await Promise.all(unsubPromises)).every((success) => success);\n  };\n};\n","\"use strict\"\r\n\r\n// Based on: https://github.com/lodash/lodash/blob/6018350ac10d5ce6a5b7db625140b82aeab804df/.internal/unicodeSize.js\r\n\r\nmodule.exports = () => {\r\n\t// Used to compose unicode character classes.\r\n\tconst astralRange = \"\\\\ud800-\\\\udfff\"\r\n\tconst comboMarksRange = \"\\\\u0300-\\\\u036f\"\r\n\tconst comboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\"\r\n\tconst comboSymbolsRange = \"\\\\u20d0-\\\\u20ff\"\r\n\tconst comboMarksExtendedRange = \"\\\\u1ab0-\\\\u1aff\"\r\n\tconst comboMarksSupplementRange = \"\\\\u1dc0-\\\\u1dff\"\r\n\tconst comboRange = comboMarksRange + comboHalfMarksRange + comboSymbolsRange + comboMarksExtendedRange + comboMarksSupplementRange\r\n\tconst varRange = \"\\\\ufe0e\\\\ufe0f\"\r\n\tconst familyRange = \"\\\\uD83D\\\\uDC69\\\\uD83C\\\\uDFFB\\\\u200D\\\\uD83C\\\\uDF93\"\r\n\r\n\t// Used to compose unicode capture groups.\r\n\tconst astral = `[${astralRange}]`\r\n\tconst combo = `[${comboRange}]`\r\n\tconst fitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\"\r\n\tconst modifier = `(?:${combo}|${fitz})`\r\n\tconst nonAstral = `[^${astralRange}]`\r\n\tconst regional = \"(?:\\\\uD83C[\\\\uDDE6-\\\\uDDFF]){2}\"\r\n\tconst surrogatePair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\"\r\n\tconst zwj = \"\\\\u200d\"\r\n\tconst blackFlag = \"(?:\\\\ud83c\\\\udff4\\\\udb40\\\\udc67\\\\udb40\\\\udc62\\\\udb40(?:\\\\udc65|\\\\udc73|\\\\udc77)\\\\udb40(?:\\\\udc6e|\\\\udc63|\\\\udc6c)\\\\udb40(?:\\\\udc67|\\\\udc74|\\\\udc73)\\\\udb40\\\\udc7f)\"\r\n\tconst family = `[${familyRange}]`\r\n\r\n\t// Used to compose unicode regexes.\r\n\tconst optModifier = `${modifier}?`\r\n\tconst optVar = `[${varRange}]?`\r\n\tconst optJoin = `(?:${zwj}(?:${[nonAstral, regional, surrogatePair].join(\"|\")})${optVar + optModifier})*`\r\n\tconst seq = optVar + optModifier + optJoin\r\n\tconst nonAstralCombo = `${nonAstral}${combo}?`\r\n\tconst symbol = `(?:${[nonAstralCombo, combo, regional, surrogatePair, astral, family].join(\"|\")})`\r\n\r\n\t// Used to match [String symbols](https://mathiasbynens.be/notes/javascript-unicode).\r\n\treturn new RegExp(`${blackFlag}|${fitz}(?=${fitz})|${symbol + seq}`, \"g\")\r\n}\r\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore\nvar char_regex_1 = __importDefault(require(\"char-regex\"));\n/**\n * Converts a string to an array of string chars\n * @param {string} str The string to turn into array\n * @returns {string[]}\n */\nfunction toArray(str) {\n    if (typeof str !== 'string') {\n        throw new Error('A string is expected as input');\n    }\n    return str.match(char_regex_1.default()) || [];\n}\nexports.toArray = toArray;\n/**\n * Returns the length of a string\n *\n * @export\n * @param {string} str\n * @returns {number}\n */\nfunction length(str) {\n    // Check for input\n    if (typeof str !== 'string') {\n        throw new Error('Input must be a string');\n    }\n    var match = str.match(char_regex_1.default());\n    return match === null ? 0 : match.length;\n}\nexports.length = length;\n/**\n * Returns a substring by providing start and end position\n *\n * @export\n * @param {string} str\n * @param {number} [begin=0] Starting position\n * @param {number} end End position\n * @returns {string}\n */\nfunction substring(str, begin, end) {\n    if (begin === void 0) { begin = 0; }\n    // Check for input\n    if (typeof str !== 'string') {\n        throw new Error('Input must be a string');\n    }\n    // Even though negative numbers work here, theyre not in the spec\n    if (typeof begin !== 'number' || begin < 0) {\n        begin = 0;\n    }\n    if (typeof end === 'number' && end < 0) {\n        end = 0;\n    }\n    var match = str.match(char_regex_1.default());\n    if (!match)\n        return '';\n    return match.slice(begin, end).join('');\n}\nexports.substring = substring;\n/**\n * Returns a substring by providing start position and length\n *\n * @export\n * @param {string} str\n * @param {number} [begin=0] Starting position\n * @param {number} len Desired length\n * @returns {string}\n */\nfunction substr(str, begin, len) {\n    if (begin === void 0) { begin = 0; }\n    // Check for input\n    if (typeof str !== 'string') {\n        throw new Error('Input must be a string');\n    }\n    var strLength = length(str);\n    // Fix type\n    if (typeof begin !== 'number') {\n        begin = parseInt(begin, 10);\n    }\n    // Return zero-length string if got oversize number.\n    if (begin >= strLength) {\n        return '';\n    }\n    // Calculating postive version of negative value.\n    if (begin < 0) {\n        begin += strLength;\n    }\n    var end;\n    if (typeof len === 'undefined') {\n        end = strLength;\n    }\n    else {\n        // Fix type\n        if (typeof len !== 'number') {\n            len = parseInt(len, 10);\n        }\n        end = len >= 0 ? len + begin : begin;\n    }\n    var match = str.match(char_regex_1.default());\n    if (!match)\n        return '';\n    return match.slice(begin, end).join('');\n}\nexports.substr = substr;\n/**\n * Enforces a string to be a certain length by\n * adding or removing characters\n *\n * @export\n * @param {string} str\n * @param {number} [limit=16] Limit\n * @param {string} [padString='#'] The Pad String\n * @param {string} [padPosition='right'] The Pad Position\n * @returns {string}\n */\nfunction limit(str, limit, padString, padPosition) {\n    if (limit === void 0) { limit = 16; }\n    if (padString === void 0) { padString = '#'; }\n    if (padPosition === void 0) { padPosition = 'right'; }\n    // Input should be a string, limit should be a number\n    if (typeof str !== 'string' || typeof limit !== 'number') {\n        throw new Error('Invalid arguments specified');\n    }\n    // Pad position should be either left or right\n    if (['left', 'right'].indexOf(padPosition) === -1) {\n        throw new Error('Pad position should be either left or right');\n    }\n    // Pad string can be anything, we convert it to string\n    if (typeof padString !== 'string') {\n        padString = String(padString);\n    }\n    // Calculate string length considering astral code points\n    var strLength = length(str);\n    if (strLength > limit) {\n        return substring(str, 0, limit);\n    }\n    else if (strLength < limit) {\n        var padRepeats = padString.repeat(limit - strLength);\n        return padPosition === 'left' ? padRepeats + str : str + padRepeats;\n    }\n    return str;\n}\nexports.limit = limit;\n/**\n * Returns the index of the first occurrence of a given string\n *\n * @export\n * @param {string} str\n * @param {string} [searchStr] the string to search\n * @param {number} [pos] starting position\n * @returns {number}\n */\nfunction indexOf(str, searchStr, pos) {\n    if (pos === void 0) { pos = 0; }\n    if (typeof str !== 'string') {\n        throw new Error('Input must be a string');\n    }\n    if (str === '') {\n        if (searchStr === '') {\n            return 0;\n        }\n        return -1;\n    }\n    // fix type\n    pos = Number(pos);\n    pos = isNaN(pos) ? 0 : pos;\n    searchStr = String(searchStr);\n    var strArr = toArray(str);\n    if (pos >= strArr.length) {\n        if (searchStr === '') {\n            return strArr.length;\n        }\n        return -1;\n    }\n    if (searchStr === '') {\n        return pos;\n    }\n    var searchArr = toArray(searchStr);\n    var finded = false;\n    var index;\n    for (index = pos; index < strArr.length; index += 1) {\n        var searchIndex = 0;\n        while (searchIndex < searchArr.length &&\n            searchArr[searchIndex] === strArr[index + searchIndex]) {\n            searchIndex += 1;\n        }\n        if (searchIndex === searchArr.length &&\n            searchArr[searchIndex - 1] === strArr[index + searchIndex - 1]) {\n            finded = true;\n            break;\n        }\n    }\n    return finded ? index : -1;\n}\nexports.indexOf = indexOf;\n","import {\n  indexOf as stringzIndexOf,\n  substring as stringzSubstring,\n  length as stringzLength,\n  toArray as stringzToArray,\n  limit as stringzLimit,\n  substr as stringzSubstr,\n} from 'stringz';\n\n/**\n * This function mirrors the `at` function from the JavaScript Standard String object. It handles\n * Unicode code points instead of UTF-16 character codes.\n *\n * Finds the Unicode code point at the given index.\n *\n * @param string String to index\n * @param index Position of the character to be returned in range of -length(string) to\n *   length(string)\n * @returns New string consisting of the Unicode code point located at the specified offset,\n *   undefined if index is out of bounds\n */\nexport function at(string: string, index: number): string | undefined {\n  if (index > stringLength(string) || index < -stringLength(string)) return undefined;\n  return substr(string, index, 1);\n}\n\n/**\n * This function mirrors the `charAt` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes.\n *\n * Returns a new string consisting of the single unicode code point at the given index.\n *\n * @param string String to index\n * @param index Position of the string character to be returned, in the range of 0 to\n *   length(string)-1\n * @returns New string consisting of the Unicode code point located at the specified offset, empty\n *   string if index is out of bounds\n */\nexport function charAt(string: string, index: number): string {\n  if (index < 0 || index > stringLength(string) - 1) return '';\n  return substr(string, index, 1);\n}\n\n/**\n * This function mirrors the `codePointAt` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes.\n *\n * Returns a non-negative integer that is the Unicode code point value of the character starting at\n * the given index.\n *\n * @param string String to index\n * @param index Position of the string character to be returned, in the range of 0 to\n *   length(string)-1\n * @returns Non-negative integer representing the code point value of the character at the given\n *   index, or undefined if there is no element at that position\n */\nexport function codePointAt(string: string, index: number): number | undefined {\n  if (index < 0 || index > stringLength(string) - 1) return undefined;\n  return substr(string, index, 1).codePointAt(0);\n}\n\n/**\n * This function mirrors the `endsWith` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes.\n *\n * Determines whether a string ends with the characters of this string.\n *\n * @param string String to search through\n * @param searchString Characters to search for at the end of the string\n * @param endPosition End position where searchString is expected to be found. Default is\n *   `length(string)`\n * @returns True if it ends with searchString, false if it does not\n */\nexport function endsWith(\n  string: string,\n  searchString: string,\n  endPosition: number = stringLength(string),\n): boolean {\n  const lastIndexOfSearchString = lastIndexOf(string, searchString);\n  if (lastIndexOfSearchString === -1) return false;\n  if (lastIndexOfSearchString + stringLength(searchString) !== endPosition) return false;\n  return true;\n}\n\n/**\n * This function mirrors the `includes` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes.\n *\n * Performs a case-sensitive search to determine if searchString is found in string.\n *\n * @param string String to search through\n * @param searchString String to search for\n * @param position Position within the string to start searching for searchString. Default is `0`\n * @returns True if search string is found, false if it is not\n */\nexport function includes(string: string, searchString: string, position: number = 0): boolean {\n  const partialString = substring(string, position);\n  const indexOfSearchString = indexOf(partialString, searchString);\n  if (indexOfSearchString === -1) return false;\n  return true;\n}\n\n/**\n * This function mirrors the `indexOf` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes.\n *\n * Returns the index of the first occurrence of a given string.\n *\n * @param string String to search through\n * @param searchString The string to search for\n * @param position Start of searching. Default is `0`\n * @returns Index of the first occurrence of a given string\n */\nexport function indexOf(\n  string: string,\n  searchString: string,\n  position: number | undefined = 0,\n): number {\n  return stringzIndexOf(string, searchString, position);\n}\n\n/**\n * This function mirrors the `lastIndexOf` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes.\n *\n * Searches this string and returns the index of the last occurrence of the specified substring.\n *\n * @param string String to search through\n * @param searchString Substring to search for\n * @param position The index at which to begin searching. If omitted, the search begins at the end\n *   of the string. Default is `undefined`\n * @returns Index of the last occurrence of searchString found, or -1 if not found.\n */\nexport function lastIndexOf(string: string, searchString: string, position?: number): number {\n  let validatedPosition = position === undefined ? stringLength(string) : position;\n\n  if (validatedPosition < 0) {\n    validatedPosition = 0;\n  } else if (validatedPosition >= stringLength(string)) {\n    validatedPosition = stringLength(string) - 1;\n  }\n\n  for (let index = validatedPosition; index >= 0; index--) {\n    if (substr(string, index, stringLength(searchString)) === searchString) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * This function mirrors the `length` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes. Since `length` appears to be a\n * reserved keyword, the function was renamed to `stringLength`\n *\n * Returns the length of a string.\n *\n * @param string String to return the length for\n * @returns Number that is length of the starting string\n */\nexport function stringLength(string: string): number {\n  return stringzLength(string);\n}\n\n/**\n * This function mirrors the `normalize` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes.\n *\n * Returns the Unicode Normalization Form of this string.\n *\n * @param string The starting string\n * @param form Form specifying the Unicode Normalization Form. Default is `'NFC'`\n * @returns A string containing the Unicode Normalization Form of the given string.\n */\nexport function normalize(string: string, form: 'NFC' | 'NFD' | 'NFKC' | 'NFKD' | 'none'): string {\n  const upperCaseForm = form.toUpperCase();\n  if (upperCaseForm === 'NONE') {\n    return string;\n  }\n  return string.normalize(upperCaseForm);\n}\n\n/**\n * This function mirrors the `padEnd` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes.\n *\n * Pads this string with another string (multiple times, if needed) until the resulting string\n * reaches the given length. The padding is applied from the end of this string.\n *\n * @param string String to add padding too\n * @param targetLength The length of the resulting string once the starting string has been padded.\n *   If value is less than or equal to length(string), then string is returned as is.\n * @param padString The string to pad the current string with. If padString is too long to stay\n *   within targetLength, it will be truncated. Default is `\" \"`\n * @returns String with appropriate padding at the end\n */\n// Note: Limit with padString only works when length(padString) = 1, will be fixed with https://github.com/sallar/stringz/pull/59\nexport function padEnd(string: string, targetLength: number, padString: string = ' '): string {\n  if (targetLength <= stringLength(string)) return string;\n  return stringzLimit(string, targetLength, padString, 'right');\n}\n\n/**\n * This function mirrors the `padStart` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes.\n *\n * Pads this string with another string (multiple times, if needed) until the resulting string\n * reaches the given length. The padding is applied from the start of this string.\n *\n * @param string String to add padding too\n * @param targetLength The length of the resulting string once the starting string has been padded.\n *   If value is less than or equal to length(string), then string is returned as is.\n * @param padString The string to pad the current string with. If padString is too long to stay\n *   within the targetLength, it will be truncated from the end. Default is `\" \"`\n * @returns String with of specified targetLength with padString applied from the start\n */\n// Note: Limit with padString only works when length(padString) = 1, will be fixed with https://github.com/sallar/stringz/pull/59\nexport function padStart(string: string, targetLength: number, padString: string = ' '): string {\n  if (targetLength <= stringLength(string)) return string;\n  return stringzLimit(string, targetLength, padString, 'left');\n}\n\n// This is a helper function that performs a correction on the slice index to make sure it\n// cannot go out of bounds\nfunction correctSliceIndex(length: number, index: number) {\n  if (index > length) return length;\n  if (index < -length) return 0;\n  if (index < 0) return index + length;\n  return index;\n}\n\n/**\n * This function mirrors the `slice` function from the JavaScript Standard String object. It handles\n * Unicode code points instead of UTF-16 character codes.\n *\n * Extracts a section of this string and returns it as a new string, without modifying the original\n * string.\n *\n * @param string The starting string\n * @param indexStart The index of the first character to include in the returned substring.\n * @param indexEnd The index of the first character to exclude from the returned substring.\n * @returns A new string containing the extracted section of the string.\n */\nexport function slice(string: string, indexStart: number, indexEnd?: number): string {\n  const length: number = stringLength(string);\n  if (\n    indexStart > length ||\n    (indexEnd &&\n      ((indexStart > indexEnd &&\n        !(indexStart > 0 && indexStart < length && indexEnd < 0 && indexEnd > -length)) ||\n        indexEnd < -length ||\n        (indexStart < 0 && indexStart > -length && indexEnd > 0)))\n  )\n    return '';\n\n  const newStart = correctSliceIndex(length, indexStart);\n  const newEnd = indexEnd ? correctSliceIndex(length, indexEnd) : undefined;\n\n  return substring(string, newStart, newEnd);\n}\n\n/**\n * This function mirrors the `split` function from the JavaScript Standard String object. It handles\n * Unicode code points instead of UTF-16 character codes.\n *\n * Takes a pattern and divides the string into an ordered list of substrings by searching for the\n * pattern, puts these substrings into an array, and returns the array.\n *\n * @param string The string to split\n * @param separator The pattern describing where each split should occur\n * @param splitLimit Limit on the number of substrings to be included in the array. Splits the\n *   string at each occurrence of specified separator, but stops when limit entries have been placed\n *   in the array.\n * @returns An array of strings, split at each point where separator occurs in the starting string.\n *   Returns undefined if separator is not found in string.\n */\nexport function split(string: string, separator: string | RegExp, splitLimit?: number): string[] {\n  const result: string[] = [];\n\n  if (splitLimit !== undefined && splitLimit <= 0) {\n    return [string];\n  }\n\n  if (separator === '') return toArray(string).slice(0, splitLimit);\n\n  let regexSeparator = separator;\n  if (\n    typeof separator === 'string' ||\n    (separator instanceof RegExp && !includes(separator.flags, 'g'))\n  ) {\n    regexSeparator = new RegExp(separator, 'g');\n  }\n\n  const matches: RegExpMatchArray | null = string.match(regexSeparator);\n\n  let currentIndex = 0;\n\n  if (!matches) return [string];\n\n  for (let index = 0; index < (splitLimit ? splitLimit - 1 : matches.length); index++) {\n    const matchIndex = indexOf(string, matches[index], currentIndex);\n    const matchLength = stringLength(matches[index]);\n\n    result.push(substring(string, currentIndex, matchIndex));\n    currentIndex = matchIndex + matchLength;\n\n    if (splitLimit !== undefined && result.length === splitLimit) {\n      break;\n    }\n  }\n\n  result.push(substring(string, currentIndex));\n\n  return result;\n}\n\n/**\n * This function mirrors the `startsWith` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes.\n *\n * Determines whether the string begins with the characters of a specified string, returning true or\n * false as appropriate.\n *\n * @param string String to search through\n * @param searchString The characters to be searched for at the start of this string.\n * @param position The start position at which searchString is expected to be found (the index of\n *   searchString's first character). Default is `0`\n * @returns True if the given characters are found at the beginning of the string, including when\n *   searchString is an empty string; otherwise, false.\n */\nexport function startsWith(string: string, searchString: string, position: number = 0): boolean {\n  const indexOfSearchString = indexOf(string, searchString, position);\n  if (indexOfSearchString !== position) return false;\n  return true;\n}\n\n/**\n * This function mirrors the `substr` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes.\n *\n * Returns a substring by providing start and length. This function is not exported because it is\n * considered deprecated, however it is still useful as a local helper function.\n *\n * @param string String to be divided\n * @param begin Start position. Default is `Start of string`\n * @param len Length of result. Default is `String length minus start parameter`. Default is `String\n *   length minus start parameter`\n * @returns Substring from starting string\n */\nfunction substr(\n  string: string,\n  begin: number = 0,\n  len: number = stringLength(string) - begin,\n): string {\n  return stringzSubstr(string, begin, len);\n}\n\n/**\n * This function mirrors the `substring` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes.\n *\n * Returns a substring by providing start and end position.\n *\n * @param string String to be divided\n * @param begin Start position\n * @param end End position. Default is `End of string`\n * @returns Substring from starting string\n */\nexport function substring(\n  string: string,\n  begin: number,\n  end: number = stringLength(string),\n): string {\n  return stringzSubstring(string, begin, end);\n}\n\n/**\n * This function mirrors the `toArray` function from the JavaScript Standard String object. It\n * handles Unicode code points instead of UTF-16 character codes.\n *\n * Converts a string to an array of string characters.\n *\n * @param string String to convert to array\n * @returns An array of characters from the starting string\n */\nexport function toArray(string: string): string[] {\n  return stringzToArray(string);\n}\n","var getOwnPropertyNames = Object.getOwnPropertyNames, getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Combine two comparators into a single comparators.\n */\nfunction combineComparators(comparatorA, comparatorB) {\n    return function isEqual(a, b, state) {\n        return comparatorA(a, b, state) && comparatorB(a, b, state);\n    };\n}\n/**\n * Wrap the provided `areItemsEqual` method to manage the circular state, allowing\n * for circular references to be safely included in the comparison without creating\n * stack overflows.\n */\nfunction createIsCircular(areItemsEqual) {\n    return function isCircular(a, b, state) {\n        if (!a || !b || typeof a !== 'object' || typeof b !== 'object') {\n            return areItemsEqual(a, b, state);\n        }\n        var cache = state.cache;\n        var cachedA = cache.get(a);\n        var cachedB = cache.get(b);\n        if (cachedA && cachedB) {\n            return cachedA === b && cachedB === a;\n        }\n        cache.set(a, b);\n        cache.set(b, a);\n        var result = areItemsEqual(a, b, state);\n        cache.delete(a);\n        cache.delete(b);\n        return result;\n    };\n}\n/**\n * Get the properties to strictly examine, which include both own properties that are\n * not enumerable and symbol properties.\n */\nfunction getStrictProperties(object) {\n    return getOwnPropertyNames(object).concat(getOwnPropertySymbols(object));\n}\n/**\n * Whether the object contains the property passed as an own property.\n */\nvar hasOwn = Object.hasOwn ||\n    (function (object, property) {\n        return hasOwnProperty.call(object, property);\n    });\n/**\n * Whether the values passed are strictly equal or both NaN.\n */\nfunction sameValueZeroEqual(a, b) {\n    return a || b ? a === b : a === b || (a !== a && b !== b);\n}\n\nvar OWNER = '_owner';\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor, keys = Object.keys;\n/**\n * Whether the arrays are equal in value.\n */\nfunction areArraysEqual(a, b, state) {\n    var index = a.length;\n    if (b.length !== index) {\n        return false;\n    }\n    while (index-- > 0) {\n        if (!state.equals(a[index], b[index], index, index, a, b, state)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Whether the dates passed are equal in value.\n */\nfunction areDatesEqual(a, b) {\n    return sameValueZeroEqual(a.getTime(), b.getTime());\n}\n/**\n * Whether the `Map`s are equal in value.\n */\nfunction areMapsEqual(a, b, state) {\n    if (a.size !== b.size) {\n        return false;\n    }\n    var matchedIndices = {};\n    var aIterable = a.entries();\n    var index = 0;\n    var aResult;\n    var bResult;\n    while ((aResult = aIterable.next())) {\n        if (aResult.done) {\n            break;\n        }\n        var bIterable = b.entries();\n        var hasMatch = false;\n        var matchIndex = 0;\n        while ((bResult = bIterable.next())) {\n            if (bResult.done) {\n                break;\n            }\n            var _a = aResult.value, aKey = _a[0], aValue = _a[1];\n            var _b = bResult.value, bKey = _b[0], bValue = _b[1];\n            if (!hasMatch &&\n                !matchedIndices[matchIndex] &&\n                (hasMatch =\n                    state.equals(aKey, bKey, index, matchIndex, a, b, state) &&\n                        state.equals(aValue, bValue, aKey, bKey, a, b, state))) {\n                matchedIndices[matchIndex] = true;\n            }\n            matchIndex++;\n        }\n        if (!hasMatch) {\n            return false;\n        }\n        index++;\n    }\n    return true;\n}\n/**\n * Whether the objects are equal in value.\n */\nfunction areObjectsEqual(a, b, state) {\n    var properties = keys(a);\n    var index = properties.length;\n    if (keys(b).length !== index) {\n        return false;\n    }\n    var property;\n    // Decrementing `while` showed faster results than either incrementing or\n    // decrementing `for` loop and than an incrementing `while` loop. Declarative\n    // methods like `some` / `every` were not used to avoid incurring the garbage\n    // cost of anonymous callbacks.\n    while (index-- > 0) {\n        property = properties[index];\n        if (property === OWNER &&\n            (a.$$typeof || b.$$typeof) &&\n            a.$$typeof !== b.$$typeof) {\n            return false;\n        }\n        if (!hasOwn(b, property) ||\n            !state.equals(a[property], b[property], property, property, a, b, state)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Whether the objects are equal in value with strict property checking.\n */\nfunction areObjectsEqualStrict(a, b, state) {\n    var properties = getStrictProperties(a);\n    var index = properties.length;\n    if (getStrictProperties(b).length !== index) {\n        return false;\n    }\n    var property;\n    var descriptorA;\n    var descriptorB;\n    // Decrementing `while` showed faster results than either incrementing or\n    // decrementing `for` loop and than an incrementing `while` loop. Declarative\n    // methods like `some` / `every` were not used to avoid incurring the garbage\n    // cost of anonymous callbacks.\n    while (index-- > 0) {\n        property = properties[index];\n        if (property === OWNER &&\n            (a.$$typeof || b.$$typeof) &&\n            a.$$typeof !== b.$$typeof) {\n            return false;\n        }\n        if (!hasOwn(b, property)) {\n            return false;\n        }\n        if (!state.equals(a[property], b[property], property, property, a, b, state)) {\n            return false;\n        }\n        descriptorA = getOwnPropertyDescriptor(a, property);\n        descriptorB = getOwnPropertyDescriptor(b, property);\n        if ((descriptorA || descriptorB) &&\n            (!descriptorA ||\n                !descriptorB ||\n                descriptorA.configurable !== descriptorB.configurable ||\n                descriptorA.enumerable !== descriptorB.enumerable ||\n                descriptorA.writable !== descriptorB.writable)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Whether the primitive wrappers passed are equal in value.\n */\nfunction arePrimitiveWrappersEqual(a, b) {\n    return sameValueZeroEqual(a.valueOf(), b.valueOf());\n}\n/**\n * Whether the regexps passed are equal in value.\n */\nfunction areRegExpsEqual(a, b) {\n    return a.source === b.source && a.flags === b.flags;\n}\n/**\n * Whether the `Set`s are equal in value.\n */\nfunction areSetsEqual(a, b, state) {\n    if (a.size !== b.size) {\n        return false;\n    }\n    var matchedIndices = {};\n    var aIterable = a.values();\n    var aResult;\n    var bResult;\n    while ((aResult = aIterable.next())) {\n        if (aResult.done) {\n            break;\n        }\n        var bIterable = b.values();\n        var hasMatch = false;\n        var matchIndex = 0;\n        while ((bResult = bIterable.next())) {\n            if (bResult.done) {\n                break;\n            }\n            if (!hasMatch &&\n                !matchedIndices[matchIndex] &&\n                (hasMatch = state.equals(aResult.value, bResult.value, aResult.value, bResult.value, a, b, state))) {\n                matchedIndices[matchIndex] = true;\n            }\n            matchIndex++;\n        }\n        if (!hasMatch) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Whether the TypedArray instances are equal in value.\n */\nfunction areTypedArraysEqual(a, b) {\n    var index = a.length;\n    if (b.length !== index) {\n        return false;\n    }\n    while (index-- > 0) {\n        if (a[index] !== b[index]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nvar ARGUMENTS_TAG = '[object Arguments]';\nvar BOOLEAN_TAG = '[object Boolean]';\nvar DATE_TAG = '[object Date]';\nvar MAP_TAG = '[object Map]';\nvar NUMBER_TAG = '[object Number]';\nvar OBJECT_TAG = '[object Object]';\nvar REG_EXP_TAG = '[object RegExp]';\nvar SET_TAG = '[object Set]';\nvar STRING_TAG = '[object String]';\nvar isArray = Array.isArray;\nvar isTypedArray = typeof ArrayBuffer === 'function' && ArrayBuffer.isView\n    ? ArrayBuffer.isView\n    : null;\nvar assign = Object.assign;\nvar getTag = Object.prototype.toString.call.bind(Object.prototype.toString);\n/**\n * Create a comparator method based on the type-specific equality comparators passed.\n */\nfunction createEqualityComparator(_a) {\n    var areArraysEqual = _a.areArraysEqual, areDatesEqual = _a.areDatesEqual, areMapsEqual = _a.areMapsEqual, areObjectsEqual = _a.areObjectsEqual, arePrimitiveWrappersEqual = _a.arePrimitiveWrappersEqual, areRegExpsEqual = _a.areRegExpsEqual, areSetsEqual = _a.areSetsEqual, areTypedArraysEqual = _a.areTypedArraysEqual;\n    /**\n     * compare the value of the two objects and return true if they are equivalent in values\n     */\n    return function comparator(a, b, state) {\n        // If the items are strictly equal, no need to do a value comparison.\n        if (a === b) {\n            return true;\n        }\n        // If the items are not non-nullish objects, then the only possibility\n        // of them being equal but not strictly is if they are both `NaN`. Since\n        // `NaN` is uniquely not equal to itself, we can use self-comparison of\n        // both objects, which is faster than `isNaN()`.\n        if (a == null ||\n            b == null ||\n            typeof a !== 'object' ||\n            typeof b !== 'object') {\n            return a !== a && b !== b;\n        }\n        var constructor = a.constructor;\n        // Checks are listed in order of commonality of use-case:\n        //   1. Common complex object types (plain object, array)\n        //   2. Common data values (date, regexp)\n        //   3. Less-common complex object types (map, set)\n        //   4. Less-common data values (promise, primitive wrappers)\n        // Inherently this is both subjective and assumptive, however\n        // when reviewing comparable libraries in the wild this order\n        // appears to be generally consistent.\n        // Constructors should match, otherwise there is potential for false positives\n        // between class and subclass or custom object and POJO.\n        if (constructor !== b.constructor) {\n            return false;\n        }\n        // `isPlainObject` only checks against the object's own realm. Cross-realm\n        // comparisons are rare, and will be handled in the ultimate fallback, so\n        // we can avoid capturing the string tag.\n        if (constructor === Object) {\n            return areObjectsEqual(a, b, state);\n        }\n        // `isArray()` works on subclasses and is cross-realm, so we can avoid capturing\n        // the string tag or doing an `instanceof` check.\n        if (isArray(a)) {\n            return areArraysEqual(a, b, state);\n        }\n        // `isTypedArray()` works on all possible TypedArray classes, so we can avoid\n        // capturing the string tag or comparing against all possible constructors.\n        if (isTypedArray != null && isTypedArray(a)) {\n            return areTypedArraysEqual(a, b, state);\n        }\n        // Try to fast-path equality checks for other complex object types in the\n        // same realm to avoid capturing the string tag. Strict equality is used\n        // instead of `instanceof` because it is more performant for the common\n        // use-case. If someone is subclassing a native class, it will be handled\n        // with the string tag comparison.\n        if (constructor === Date) {\n            return areDatesEqual(a, b, state);\n        }\n        if (constructor === RegExp) {\n            return areRegExpsEqual(a, b, state);\n        }\n        if (constructor === Map) {\n            return areMapsEqual(a, b, state);\n        }\n        if (constructor === Set) {\n            return areSetsEqual(a, b, state);\n        }\n        // Since this is a custom object, capture the string tag to determing its type.\n        // This is reasonably performant in modern environments like v8 and SpiderMonkey.\n        var tag = getTag(a);\n        if (tag === DATE_TAG) {\n            return areDatesEqual(a, b, state);\n        }\n        if (tag === REG_EXP_TAG) {\n            return areRegExpsEqual(a, b, state);\n        }\n        if (tag === MAP_TAG) {\n            return areMapsEqual(a, b, state);\n        }\n        if (tag === SET_TAG) {\n            return areSetsEqual(a, b, state);\n        }\n        if (tag === OBJECT_TAG) {\n            // The exception for value comparison is custom `Promise`-like class instances. These should\n            // be treated the same as standard `Promise` objects, which means strict equality, and if\n            // it reaches this point then that strict equality comparison has already failed.\n            return (typeof a.then !== 'function' &&\n                typeof b.then !== 'function' &&\n                areObjectsEqual(a, b, state));\n        }\n        // If an arguments tag, it should be treated as a standard object.\n        if (tag === ARGUMENTS_TAG) {\n            return areObjectsEqual(a, b, state);\n        }\n        // As the penultimate fallback, check if the values passed are primitive wrappers. This\n        // is very rare in modern JS, which is why it is deprioritized compared to all other object\n        // types.\n        if (tag === BOOLEAN_TAG || tag === NUMBER_TAG || tag === STRING_TAG) {\n            return arePrimitiveWrappersEqual(a, b, state);\n        }\n        // If not matching any tags that require a specific type of comparison, then we hard-code false because\n        // the only thing remaining is strict equality, which has already been compared. This is for a few reasons:\n        //   - Certain types that cannot be introspected (e.g., `WeakMap`). For these types, this is the only\n        //     comparison that can be made.\n        //   - For types that can be introspected, but rarely have requirements to be compared\n        //     (`ArrayBuffer`, `DataView`, etc.), the cost is avoided to prioritize the common\n        //     use-cases (may be included in a future release, if requested enough).\n        //   - For types that can be introspected but do not have an objective definition of what\n        //     equality is (`Error`, etc.), the subjective decision is to be conservative and strictly compare.\n        // In all cases, these decisions should be reevaluated based on changes to the language and\n        // common development practices.\n        return false;\n    };\n}\n/**\n * Create the configuration object used for building comparators.\n */\nfunction createEqualityComparatorConfig(_a) {\n    var circular = _a.circular, createCustomConfig = _a.createCustomConfig, strict = _a.strict;\n    var config = {\n        areArraysEqual: strict\n            ? areObjectsEqualStrict\n            : areArraysEqual,\n        areDatesEqual: areDatesEqual,\n        areMapsEqual: strict\n            ? combineComparators(areMapsEqual, areObjectsEqualStrict)\n            : areMapsEqual,\n        areObjectsEqual: strict\n            ? areObjectsEqualStrict\n            : areObjectsEqual,\n        arePrimitiveWrappersEqual: arePrimitiveWrappersEqual,\n        areRegExpsEqual: areRegExpsEqual,\n        areSetsEqual: strict\n            ? combineComparators(areSetsEqual, areObjectsEqualStrict)\n            : areSetsEqual,\n        areTypedArraysEqual: strict\n            ? areObjectsEqualStrict\n            : areTypedArraysEqual,\n    };\n    if (createCustomConfig) {\n        config = assign({}, config, createCustomConfig(config));\n    }\n    if (circular) {\n        var areArraysEqual$1 = createIsCircular(config.areArraysEqual);\n        var areMapsEqual$1 = createIsCircular(config.areMapsEqual);\n        var areObjectsEqual$1 = createIsCircular(config.areObjectsEqual);\n        var areSetsEqual$1 = createIsCircular(config.areSetsEqual);\n        config = assign({}, config, {\n            areArraysEqual: areArraysEqual$1,\n            areMapsEqual: areMapsEqual$1,\n            areObjectsEqual: areObjectsEqual$1,\n            areSetsEqual: areSetsEqual$1,\n        });\n    }\n    return config;\n}\n/**\n * Default equality comparator pass-through, used as the standard `isEqual` creator for\n * use inside the built comparator.\n */\nfunction createInternalEqualityComparator(compare) {\n    return function (a, b, _indexOrKeyA, _indexOrKeyB, _parentA, _parentB, state) {\n        return compare(a, b, state);\n    };\n}\n/**\n * Create the `isEqual` function used by the consuming application.\n */\nfunction createIsEqual(_a) {\n    var circular = _a.circular, comparator = _a.comparator, createState = _a.createState, equals = _a.equals, strict = _a.strict;\n    if (createState) {\n        return function isEqual(a, b) {\n            var _a = createState(), _b = _a.cache, cache = _b === void 0 ? circular ? new WeakMap() : undefined : _b, meta = _a.meta;\n            return comparator(a, b, {\n                cache: cache,\n                equals: equals,\n                meta: meta,\n                strict: strict,\n            });\n        };\n    }\n    if (circular) {\n        return function isEqual(a, b) {\n            return comparator(a, b, {\n                cache: new WeakMap(),\n                equals: equals,\n                meta: undefined,\n                strict: strict,\n            });\n        };\n    }\n    var state = {\n        cache: undefined,\n        equals: equals,\n        meta: undefined,\n        strict: strict,\n    };\n    return function isEqual(a, b) {\n        return comparator(a, b, state);\n    };\n}\n\n/**\n * Whether the items passed are deeply-equal in value.\n */\nvar deepEqual = createCustomEqual();\n/**\n * Whether the items passed are deeply-equal in value based on strict comparison.\n */\nvar strictDeepEqual = createCustomEqual({ strict: true });\n/**\n * Whether the items passed are deeply-equal in value, including circular references.\n */\nvar circularDeepEqual = createCustomEqual({ circular: true });\n/**\n * Whether the items passed are deeply-equal in value, including circular references,\n * based on strict comparison.\n */\nvar strictCircularDeepEqual = createCustomEqual({\n    circular: true,\n    strict: true,\n});\n/**\n * Whether the items passed are shallowly-equal in value.\n */\nvar shallowEqual = createCustomEqual({\n    createInternalComparator: function () { return sameValueZeroEqual; },\n});\n/**\n * Whether the items passed are shallowly-equal in value based on strict comparison\n */\nvar strictShallowEqual = createCustomEqual({\n    strict: true,\n    createInternalComparator: function () { return sameValueZeroEqual; },\n});\n/**\n * Whether the items passed are shallowly-equal in value, including circular references.\n */\nvar circularShallowEqual = createCustomEqual({\n    circular: true,\n    createInternalComparator: function () { return sameValueZeroEqual; },\n});\n/**\n * Whether the items passed are shallowly-equal in value, including circular references,\n * based on strict comparison.\n */\nvar strictCircularShallowEqual = createCustomEqual({\n    circular: true,\n    createInternalComparator: function () { return sameValueZeroEqual; },\n    strict: true,\n});\n/**\n * Create a custom equality comparison method.\n *\n * This can be done to create very targeted comparisons in extreme hot-path scenarios\n * where the standard methods are not performant enough, but can also be used to provide\n * support for legacy environments that do not support expected features like\n * `RegExp.prototype.flags` out of the box.\n */\nfunction createCustomEqual(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.circular, circular = _a === void 0 ? false : _a, createCustomInternalComparator = options.createInternalComparator, createState = options.createState, _b = options.strict, strict = _b === void 0 ? false : _b;\n    var config = createEqualityComparatorConfig(options);\n    var comparator = createEqualityComparator(config);\n    var equals = createCustomInternalComparator\n        ? createCustomInternalComparator(comparator)\n        : createInternalEqualityComparator(comparator);\n    return createIsEqual({ circular: circular, comparator: comparator, createState: createState, equals: equals, strict: strict });\n}\n\nexport { circularDeepEqual, circularShallowEqual, createCustomEqual, deepEqual, sameValueZeroEqual, shallowEqual, strictCircularDeepEqual, strictCircularShallowEqual, strictDeepEqual, strictShallowEqual };\n//# sourceMappingURL=index.mjs.map\n","// There is a circular version https://www.npmjs.com/package/fast-equals#circulardeepequal that I\n// think allows comparing React refs (which have circular references in particular places that this\n// library would ignore). Maybe we can change to that version sometime if needed.\nimport { deepEqual as isEqualDeep } from 'fast-equals';\n\n/**\n * Check that two objects are deeply equal, comparing members of each object and such\n *\n * @param a The first object to compare\n * @param b The second object to compare\n *\n *   WARNING: Objects like arrays from different iframes have different constructor function\n *   references even if they do the same thing, so this deep equality comparison fails objects that\n *   look the same but have different constructors because different constructors could produce\n *   false positives in [a few specific\n *   situations](https://github.com/planttheidea/fast-equals/blob/a41afc0a240ad5a472e47b53791e9be017f52281/src/comparator.ts#L96).\n *   This means that two objects like arrays from different iframes that look the same will fail\n *   this check. Please use some other means to check deep equality in those situations.\n *\n *   Note: This deep equality check considers `undefined` values on keys of objects NOT to be equal to\n *   not specifying the key at all. For example, `{ stuff: 3, things: undefined }` and `{ stuff: 3\n *   }` are not considered equal in this case\n *\n *   - For more information and examples, see [this\n *       CodeSandbox](https://codesandbox.io/s/deepequallibrarycomparison-4g4kk4?file=/src/index.mjs).\n *\n * @returns True if a and b are deeply equal; false otherwise\n */\nexport default function deepEqual(a: unknown, b: unknown) {\n  return isEqualDeep(a, b);\n}\n","/**\n * Converts a JavaScript value to a JSON string, changing `undefined` properties in the JavaScript\n * object to `null` properties in the JSON string.\n *\n * WARNING: `null` values will become `undefined` values after passing through {@link serialize} then\n * {@link deserialize}. For example, `{ a: 1, b: undefined, c: null }` will become `{ a: 1, b:\n * undefined, c: undefined }`. If you are passing around user data that needs to retain `null`\n * values, you should wrap them yourself in a string before using this function. Alternatively, you\n * can write your own replacer that will preserve `null` in a way that you can recover later.\n *\n * @param value A JavaScript value, usually an object or array, to be converted.\n * @param replacer A function that transforms the results. Note that all `undefined` values returned\n *   by the replacer will be further transformed into `null` in the JSON string.\n * @param space Adds indentation, white space, and line break characters to the return-value JSON\n *   text to make it easier to read. See the `space` parameter of `JSON.stringify` for more\n *   details.\n */\nexport function serialize(\n  value: unknown,\n  replacer?: (this: unknown, key: string, value: unknown) => unknown,\n  space?: string | number,\n): string {\n  const undefinedReplacer = (replacerKey: string, replacerValue: unknown) => {\n    let newValue = replacerValue;\n    if (replacer) newValue = replacer(replacerKey, newValue);\n    // All `undefined` values become `null` on the way from JS objects into JSON strings\n    // eslint-disable-next-line no-null/no-null\n    if (newValue === undefined) newValue = null;\n    return newValue;\n  };\n  return JSON.stringify(value, undefinedReplacer, space);\n}\n\n/**\n * Converts a JSON string into a value, converting all `null` properties from JSON into `undefined`\n * in the returned JavaScript value/object.\n *\n * WARNING: `null` values will become `undefined` values after passing through {@link serialize} then\n * {@link deserialize}. For example, `{ a: 1, b: undefined, c: null }` will become `{ a: 1, b:\n * undefined, c: undefined }`. If you are passing around user data that needs to retain `null`\n * values, you should wrap them yourself in a string before using this function. Alternatively, you\n * can write your own replacer that will preserve `null` in a way that you can recover later.\n *\n * @param value A valid JSON string.\n * @param reviver A function that transforms the results. This function is called for each member of\n *   the object. If a member contains nested objects, the nested objects are transformed before the\n *   parent object is. Note that `null` values are converted into `undefined` values after the\n *   reviver has run.\n */\nexport function deserialize(\n  value: string,\n  reviver?: (this: unknown, key: string, value: unknown) => unknown,\n  // Need to use `any` instead of `unknown` here to match the signature of JSON.parse\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // Helper function to replace `null` with `undefined` on a per property basis. This can't be done\n  // with our own reviver because `JSON.parse` removes `undefined` properties from the return value.\n  function replaceNull(obj: Record<string | number, unknown>): Record<string | number, unknown> {\n    Object.keys(obj).forEach((key: string | number) => {\n      // We only want to replace `null`, not other falsy values\n      // eslint-disable-next-line no-null/no-null\n      if (obj[key] === null) obj[key] = undefined;\n      // If the property is an object, recursively call the helper function on it\n      else if (typeof obj[key] === 'object')\n        // Since the object came from a string, we know the keys will not be symbols\n        // eslint-disable-next-line no-type-assertion/no-type-assertion\n        obj[key] = replaceNull(obj[key] as Record<string | number, unknown>);\n    });\n    return obj;\n  }\n\n  const parsedObject = JSON.parse(value, reviver);\n  // Explicitly convert the value 'null' that isn't stored as a property on an object to 'undefined'\n  // eslint-disable-next-line no-null/no-null\n  if (parsedObject === null) return undefined;\n  if (typeof parsedObject === 'object') return replaceNull(parsedObject);\n  return parsedObject;\n}\n\n/**\n * Check to see if the value is serializable without losing information\n *\n * @param value Value to test\n * @returns True if serializable; false otherwise\n *\n *   Note: the values `undefined` and `null` are serializable (on their own or in an array), but\n *   `null` values get transformed into `undefined` when serializing/deserializing.\n *\n *   WARNING: This is inefficient right now as it stringifies, parses, stringifies, and === the value.\n *   Please only use this if you need to\n *\n *   DISCLAIMER: this does not successfully detect that values are not serializable in some cases:\n *\n *   - Losses of removed properties like functions and `Map`s\n *   - Class instances (not deserializable into class instances without special code)\n *\n *   We intend to improve this in the future if it becomes important to do so. See [`JSON.stringify`\n *   documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#description)\n *   for more information.\n */\nexport function isSerializable(value: unknown): boolean {\n  try {\n    const serializedValue = serialize(value);\n    return serializedValue === serialize(deserialize(serializedValue));\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * HTML Encodes the provided string. Thanks to ChatGPT\n *\n * @param str String to HTML encode\n * @returns HTML-encoded string\n */\nexport const htmlEncode = (str: string): string =>\n  str\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;')\n    .replace(/\\//g, '&#x2F;');\n","//----------------------------------------------------------------------------------------------\n// NOTE: If you change any of the types, make sure the JSON schema at the end of this file gets\n// changed so they align.\n//----------------------------------------------------------------------------------------------\n\nimport { ReplaceType } from './util';\n\n/** Identifier for a string that will be localized in a menu based on the user's UI language */\nexport type LocalizeKey = `%${string}%`;\n\n/** Name of some UI element (i.e., tab, column, group, menu item) or some PAPI object (i.e., command) */\nexport type ReferencedItem = `${string}.${string}`;\n\nexport type OrderedItem = {\n  /** Relative order of this item compared to other items in the same parent/scope (sorted ascending) */\n  order: number;\n};\n\nexport type OrderedExtensibleContainer = OrderedItem & {\n  /** Determines whether other items can be added to this after it has been defined */\n  isExtensible?: boolean;\n};\n\n/** Group of menu items that belongs in a column */\nexport type MenuGroupDetailsInColumn = OrderedExtensibleContainer & {\n  /** ID of column in which this group resides */\n  column: ReferencedItem;\n};\n\n/** Group of menu items that belongs in a submenu */\nexport type MenuGroupDetailsInSubMenu = OrderedExtensibleContainer & {\n  /** ID of menu item hosting the submenu in which this group resides */\n  menuItem: ReferencedItem;\n};\n\n/** Column that includes header text in a menu */\nexport type MenuColumnWithHeader = OrderedExtensibleContainer & {\n  /** Key that represents the text of the header text of the column */\n  label: LocalizeKey;\n};\n\nexport type MenuItemBase = OrderedItem & {\n  /** Menu group to which this menu item belongs */\n  group: ReferencedItem;\n  /** Key that represents the text of this menu item to display */\n  label: LocalizeKey;\n  /** Key that represents words the platform should reference when users are searching for menu items */\n  searchTerms?: LocalizeKey;\n  /** Key that represents the text to display if a mouse pointer hovers over the menu item */\n  tooltip?: LocalizeKey;\n  /** Additional information provided by developers to help people who perform localization */\n  localizeNotes: string;\n};\n\n/** Menu item that hosts a submenu */\nexport type MenuItemContainingSubmenu = MenuItemBase & {\n  /** ID for this menu item that holds a submenu */\n  id: ReferencedItem;\n};\n\n/** Menu item that runs a command */\nexport type MenuItemContainingCommand = MenuItemBase & {\n  /** Name of the PAPI command to run when this menu item is selected. */\n  command: ReferencedItem;\n  /** Path to the icon to display after the menu text */\n  iconPathAfter?: string;\n  /** Path to the icon to display before the menu text */\n  iconPathBefore?: string;\n};\n\n/**\n * Group of menu items that can be combined with other groups to form a single context menu/submenu.\n * Groups are separated using a line within the menu/submenu.\n */\nexport type GroupsInSingleColumnMenu = {\n  /** Named menu group */\n  [property: ReferencedItem]: OrderedExtensibleContainer | MenuGroupDetailsInSubMenu;\n};\n\n/**\n * Group of menu items that can be combined with other groups to form a single menu/submenu within a\n * multi-column menu. Groups are separated using a line within the menu/submenu.\n */\nexport type GroupsInMultiColumnMenu = {\n  /** Named menu group */\n  [property: ReferencedItem]: MenuGroupDetailsInColumn | MenuGroupDetailsInSubMenu;\n};\n\n/** Group of columns that can be combined with other columns to form a multi-column menu */\nexport type ColumnsWithHeaders = {\n  /** Named column of a menu */\n  [property: ReferencedItem]: MenuColumnWithHeader;\n  /** Defines whether columns can be added to this multi-column menu */\n  isExtensible?: boolean;\n};\n\n/** Menu that contains a column without a header */\nexport type SingleColumnMenu = {\n  /** Groups that belong in this menu */\n  groups: GroupsInSingleColumnMenu;\n  /** List of menu items that belong in this menu */\n  items: (MenuItemContainingCommand | MenuItemContainingSubmenu)[];\n};\n\n/** Menu that contains multiple columns with headers */\nexport type MultiColumnMenu = {\n  /** Columns that belong in this menu */\n  columns: ColumnsWithHeaders;\n  /** Groups that belong in this menu */\n  groups: GroupsInMultiColumnMenu;\n  /** List of menu items that belong in this menu */\n  items: (MenuItemContainingCommand | MenuItemContainingSubmenu)[];\n};\n\n/** Menus for one single web view */\nexport type WebViewMenu = {\n  /** Indicates whether the platform default menus should be included for this webview */\n  includeDefaults: boolean | undefined;\n  /** Menu that opens when you click on the top left corner of a tab */\n  topMenu: MultiColumnMenu | undefined;\n  /** Menu that opens when you right click on the main body/area of a tab */\n  contextMenu: SingleColumnMenu | undefined;\n};\n\n/** Menus for all web views */\nexport type WebViewMenus = {\n  /** Named web view */\n  [property: ReferencedItem]: WebViewMenu;\n};\n\n/** Platform.Bible menus before they are localized */\nexport type PlatformMenus = {\n  /** Top level menu for the application */\n  mainMenu: MultiColumnMenu;\n  /** Menus that apply per web view in the application */\n  webViewMenus: WebViewMenus;\n  /** Default context menu for web views that don't specify their own */\n  defaultWebViewContextMenu: SingleColumnMenu;\n  /** Default top menu for web views that don't specify their own */\n  defaultWebViewTopMenu: MultiColumnMenu;\n};\n\n/**\n * Type that converts any menu type before it is localized to what it is after it is localized. This\n * can be applied to any menu type as needed.\n */\nexport type Localized<T> = ReplaceType<ReplaceType<T, LocalizeKey, string>, ReferencedItem, string>;\n\n//----------------------------------------------------------------------------------------------\n// NOTE: If you change the schema below, make sure the TS types above get changed so they align.\n//----------------------------------------------------------------------------------------------\n/** JSON schema object that aligns with the PlatformMenus type */\nexport const menuDocumentSchema = {\n  title: 'Platform.Bible menus',\n  type: 'object',\n  properties: {\n    mainMenu: {\n      description: 'Top level menu for the application',\n      $ref: '#/$defs/multiColumnMenu',\n    },\n    defaultWebViewTopMenu: {\n      description: \"Default top menu for web views that don't specify their own\",\n      $ref: '#/$defs/multiColumnMenu',\n    },\n    defaultWebViewContextMenu: {\n      description: \"Default context menu for web views that don't specify their own\",\n      $ref: '#/$defs/singleColumnMenu',\n    },\n    webViewMenus: {\n      description: 'Menus that apply per web view in the application',\n      type: 'object',\n      patternProperties: {\n        '^[\\\\w\\\\-]+\\\\.[\\\\w\\\\-]+$': {\n          $ref: '#/$defs/menusForOneWebView',\n        },\n      },\n      additionalProperties: false,\n    },\n  },\n  required: ['mainMenu', 'defaultWebViewTopMenu', 'defaultWebViewContextMenu', 'webViewMenus'],\n  additionalProperties: false,\n  $defs: {\n    localizeKey: {\n      description:\n        \"Identifier for a string that will be localized in a menu based on the user's UI language\",\n      type: 'string',\n      pattern: '^%[\\\\w\\\\-\\\\.]+%$',\n    },\n    referencedItem: {\n      description:\n        'Name of some UI element (i.e., tab, column, group, menu item) or some PAPI object (i.e., command)',\n      type: 'string',\n      pattern: '^[\\\\w\\\\-]+\\\\.[\\\\w\\\\-]+$',\n    },\n    columnsWithHeaders: {\n      description:\n        'Group of columns that can be combined with other columns to form a multi-column menu',\n      type: 'object',\n      patternProperties: {\n        '^[\\\\w\\\\-]+\\\\.[\\\\w\\\\-]+$': {\n          description: 'Single column with a header string',\n          type: 'object',\n          properties: {\n            label: {\n              description: 'Header text for this this column in the UI',\n              $ref: '#/$defs/localizeKey',\n            },\n            localizeNotes: {\n              description:\n                'Additional information provided by developers to help people who perform localization',\n              type: 'string',\n            },\n            order: {\n              description:\n                'Relative order of this column compared to other columns (sorted ascending)',\n              type: 'number',\n            },\n            isExtensible: {\n              description:\n                'Defines whether contributions are allowed to add menu groups to this column',\n              type: 'boolean',\n            },\n          },\n          required: ['label', 'order'],\n          additionalProperties: false,\n        },\n      },\n      properties: {\n        isExtensible: {\n          description:\n            'Defines whether contributions are allowed to add columns to this multi-column menu',\n          type: 'boolean',\n        },\n      },\n    },\n    menuGroups: {\n      description:\n        'Group of menu items that can be combined with other groups to form a single menu/submenu. Groups are separated using a line within the menu/submenu.',\n      type: 'object',\n      patternProperties: {\n        '^[\\\\w\\\\-]+\\\\.[\\\\w\\\\-]+$': {\n          description: 'Single group that contains menu items',\n          type: 'object',\n          oneOf: [\n            {\n              properties: {\n                column: {\n                  description:\n                    'Column where this group belongs, not required for single column menus',\n                  $ref: '#/$defs/referencedItem',\n                },\n                order: {\n                  description:\n                    'Relative order of this group compared to other groups in the same column or submenu (sorted ascending)',\n                  type: 'number',\n                },\n                isExtensible: {\n                  description:\n                    'Defines whether contributions are allowed to add menu items to this menu group',\n                  type: 'boolean',\n                },\n              },\n              required: ['order'],\n              additionalProperties: false,\n            },\n            {\n              properties: {\n                menuItem: {\n                  description: 'Menu item that anchors the submenu where this group belongs',\n                  $ref: '#/$defs/referencedItem',\n                },\n                order: {\n                  description:\n                    'Relative order of this group compared to other groups in the same column or submenu (sorted ascending)',\n                  type: 'number',\n                },\n                isExtensible: {\n                  description:\n                    'Defines whether contributions are allowed to add menu items to this menu group',\n                  type: 'boolean',\n                },\n              },\n              required: ['menuItem', 'order'],\n              additionalProperties: false,\n            },\n          ],\n        },\n      },\n      additionalProperties: false,\n    },\n    menuItem: {\n      description:\n        'Single item in a menu that can be clicked on to take an action or can be the parent of a submenu',\n      type: 'object',\n      oneOf: [\n        {\n          properties: {\n            id: {\n              description: 'ID for this menu item that holds a submenu',\n              $ref: '#/$defs/referencedItem',\n            },\n          },\n          required: ['id'],\n        },\n        {\n          properties: {\n            command: {\n              description: 'Name of the PAPI command to run when this menu item is selected.',\n              $ref: '#/$defs/referencedItem',\n            },\n            iconPathBefore: {\n              description: 'Path to the icon to display before the menu text',\n              type: 'string',\n            },\n            iconPathAfter: {\n              description: 'Path to the icon to display after the menu text',\n              type: 'string',\n            },\n          },\n          required: ['command'],\n        },\n      ],\n      properties: {\n        label: {\n          description: 'Key that represents the text of this menu item to display',\n          $ref: '#/$defs/localizeKey',\n        },\n        tooltip: {\n          description:\n            'Key that represents the text to display if a mouse pointer hovers over the menu item',\n          $ref: '#/$defs/localizeKey',\n        },\n        searchTerms: {\n          description:\n            'Key that represents additional words the platform should reference when users are searching for menu items',\n          $ref: '#/$defs/localizeKey',\n        },\n        localizeNotes: {\n          description:\n            'Additional information provided by developers to help people who perform localization',\n          type: 'string',\n        },\n        group: {\n          description: 'Group to which this menu item belongs',\n          $ref: '#/$defs/referencedItem',\n        },\n        order: {\n          description:\n            'Relative order of this menu item compared to other menu items in the same group (sorted ascending)',\n          type: 'number',\n        },\n      },\n      required: ['label', 'group', 'order'],\n      unevaluatedProperties: false,\n    },\n    groupsAndItems: {\n      description: 'Core schema for a column',\n      type: 'object',\n      properties: {\n        groups: {\n          description: 'Groups that belong in this menu',\n          $ref: '#/$defs/menuGroups',\n        },\n        items: {\n          description: 'List of menu items that belong in this menu',\n          type: 'array',\n          items: { $ref: '#/$defs/menuItem' },\n          uniqueItems: true,\n        },\n      },\n      required: ['groups', 'items'],\n    },\n    singleColumnMenu: {\n      description: 'Menu that contains a column without a header',\n      type: 'object',\n      allOf: [{ $ref: '#/$defs/groupsAndItems' }],\n      unevaluatedProperties: false,\n    },\n    multiColumnMenu: {\n      description: 'Menu that can contain multiple columns with headers',\n      type: 'object',\n      allOf: [\n        { $ref: '#/$defs/groupsAndItems' },\n        {\n          properties: {\n            columns: {\n              description: 'Columns that belong in this menu',\n              $ref: '#/$defs/columnsWithHeaders',\n            },\n          },\n          required: ['columns'],\n        },\n      ],\n      unevaluatedProperties: false,\n    },\n    menusForOneWebView: {\n      description: 'Set of menus that are associated with a single tab',\n      type: 'object',\n      properties: {\n        includeDefaults: {\n          description:\n            'Indicates whether the platform default menus should be included for this webview',\n          type: 'boolean',\n        },\n        topMenu: {\n          description: 'Menu that opens when you click on the top left corner of a tab',\n          $ref: '#/$defs/multiColumnMenu',\n        },\n        contextMenu: {\n          description: 'Menu that opens when you right click on the main body/area of a tab',\n          $ref: '#/$defs/singleColumnMenu',\n        },\n      },\n      additionalProperties: false,\n    },\n  },\n};\n\nObject.freeze(menuDocumentSchema);\n"],"names":["AsyncVariable","variableName","rejectIfNotSettledWithinMS","__publicField","resolve","reject","value","throwIfAlreadySettled","reason","newGuid","s","isString","o","deepClone","obj","debounce","fn","delay","timeout","args","groupBy","items","keySelector","valueSelector","map","item","key","group","isErrorWithMessage","error","toErrorWithMessage","maybeError","getErrorMessage","wait","ms","waitForDuration","maxWaitTimeInMS","getAllObjectFunctionNames","objId","objectFunctionNames","property","objectPrototype","createSyncProxyForAsyncObject","getObject","objectToProxy","target","prop","DocumentCombinerEngine","baseDocument","options","documentName","document","previousDocumentVersion","documentToSet","contributions","contributionName","potentialOutput","outputIteration","contribution","mergeObjects","areNonArrayObjects","values","allMatch","areArrayObjects","startingPoint","copyFrom","ignoreDuplicateProperties","retVal","NonValidatingDocumentCombiner","finalOutput","_startingDocument","_documentName","_document","_output","UnsubscriberAsyncList","name","unsubscribers","unsubscriber","unsubs","results","unsubscriberSucceeded","index","PlatformEventEmitter","event","callback","callbackIndex","_a","Mutex","AsyncMutex","MutexMap","mutexID","scrBookData","FIRST_SCR_BOOK_NUM","LAST_SCR_BOOK_NUM","FIRST_SCR_CHAPTER_NUM","FIRST_SCR_VERSE_NUM","getChaptersForBook","bookNum","offsetBook","scrRef","offset","offsetChapter","offsetVerse","aggregateUnsubscribers","success","aggregateUnsubscriberAsyncs","unsubPromises","charRegex","astralRange","comboMarksRange","comboHalfMarksRange","comboSymbolsRange","comboMarksExtendedRange","comboMarksSupplementRange","comboRange","varRange","familyRange","astral","combo","fitz","modifier","nonAstral","regional","surrogatePair","zwj","blackFlag","family","optModifier","optVar","optJoin","seq","symbol","__importDefault","this","mod","dist","char_regex_1","require$$0","toArray","str","toArray_1","length","match","length_1","substring","begin","end","substring_1","substr","len","strLength","substr_1","limit","padString","padPosition","padRepeats","limit_1","indexOf","searchStr","pos","strArr","searchArr","finded","searchIndex","indexOf_1","at","string","stringLength","charAt","codePointAt","endsWith","searchString","endPosition","lastIndexOfSearchString","lastIndexOf","includes","position","partialString","stringzIndexOf","validatedPosition","stringzLength","normalize","form","upperCaseForm","padEnd","targetLength","stringzLimit","padStart","correctSliceIndex","slice","indexStart","indexEnd","newStart","newEnd","split","separator","splitLimit","result","regexSeparator","matches","currentIndex","matchIndex","matchLength","startsWith","stringzSubstr","stringzSubstring","stringzToArray","getOwnPropertyNames","getOwnPropertySymbols","hasOwnProperty","combineComparators","comparatorA","comparatorB","a","b","state","createIsCircular","areItemsEqual","cache","cachedA","cachedB","getStrictProperties","object","hasOwn","sameValueZeroEqual","OWNER","getOwnPropertyDescriptor","keys","areArraysEqual","areDatesEqual","areMapsEqual","matchedIndices","aIterable","aResult","bResult","bIterable","hasMatch","aKey","aValue","_b","bKey","bValue","areObjectsEqual","properties","areObjectsEqualStrict","descriptorA","descriptorB","arePrimitiveWrappersEqual","areRegExpsEqual","areSetsEqual","areTypedArraysEqual","ARGUMENTS_TAG","BOOLEAN_TAG","DATE_TAG","MAP_TAG","NUMBER_TAG","OBJECT_TAG","REG_EXP_TAG","SET_TAG","STRING_TAG","isArray","isTypedArray","assign","getTag","createEqualityComparator","constructor","tag","createEqualityComparatorConfig","circular","createCustomConfig","strict","config","areArraysEqual$1","areMapsEqual$1","areObjectsEqual$1","areSetsEqual$1","createInternalEqualityComparator","compare","_indexOrKeyA","_indexOrKeyB","_parentA","_parentB","createIsEqual","comparator","createState","equals","meta","deepEqual","createCustomEqual","createCustomInternalComparator","isEqualDeep","serialize","replacer","space","replacerKey","replacerValue","newValue","deserialize","reviver","replaceNull","parsedObject","isSerializable","serializedValue","htmlEncode","menuDocumentSchema"],"mappings":"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ACF,KAAM,SACN,kBAAmB,CACjB,0BAA2B,CACzB,YAAa,qCACb,KAAM,SACN,WAAY,CACV,MAAO,CACL,YAAa,6CACb,KAAM,qBACR,EACA,cAAe,CACb,YACE,wFACF,KAAM,QACR,EACA,MAAO,CACL,YACE,6EACF,KAAM,QACR,EACA,aAAc,CACZ,YACE,8EACF,KAAM,SACR,CACF,EACA,SAAU,CAAC,QAAS,OAAO,EAC3B,qBAAsB,EACxB,CACF,EACA,WAAY,CACV,aAAc,CACZ,YACE,qFACF,KAAM,SACR,CACF,CACF,EACA,WAAY,CACV,YACE,uJACF,KAAM,SACN,kBAAmB,CACjB,0BAA2B,CACzB,YAAa,wCACb,KAAM,SACN,MAAO,CACL,CACE,WAAY,CACV,OAAQ,CACN,YACE,wEACF,KAAM,wBACR,EACA,MAAO,CACL,YACE,yGACF,KAAM,QACR,EACA,aAAc,CACZ,YACE,iFACF,KAAM,SACR,CACF,EACA,SAAU,CAAC,OAAO,EAClB,qBAAsB,EACxB,EACA,CACE,WAAY,CACV,SAAU,CACR,YAAa,8DACb,KAAM,wBACR,EACA,MAAO,CACL,YACE,yGACF,KAAM,QACR,EACA,aAAc,CACZ,YACE,iFACF,KAAM,SACR,CACF,EACA,SAAU,CAAC,WAAY,OAAO,EAC9B,qBAAsB,EACxB,CACF,CACF,CACF,EACA,qBAAsB,EACxB,EACA,SAAU,CACR,YACE,mGACF,KAAM,SACN,MAAO,CACL,CACE,WAAY,CACV,GAAI,CACF,YAAa,6CACb,KAAM,wBACR,CACF,EACA,SAAU,CAAC,IAAI,CACjB,EACA,CACE,WAAY,CACV,QAAS,CACP,YAAa,mEACb,KAAM,wBACR,EACA,eAAgB,CACd,YAAa,mDACb,KAAM,QACR,EACA,cAAe,CACb,YAAa,kDACb,KAAM,QACR,CACF,EACA,SAAU,CAAC,SAAS,CACtB,CACF,EACA,WAAY,CACV,MAAO,CACL,YAAa,4DACb,KAAM,qBACR,EACA,QAAS,CACP,YACE,uFACF,KAAM,qBACR,EACA,YAAa,CACX,YACE,6GACF,KAAM,qBACR,EACA,cAAe,CACb,YACE,wFACF,KAAM,QACR,EACA,MAAO,CACL,YAAa,wCACb,KAAM,wBACR,EACA,MAAO,CACL,YACE,qGACF,KAAM,QACR,CACF,EACA,SAAU,CAAC,QAAS,QAAS,OAAO,EACpC,sBAAuB,EACzB,EACA,eAAgB,CACd,YAAa,2BACb,KAAM,SACN,WAAY,CACV,OAAQ,CACN,YAAa,kCACb,KAAM,oBACR,EACA,MAAO,CACL,YAAa,8CACb,KAAM,QACN,MAAO,CAAE,KAAM,kBAAmB,EAClC,YAAa,EACf,CACF,EACA,SAAU,CAAC,SAAU,OAAO,CAC9B,EACA,iBAAkB,CAChB,YAAa,+CACb,KAAM,SACN,MAAO,CAAC,CAAE,KAAM,yBAA0B,EAC1C,sBAAuB,EACzB,EACA,gBAAiB,CACf,YAAa,sDACb,KAAM,SACN,MAAO,CACL,CAAE,KAAM,wBAAyB,EACjC,CACE,WAAY,CACV,QAAS,CACP,YAAa,mCACb,KAAM,4BACR,CACF,EACA,SAAU,CAAC,SAAS,CACtB,CACF,EACA,sBAAuB,EACzB,EACA,mBAAoB,CAClB,YAAa,qDACb,KAAM,SACN,WAAY,CACV,gBAAiB,CACf,YACE,mFACF,KAAM,SACR,EACA,QAAS,CACP,YAAa,iEACb,KAAM,yBACR,EACA,YAAa,CACX,YAAa,sEACb,KAAM,0BACR,CACF,EACA,qBAAsB,EACxB,CACF,CACF,EAEA,OAAO,OAAOA,EAAkB","x_google_ignoreList":[10,11,13]}