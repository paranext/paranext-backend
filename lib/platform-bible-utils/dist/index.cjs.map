{"version":3,"file":"index.cjs","sources":["../src/async-variable.ts","../src/document-combiner-engine.ts","../src/unsubscriber-async-list.ts","../src/platform-event-emitter.model.ts","../src/scripture-util.ts","../src/unsubscriber.ts","../src/util.ts","../../../node_modules/fast-equals/dist/esm/index.mjs","../src/equality-checking.ts","../src/serialization.ts"],"sourcesContent":["/** This class provides a convenient way for one task to wait on a variable that another task sets. */\nexport default class AsyncVariable<T> {\n  private readonly variableName: string;\n  private readonly promiseToValue: Promise<T>;\n  private resolver: ((value: T) => void) | undefined;\n  private rejecter: ((reason: string | undefined) => void) | undefined;\n\n  /**\n   * Creates an instance of the class\n   *\n   * @param variableName Name to use when logging about this variable\n   * @param rejectIfNotSettledWithinMS Milliseconds to wait before verifying if the promise was\n   *   settled (resolved or rejected); will reject if it has not settled by that time. Use -1 if you\n   *   do not want a timeout at all.\n   */\n  constructor(variableName: string, rejectIfNotSettledWithinMS: number = 10000) {\n    this.variableName = variableName;\n    this.promiseToValue = new Promise<T>((resolve, reject) => {\n      this.resolver = resolve;\n      this.rejecter = reject;\n    });\n    if (rejectIfNotSettledWithinMS > 0) {\n      setTimeout(() => {\n        if (this.rejecter) {\n          this.rejecter(`Timeout reached when waiting for ${this.variableName} to settle`);\n          this.complete();\n        }\n      }, rejectIfNotSettledWithinMS);\n    }\n    Object.seal(this);\n  }\n\n  /**\n   * Get this variable's promise to a value. This always returns the same promise even after the\n   * value has been resolved or rejected.\n   *\n   * @returns The promise for the value to be set\n   */\n  get promise(): Promise<T> {\n    return this.promiseToValue;\n  }\n\n  /**\n   * A simple way to see if this variable's promise was resolved or rejected already\n   *\n   * @returns Whether the variable was already resolved or rejected\n   */\n  get hasSettled(): boolean {\n    return Object.isFrozen(this);\n  }\n\n  /**\n   * Resolve this variable's promise to the given value\n   *\n   * @param value This variable's promise will resolve to this value\n   * @param throwIfAlreadySettled Determines whether to throw if the variable was already resolved\n   *   or rejected\n   */\n  resolveToValue(value: T, throwIfAlreadySettled: boolean = false): void {\n    if (this.resolver) {\n      console.debug(`${this.variableName} is being resolved now`);\n      this.resolver(value);\n      this.complete();\n    } else {\n      if (throwIfAlreadySettled) throw Error(`${this.variableName} was already settled`);\n      console.debug(`Ignoring subsequent resolution of ${this.variableName}`);\n    }\n  }\n\n  /**\n   * Reject this variable's promise for the value with the given reason\n   *\n   * @param reason This variable's promise will be rejected with this reason\n   * @param throwIfAlreadySettled Determines whether to throw if the variable was already resolved\n   *   or rejected\n   */\n  rejectWithReason(reason: string, throwIfAlreadySettled: boolean = false): void {\n    if (this.rejecter) {\n      console.debug(`${this.variableName} is being rejected now`);\n      this.rejecter(reason);\n      this.complete();\n    } else {\n      if (throwIfAlreadySettled) throw Error(`${this.variableName} was already settled`);\n      console.debug(`Ignoring subsequent rejection of ${this.variableName}`);\n    }\n  }\n\n  /** Prevent any further updates to this variable */\n  private complete(): void {\n    this.resolver = undefined;\n    this.rejecter = undefined;\n    Object.freeze(this);\n  }\n}\n","export type JsonDocumentLike = { [key: string]: unknown };\n\n/**\n * Base class for any code that wants to compose JSON documents (in the form of JS objects) together\n * into a single output document.\n */\nexport default abstract class DocumentCombinerEngine {\n  protected startingDocument: JsonDocumentLike;\n  protected readonly contributions = new Map<string, JsonDocumentLike>();\n  protected latestOutput: JsonDocumentLike | undefined;\n  protected readonly copyDocuments: boolean;\n\n  /**\n   * Create a DocumentCombinerEngine instance\n   *\n   * @param startingDocument This is the first document that will be used when composing the output\n   * @param copyDocuments If true, this instance will perform a deep copy of all provided documents\n   *   before composing the output. If false, then changes made to provided documents after they are\n   *   contributed will be reflected in the next time output is composed.\n   */\n  protected constructor(startingDocument: JsonDocumentLike, copyDocuments: boolean) {\n    // Setting startingDocument redundantly because TS doesn't understand that updateBaseDocument does it\n    this.startingDocument = startingDocument;\n    this.copyDocuments = copyDocuments;\n    this.updateBaseDocument(startingDocument);\n  }\n\n  /** Gets the latest output of all composed documents */\n  get output(): JsonDocumentLike | undefined {\n    return this.latestOutput;\n  }\n\n  /**\n   * Update the starting document for composition process\n   *\n   * @param startingDocument Base JSON document/JS object that all other documents are added to\n   * @returns Recalculated output document given the new starting state and existing other documents\n   */\n  updateBaseDocument(startingDocument: JsonDocumentLike): JsonDocumentLike | undefined {\n    this.validateStartingDocument(startingDocument);\n    this.startingDocument = this.copyDocuments ? deepClone(startingDocument) : startingDocument;\n    return this.rebuild();\n  }\n\n  /**\n   * Add or update one of the contribution documents for the composition process\n   *\n   * @param documentName Name of the contributed document to combine\n   * @param document Content of the contributed document to combine\n   * @returns Recalculated output document given the new or updated contribution and existing other\n   *   documents\n   */\n  addOrUpdateContribution(\n    documentName: string,\n    document: JsonDocumentLike,\n  ): JsonDocumentLike | undefined {\n    this.validateContribution(documentName, document);\n    const previousDocumentVersion = this.contributions.get(documentName);\n    const documentToSet = this.copyDocuments && !!document ? deepClone(document) : document;\n    this.contributions.set(documentName, documentToSet);\n    try {\n      return this.rebuild();\n    } catch (error) {\n      // If the output isn't valid after adding/updating the contribution, put it back how it was\n      if (previousDocumentVersion) this.contributions.set(documentName, previousDocumentVersion);\n      else this.contributions.delete(documentName);\n      throw new Error(`Error when setting the document named ${documentName}: ${error}`);\n    }\n  }\n\n  /**\n   * Delete one of the contribution documents for the composition process\n   *\n   * @param documentName Name of the contributed document to delete\n   * @returns Recalculated output document given the remaining other documents\n   */\n  deleteContribution(documentName: string): object | undefined {\n    const document = this.contributions.get(documentName);\n    if (!document) throw new Error(`{documentKey} does not exist`);\n    this.contributions.delete(documentName);\n    try {\n      return this.rebuild();\n    } catch (error) {\n      // If the output isn't valid after deleting the contribution, put it back and rethrow\n      this.contributions.set(documentName, document);\n      throw new Error(`Error when deleting the document named ${documentName}: ${error}`);\n    }\n  }\n\n  /**\n   * Run the document composition process given the starting document and all contributions. Throws\n   * if the output document fails to validate properly.\n   *\n   * @returns Recalculated output document given the starting and contributed documents\n   */\n  rebuild(): JsonDocumentLike | undefined {\n    // The starting document is the output if there are no other contributions\n    if (this.contributions.size === 0) {\n      const potentialOutput = deepClone(this.startingDocument);\n      this.validateOutput(potentialOutput);\n      this.latestOutput = potentialOutput;\n      return this.latestOutput;\n    }\n\n    // Compose the output by validating each document one at a time to pinpoint errors better\n    let outputIteration = this.startingDocument;\n    this.contributions.forEach((contribution: JsonDocumentLike) => {\n      outputIteration = this.mergeObjects(outputIteration, contribution);\n      this.validateOutput(outputIteration);\n    });\n    this.latestOutput = outputIteration;\n    return this.latestOutput;\n  }\n\n  /**\n   * Recursively merge the properties of one object (copyFrom) into another (startingPoint). Throws\n   * if copyFrom would overwrite values already existing in startingPoint.\n   *\n   * @param startingPoint Object that is the starting point for the return value\n   * @param copyFrom Object whose values are copied into the return value\n   * @returns Object that is the combination of the two documents\n   */\n  private mergeObjects(\n    startingPoint: JsonDocumentLike,\n    copyFrom: JsonDocumentLike,\n  ): JsonDocumentLike {\n    const retVal = deepClone(startingPoint);\n    if (!copyFrom) return retVal;\n\n    Object.keys(copyFrom).forEach((key: string | number) => {\n      if (Object.hasOwn(startingPoint, key)) {\n        if (areNonArrayObjects(startingPoint[key], copyFrom[key])) {\n          retVal[key] = this.mergeObjects(\n            // We know these are objects from the `if` check\n            /* eslint-disable no-type-assertion/no-type-assertion */\n            startingPoint[key] as JsonDocumentLike,\n            copyFrom[key] as JsonDocumentLike,\n            /* eslint-enable no-type-assertion/no-type-assertion */\n          );\n        } else if (areArrayObjects(startingPoint[key], copyFrom[key])) {\n          // We know these are arrays because of the `else if` check\n          // eslint-disable-next-line no-type-assertion/no-type-assertion\n          retVal[key] = (retVal[key] as Array<unknown>).concat(copyFrom[key] as Array<unknown>);\n        } else {\n          throw new Error(`Cannot merge objects: key \"${key}\" already exists in the target object`);\n        }\n      } else {\n        retVal[key] = copyFrom[key];\n      }\n    });\n\n    return retVal;\n  }\n\n  /**\n   * Throw an error if the provided document is not a valid starting document.\n   *\n   * @param startingDocument Base JSON document/JS object that all other documents are added to\n   */\n  protected abstract validateStartingDocument(startingDocument: JsonDocumentLike): void;\n\n  /**\n   * Throw an error if the provided document is not a valid contribution document.\n   *\n   * @param documentName Name of the contributed document to combine\n   * @param document Content of the contributed document to combine\n   */\n  protected abstract validateContribution(documentName: string, document: JsonDocumentLike): void;\n\n  /**\n   * Throw an error if the provided output is not valid.\n   *\n   * @param output Final output document that could potentially be returned callers\n   */\n  protected abstract validateOutput(output: JsonDocumentLike): void;\n}\n\n// #region Helper functions\n\n/**\n * If deepClone isn't used when copying properties between objects, you may be left with dangling\n * references between the source and target of property copying operations.\n *\n * @param obj Object to clone\n * @returns Duplicate copy of `obj` without any references back to the original one\n */\nfunction deepClone<T>(obj: T): T {\n  // Assert the return type matches what is expected\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  return JSON.parse(JSON.stringify(obj)) as T;\n}\n\n/**\n * Determines if the input values are objects but not arrays\n *\n * @param values Objects to check\n * @returns True if all the values are objects but not arrays\n */\nfunction areNonArrayObjects(...values: unknown[]): boolean {\n  let allMatch = true;\n  values.forEach((value: unknown) => {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) allMatch = false;\n  });\n  return allMatch;\n}\n\n/**\n * Determines if the input values are arrays\n *\n * @param value Objects to check\n * @returns True if the values are arrays\n */\nfunction areArrayObjects(...values: unknown[]): boolean {\n  let allMatch = true;\n  values.forEach((value: unknown) => {\n    if (!value || typeof value !== 'object' || !Array.isArray(value)) allMatch = false;\n  });\n  return allMatch;\n}\n\n// #endregion\n","import { Dispose } from './disposal.model';\nimport { Unsubscriber, UnsubscriberAsync } from './unsubscriber';\n\n/** Simple collection for UnsubscriberAsync objects that also provides an easy way to run them. */\nexport default class UnsubscriberAsyncList {\n  readonly unsubscribers = new Set<UnsubscriberAsync | Unsubscriber>();\n\n  constructor(private name = 'Anonymous') {}\n\n  /**\n   * Add unsubscribers to the list. Note that duplicates are not added twice.\n   *\n   * @param unsubscribers - Objects that were returned from a registration process.\n   */\n  add(...unsubscribers: (UnsubscriberAsync | Unsubscriber | Dispose)[]) {\n    unsubscribers.forEach((unsubscriber) => {\n      if ('dispose' in unsubscriber) this.unsubscribers.add(unsubscriber.dispose);\n      else this.unsubscribers.add(unsubscriber);\n    });\n  }\n\n  /**\n   * Run all unsubscribers added to this list and then clear the list.\n   *\n   * @returns `true` if all unsubscribers succeeded, `false` otherwise.\n   */\n  async runAllUnsubscribers(): Promise<boolean> {\n    const unsubs = [...this.unsubscribers].map((unsubscriber) => unsubscriber());\n    const results = await Promise.all(unsubs);\n    this.unsubscribers.clear();\n    return results.every((unsubscriberSucceeded, index) => {\n      if (!unsubscriberSucceeded)\n        console.error(`UnsubscriberAsyncList ${this.name}: Unsubscriber at index ${index} failed!`);\n\n      return unsubscriberSucceeded;\n    });\n  }\n}\n","/** Interfaces, classes, and functions related to events and event emitters */\n\nimport { Dispose } from './disposal.model';\nimport { PlatformEvent, PlatformEventHandler } from './platform-event';\n\n/**\n * Event manager - accepts subscriptions to an event and runs the subscription callbacks when the\n * event is emitted Use eventEmitter.event(callback) to subscribe to the event. Use\n * eventEmitter.emit(event) to run the subscriptions. Generally, this EventEmitter should be\n * private, and its event should be public. That way, the emitter is not publicized, but anyone can\n * subscribe to the event.\n */\nexport default class PlatformEventEmitter<T> implements Dispose {\n  /**\n   * Subscribes a function to run when this event is emitted.\n   *\n   * @param callback Function to run with the event when it is emitted\n   * @returns Unsubscriber function to run to stop calling the passed-in function when the event is\n   *   emitted\n   * @alias event\n   */\n  subscribe = this.event;\n\n  /** All callback functions that will run when this event is emitted. Lazy loaded */\n  private subscriptions?: PlatformEventHandler<T>[];\n  /** Event for listeners to subscribe to. Lazy loaded */\n  private lazyEvent?: PlatformEvent<T>;\n  /** Whether this emitter has been disposed */\n  private isDisposed = false;\n\n  /**\n   * Event for listeners to subscribe to. Subscribes a function to run when this event is emitted.\n   * Use like `const unsubscriber = event(callback)`\n   *\n   * @param callback Function to run with the event when it is emitted\n   * @returns Unsubscriber function to run to stop calling the passed-in function when the event is\n   *   emitted\n   */\n  get event(): PlatformEvent<T> {\n    this.assertNotDisposed();\n\n    if (!this.lazyEvent) {\n      this.lazyEvent = (callback) => {\n        if (!callback || typeof callback !== 'function')\n          throw new Error(`Event handler callback must be a function!`);\n\n        // Initialize this.subscriptions if it does not exist\n        if (!this.subscriptions) this.subscriptions = [];\n\n        this.subscriptions.push(callback);\n\n        return () => {\n          if (!this.subscriptions) return false; // Did not find any subscribed callbacks\n\n          const callbackIndex = this.subscriptions.indexOf(callback);\n\n          if (callbackIndex < 0) return false; // Did not find this callback in the subscriptions\n\n          // Remove the callback\n          this.subscriptions.splice(callbackIndex, 1);\n\n          return true;\n        };\n      };\n    }\n    return this.lazyEvent;\n  }\n\n  /** Disposes of this event, preparing it to release from memory */\n  dispose = () => {\n    return this.disposeFn();\n  };\n\n  /**\n   * Runs the subscriptions for the event\n   *\n   * @param event Event data to provide to subscribed callbacks\n   */\n  emit = (event: T) => {\n    // Do not do anything other than emitFn here. This emit is just binding `this` to emitFn\n    this.emitFn(event);\n  };\n\n  /**\n   * Function that runs the subscriptions for the event. Added here so children can override emit\n   * and still call the base functionality. See NetworkEventEmitter.emit for example\n   */\n  protected emitFn(event: T) {\n    this.assertNotDisposed();\n\n    this.subscriptions?.forEach((callback) => callback(event));\n  }\n\n  /** Check to make sure this emitter is not disposed. Throw if it is */\n  protected assertNotDisposed() {\n    if (this.isDisposed) throw new Error('Emitter is disposed');\n  }\n\n  /**\n   * Disposes of this event, preparing it to release from memory. Added here so children can\n   * override emit and still call the base functionality.\n   */\n  protected disposeFn() {\n    this.assertNotDisposed();\n\n    this.isDisposed = true;\n    this.subscriptions = undefined;\n    this.lazyEvent = undefined;\n    return Promise.resolve(true);\n  }\n}\n","import { BookInfo, ScriptureReference } from './scripture.model';\n\nconst scrBookData: BookInfo[] = [\n  { shortName: 'ERR', fullNames: ['ERROR'], chapters: -1 },\n  { shortName: 'GEN', fullNames: ['Genesis'], chapters: 50 },\n  { shortName: 'EXO', fullNames: ['Exodus'], chapters: 40 },\n  { shortName: 'LEV', fullNames: ['Leviticus'], chapters: 27 },\n  { shortName: 'NUM', fullNames: ['Numbers'], chapters: 36 },\n  { shortName: 'DEU', fullNames: ['Deuteronomy'], chapters: 34 },\n  { shortName: 'JOS', fullNames: ['Joshua'], chapters: 24 },\n  { shortName: 'JDG', fullNames: ['Judges'], chapters: 21 },\n  { shortName: 'RUT', fullNames: ['Ruth'], chapters: 4 },\n  { shortName: '1SA', fullNames: ['1 Samuel'], chapters: 31 },\n  { shortName: '2SA', fullNames: ['2 Samuel'], chapters: 24 },\n  { shortName: '1KI', fullNames: ['1 Kings'], chapters: 22 },\n  { shortName: '2KI', fullNames: ['2 Kings'], chapters: 25 },\n  { shortName: '1CH', fullNames: ['1 Chronicles'], chapters: 29 },\n  { shortName: '2CH', fullNames: ['2 Chronicles'], chapters: 36 },\n  { shortName: 'EZR', fullNames: ['Ezra'], chapters: 10 },\n  { shortName: 'NEH', fullNames: ['Nehemiah'], chapters: 13 },\n  { shortName: 'EST', fullNames: ['Esther'], chapters: 10 },\n  { shortName: 'JOB', fullNames: ['Job'], chapters: 42 },\n  { shortName: 'PSA', fullNames: ['Psalm', 'Psalms'], chapters: 150 },\n  { shortName: 'PRO', fullNames: ['Proverbs'], chapters: 31 },\n  { shortName: 'ECC', fullNames: ['Ecclesiastes'], chapters: 12 },\n  { shortName: 'SNG', fullNames: ['Song of Solomon', 'Song of Songs'], chapters: 8 },\n  { shortName: 'ISA', fullNames: ['Isaiah'], chapters: 66 },\n  { shortName: 'JER', fullNames: ['Jeremiah'], chapters: 52 },\n  { shortName: 'LAM', fullNames: ['Lamentations'], chapters: 5 },\n  { shortName: 'EZK', fullNames: ['Ezekiel'], chapters: 48 },\n  { shortName: 'DAN', fullNames: ['Daniel'], chapters: 12 },\n  { shortName: 'HOS', fullNames: ['Hosea'], chapters: 14 },\n  { shortName: 'JOL', fullNames: ['Joel'], chapters: 3 },\n  { shortName: 'AMO', fullNames: ['Amos'], chapters: 9 },\n  { shortName: 'OBA', fullNames: ['Obadiah'], chapters: 1 },\n  { shortName: 'JON', fullNames: ['Jonah'], chapters: 4 },\n  { shortName: 'MIC', fullNames: ['Micah'], chapters: 7 },\n  { shortName: 'NAM', fullNames: ['Nahum'], chapters: 3 },\n  { shortName: 'HAB', fullNames: ['Habakkuk'], chapters: 3 },\n  { shortName: 'ZEP', fullNames: ['Zephaniah'], chapters: 3 },\n  { shortName: 'HAG', fullNames: ['Haggai'], chapters: 2 },\n  { shortName: 'ZEC', fullNames: ['Zechariah'], chapters: 14 },\n  { shortName: 'MAL', fullNames: ['Malachi'], chapters: 4 },\n  { shortName: 'MAT', fullNames: ['Matthew'], chapters: 28 },\n  { shortName: 'MRK', fullNames: ['Mark'], chapters: 16 },\n  { shortName: 'LUK', fullNames: ['Luke'], chapters: 24 },\n  { shortName: 'JHN', fullNames: ['John'], chapters: 21 },\n  { shortName: 'ACT', fullNames: ['Acts'], chapters: 28 },\n  { shortName: 'ROM', fullNames: ['Romans'], chapters: 16 },\n  { shortName: '1CO', fullNames: ['1 Corinthians'], chapters: 16 },\n  { shortName: '2CO', fullNames: ['2 Corinthians'], chapters: 13 },\n  { shortName: 'GAL', fullNames: ['Galatians'], chapters: 6 },\n  { shortName: 'EPH', fullNames: ['Ephesians'], chapters: 6 },\n  { shortName: 'PHP', fullNames: ['Philippians'], chapters: 4 },\n  { shortName: 'COL', fullNames: ['Colossians'], chapters: 4 },\n  { shortName: '1TH', fullNames: ['1 Thessalonians'], chapters: 5 },\n  { shortName: '2TH', fullNames: ['2 Thessalonians'], chapters: 3 },\n  { shortName: '1TI', fullNames: ['1 Timothy'], chapters: 6 },\n  { shortName: '2TI', fullNames: ['2 Timothy'], chapters: 4 },\n  { shortName: 'TIT', fullNames: ['Titus'], chapters: 3 },\n  { shortName: 'PHM', fullNames: ['Philemon'], chapters: 1 },\n  { shortName: 'HEB', fullNames: ['Hebrews'], chapters: 13 },\n  { shortName: 'JAS', fullNames: ['James'], chapters: 5 },\n  { shortName: '1PE', fullNames: ['1 Peter'], chapters: 5 },\n  { shortName: '2PE', fullNames: ['2 Peter'], chapters: 3 },\n  { shortName: '1JN', fullNames: ['1 John'], chapters: 5 },\n  { shortName: '2JN', fullNames: ['2 John'], chapters: 1 },\n  { shortName: '3JN', fullNames: ['3 John'], chapters: 1 },\n  { shortName: 'JUD', fullNames: ['Jude'], chapters: 1 },\n  { shortName: 'REV', fullNames: ['Revelation'], chapters: 22 },\n];\n\nexport const FIRST_SCR_BOOK_NUM = 1;\nexport const LAST_SCR_BOOK_NUM = scrBookData.length - 1;\nexport const FIRST_SCR_CHAPTER_NUM = 1;\nexport const FIRST_SCR_VERSE_NUM = 1;\n\nexport const getChaptersForBook = (bookNum: number): number => {\n  return scrBookData[bookNum]?.chapters ?? -1;\n};\n\nexport const offsetBook = (scrRef: ScriptureReference, offset: number): ScriptureReference => ({\n  bookNum: Math.max(FIRST_SCR_BOOK_NUM, Math.min(scrRef.bookNum + offset, LAST_SCR_BOOK_NUM)),\n  chapterNum: 1,\n  verseNum: 1,\n});\n\nexport const offsetChapter = (scrRef: ScriptureReference, offset: number): ScriptureReference => ({\n  ...scrRef,\n  chapterNum: Math.min(\n    Math.max(FIRST_SCR_CHAPTER_NUM, scrRef.chapterNum + offset),\n    getChaptersForBook(scrRef.bookNum),\n  ),\n  verseNum: 1,\n});\n\nexport const offsetVerse = (scrRef: ScriptureReference, offset: number): ScriptureReference => ({\n  ...scrRef,\n  verseNum: Math.max(FIRST_SCR_VERSE_NUM, scrRef.verseNum + offset),\n});\n","/** Function to run to dispose of something. Returns true if successfully unsubscribed */\nexport type Unsubscriber = () => boolean;\n\n/**\n * Returns an Unsubscriber function that combines all the unsubscribers passed in.\n *\n * @param unsubscribers All unsubscribers to aggregate into one unsubscriber\n * @returns Function that unsubscribes from all passed in unsubscribers when run\n */\nexport const aggregateUnsubscribers = (unsubscribers: Unsubscriber[]): Unsubscriber => {\n  return (...args) => {\n    // Run the unsubscriber for each handler\n    const unsubs = unsubscribers.map((unsubscriber) => unsubscriber(...args));\n\n    // If all the unsubscribers resolve to truthiness, we succeed\n    return unsubs.every((success) => success);\n  };\n};\n\n/**\n * Function to run to dispose of something that runs asynchronously. The promise resolves to true if\n * successfully unsubscribed\n */\nexport type UnsubscriberAsync = () => Promise<boolean>;\n\n/**\n * Returns an UnsubscriberAsync function that combines all the unsubscribers passed in.\n *\n * @param unsubscribers - All unsubscribers to aggregate into one unsubscriber.\n * @returns Function that unsubscribes from all passed in unsubscribers when run\n */\nexport const aggregateUnsubscriberAsyncs = (\n  unsubscribers: (UnsubscriberAsync | Unsubscriber)[],\n): UnsubscriberAsync => {\n  return async (...args) => {\n    // Run the unsubscriber for each handler\n    const unsubPromises = unsubscribers.map(async (unsubscriber) => unsubscriber(...args));\n\n    // If all the unsubscribers resolve to truthiness, we succeed\n    return (await Promise.all(unsubPromises)).every((success) => success);\n  };\n};\n","/** Collection of functions, objects, and types that are used as helpers in other services. */\n\n// Thanks to blubberdiblub at https://stackoverflow.com/a/68141099/217579\nexport function newGuid(): string {\n  return '00-0-4-1-000'.replace(/[^-]/g, (s) =>\n    // @ts-expect-error ts(2363) this works fine\n    // eslint-disable-next-line no-bitwise\n    (((Math.random() + ~~s) * 0x10000) >> s).toString(16).padStart(4, '0'),\n  );\n}\n\n// thanks to DRAX at https://stackoverflow.com/a/9436948\n/**\n * Determine whether the object is a string\n *\n * @param o Object to determine if it is a string\n * @returns True if the object is a string; false otherwise\n */\nexport function isString(o: unknown): o is string {\n  return typeof o === 'string' || o instanceof String;\n}\n\n/**\n * Get a function that reduces calls to the function passed in\n *\n * @param fn The function to debounce\n * @param delay How much delay in milliseconds after the most recent call to the debounced function\n *   to call the function\n * @returns Function that, when called, only calls the function passed in at maximum every delay ms\n */\n// We don't know the parameter types since this function can be anything\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function debounce<T extends (...args: any[]) => void>(fn: T, delay = 300): T {\n  if (isString(fn)) throw new Error('Tried to debounce a string! Could be XSS');\n  let timeout: ReturnType<typeof setTimeout>;\n  // Ensure the right return type.\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  return ((...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), delay);\n  }) as T;\n}\n\n/**\n * Groups each item in the array of items into a map according to the keySelector\n *\n * @param items Array of items to group by\n * @param keySelector Function to run on each item to get the key for the group to which it belongs\n * @param valueSelector Function to run on each item to get the value it should have in the group\n *   (like map function). If not provided, uses the item itself\n * @returns Map of keys to groups of values corresponding to each item\n */\nexport function groupBy<T, K>(items: T[], keySelector: (item: T) => K): Map<K, Array<T>>;\nexport function groupBy<T, K, V>(\n  items: T[],\n  keySelector: (item: T) => K,\n  valueSelector: (item: T, key: K) => V,\n): Map<K, Array<V>>;\nexport function groupBy<T, K, V = T>(\n  items: T[],\n  keySelector: (item: T) => K,\n  valueSelector?: (item: T, key: K) => V,\n): Map<K, Array<V | T>> {\n  const map = new Map<K, Array<V | T>>();\n  items.forEach((item) => {\n    const key = keySelector(item);\n    const group = map.get(key);\n    const value = valueSelector ? valueSelector(item, key) : item;\n    if (group) group.push(value);\n    else map.set(key, [value]);\n  });\n  return map;\n}\n\n// From https://kentcdodds.com/blog/get-a-catch-block-error-message-with-typescript\ntype ErrorWithMessage = {\n  message: string;\n};\n\n// From https://kentcdodds.com/blog/get-a-catch-block-error-message-with-typescript\nfunction isErrorWithMessage(error: unknown): error is ErrorWithMessage {\n  return (\n    typeof error === 'object' &&\n    // We're potentially dealing with objects we didn't create, so they might contain `null`\n    // eslint-disable-next-line no-null/no-null\n    error !== null &&\n    'message' in error &&\n    // Type assert `error` to check it's `message`.\n    // eslint-disable-next-line no-type-assertion/no-type-assertion\n    typeof (error as Record<string, unknown>).message === 'string'\n  );\n}\n\n// From https://kentcdodds.com/blog/get-a-catch-block-error-message-with-typescript\n/**\n * Function to get an error from the object (useful for getting an error in a catch block)\n *\n * @param error Error object whose message to get\n * @returns Message of the error - if object has message, returns message. Otherwise tries to\n *   stringify\n */\nfunction toErrorWithMessage(maybeError: unknown): ErrorWithMessage {\n  if (isErrorWithMessage(maybeError)) return maybeError;\n\n  try {\n    return new Error(JSON.stringify(maybeError));\n  } catch {\n    // fallback in case there's an error stringifying the maybeError\n    // like with circular references for example.\n    return new Error(String(maybeError));\n  }\n}\n\n// From https://kentcdodds.com/blog/get-a-catch-block-error-message-with-typescript\n/**\n * Function to get an error message from the object (useful for getting error message in a catch\n * block)\n *\n * @example `try {...} catch (e) { logger.info(getErrorMessage(e)) }`\n *\n * @param error Error object whose message to get\n * @returns Message of the error - if object has message, returns message. Otherwise tries to\n *   stringify\n */\nexport function getErrorMessage(error: unknown) {\n  return toErrorWithMessage(error).message;\n}\n\n/** Asynchronously waits for the specified number of milliseconds. (wraps setTimeout in a promise) */\nexport function wait(ms: number) {\n  // eslint-disable-next-line no-promise-executor-return\n  return new Promise<void>((resolve) => setTimeout(resolve, ms));\n}\n\n/**\n * Runs the specified function and will timeout if it takes longer than the specified wait time\n *\n * @param fn The function to run\n * @param maxWaitTimeInMS The maximum amount of time to wait for the function to resolve\n * @returns Promise that resolves to the resolved value of the function or undefined if it ran\n *   longer than the specified wait time\n */\nexport function waitForDuration<TResult>(fn: () => Promise<TResult>, maxWaitTimeInMS: number) {\n  const timeout = wait(maxWaitTimeInMS).then(() => undefined);\n  return Promise.any([timeout, fn()]);\n}\n\n/**\n * Get all functions on an object and its prototype chain (so we don't miss any class methods or any\n * object methods). Note that the functions on the final item in the prototype chain (i.e., Object)\n * are skipped to avoid including functions like `__defineGetter__`, `__defineSetter__`, `toString`,\n * etc.\n *\n * @param obj Object whose functions to get\n * @param objId Optional ID of the object to use for debug logging\n * @returns Array of all function names on an object\n */\n// Note: lodash has something that MIGHT do the same thing as this. Investigate for https://github.com/paranext/paranext-core/issues/134\nexport function getAllObjectFunctionNames(\n  obj: { [property: string]: unknown },\n  objId: string = 'obj',\n): Set<string> {\n  const objectFunctionNames = new Set<string>();\n\n  // Get all function properties directly defined on the object\n  Object.getOwnPropertyNames(obj).forEach((property) => {\n    try {\n      if (typeof obj[property] === 'function') objectFunctionNames.add(property);\n    } catch (error) {\n      console.debug(`Skipping ${property} on ${objId} due to error: ${error}`);\n    }\n  });\n\n  // Walk up the prototype chain and get additional function properties, skipping the functions\n  // provided by the final (Object) prototype\n  let objectPrototype = Object.getPrototypeOf(obj);\n  while (objectPrototype && Object.getPrototypeOf(objectPrototype)) {\n    Object.getOwnPropertyNames(objectPrototype).forEach((property) => {\n      try {\n        if (typeof obj[property] === 'function') objectFunctionNames.add(property);\n      } catch (error) {\n        console.debug(`Skipping ${property} on ${objId}'s prototype due to error: ${error}`);\n      }\n    });\n    objectPrototype = Object.getPrototypeOf(objectPrototype);\n  }\n\n  return objectFunctionNames;\n}\n","var getOwnPropertyNames = Object.getOwnPropertyNames, getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Combine two comparators into a single comparators.\n */\nfunction combineComparators(comparatorA, comparatorB) {\n    return function isEqual(a, b, state) {\n        return comparatorA(a, b, state) && comparatorB(a, b, state);\n    };\n}\n/**\n * Wrap the provided `areItemsEqual` method to manage the circular state, allowing\n * for circular references to be safely included in the comparison without creating\n * stack overflows.\n */\nfunction createIsCircular(areItemsEqual) {\n    return function isCircular(a, b, state) {\n        if (!a || !b || typeof a !== 'object' || typeof b !== 'object') {\n            return areItemsEqual(a, b, state);\n        }\n        var cache = state.cache;\n        var cachedA = cache.get(a);\n        var cachedB = cache.get(b);\n        if (cachedA && cachedB) {\n            return cachedA === b && cachedB === a;\n        }\n        cache.set(a, b);\n        cache.set(b, a);\n        var result = areItemsEqual(a, b, state);\n        cache.delete(a);\n        cache.delete(b);\n        return result;\n    };\n}\n/**\n * Get the properties to strictly examine, which include both own properties that are\n * not enumerable and symbol properties.\n */\nfunction getStrictProperties(object) {\n    return getOwnPropertyNames(object).concat(getOwnPropertySymbols(object));\n}\n/**\n * Whether the object contains the property passed as an own property.\n */\nvar hasOwn = Object.hasOwn ||\n    (function (object, property) {\n        return hasOwnProperty.call(object, property);\n    });\n/**\n * Whether the values passed are strictly equal or both NaN.\n */\nfunction sameValueZeroEqual(a, b) {\n    return a || b ? a === b : a === b || (a !== a && b !== b);\n}\n\nvar OWNER = '_owner';\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor, keys = Object.keys;\n/**\n * Whether the arrays are equal in value.\n */\nfunction areArraysEqual(a, b, state) {\n    var index = a.length;\n    if (b.length !== index) {\n        return false;\n    }\n    while (index-- > 0) {\n        if (!state.equals(a[index], b[index], index, index, a, b, state)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Whether the dates passed are equal in value.\n */\nfunction areDatesEqual(a, b) {\n    return sameValueZeroEqual(a.getTime(), b.getTime());\n}\n/**\n * Whether the `Map`s are equal in value.\n */\nfunction areMapsEqual(a, b, state) {\n    if (a.size !== b.size) {\n        return false;\n    }\n    var matchedIndices = {};\n    var aIterable = a.entries();\n    var index = 0;\n    var aResult;\n    var bResult;\n    while ((aResult = aIterable.next())) {\n        if (aResult.done) {\n            break;\n        }\n        var bIterable = b.entries();\n        var hasMatch = false;\n        var matchIndex = 0;\n        while ((bResult = bIterable.next())) {\n            if (bResult.done) {\n                break;\n            }\n            var _a = aResult.value, aKey = _a[0], aValue = _a[1];\n            var _b = bResult.value, bKey = _b[0], bValue = _b[1];\n            if (!hasMatch &&\n                !matchedIndices[matchIndex] &&\n                (hasMatch =\n                    state.equals(aKey, bKey, index, matchIndex, a, b, state) &&\n                        state.equals(aValue, bValue, aKey, bKey, a, b, state))) {\n                matchedIndices[matchIndex] = true;\n            }\n            matchIndex++;\n        }\n        if (!hasMatch) {\n            return false;\n        }\n        index++;\n    }\n    return true;\n}\n/**\n * Whether the objects are equal in value.\n */\nfunction areObjectsEqual(a, b, state) {\n    var properties = keys(a);\n    var index = properties.length;\n    if (keys(b).length !== index) {\n        return false;\n    }\n    var property;\n    // Decrementing `while` showed faster results than either incrementing or\n    // decrementing `for` loop and than an incrementing `while` loop. Declarative\n    // methods like `some` / `every` were not used to avoid incurring the garbage\n    // cost of anonymous callbacks.\n    while (index-- > 0) {\n        property = properties[index];\n        if (property === OWNER &&\n            (a.$$typeof || b.$$typeof) &&\n            a.$$typeof !== b.$$typeof) {\n            return false;\n        }\n        if (!hasOwn(b, property) ||\n            !state.equals(a[property], b[property], property, property, a, b, state)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Whether the objects are equal in value with strict property checking.\n */\nfunction areObjectsEqualStrict(a, b, state) {\n    var properties = getStrictProperties(a);\n    var index = properties.length;\n    if (getStrictProperties(b).length !== index) {\n        return false;\n    }\n    var property;\n    var descriptorA;\n    var descriptorB;\n    // Decrementing `while` showed faster results than either incrementing or\n    // decrementing `for` loop and than an incrementing `while` loop. Declarative\n    // methods like `some` / `every` were not used to avoid incurring the garbage\n    // cost of anonymous callbacks.\n    while (index-- > 0) {\n        property = properties[index];\n        if (property === OWNER &&\n            (a.$$typeof || b.$$typeof) &&\n            a.$$typeof !== b.$$typeof) {\n            return false;\n        }\n        if (!hasOwn(b, property)) {\n            return false;\n        }\n        if (!state.equals(a[property], b[property], property, property, a, b, state)) {\n            return false;\n        }\n        descriptorA = getOwnPropertyDescriptor(a, property);\n        descriptorB = getOwnPropertyDescriptor(b, property);\n        if ((descriptorA || descriptorB) &&\n            (!descriptorA ||\n                !descriptorB ||\n                descriptorA.configurable !== descriptorB.configurable ||\n                descriptorA.enumerable !== descriptorB.enumerable ||\n                descriptorA.writable !== descriptorB.writable)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Whether the primitive wrappers passed are equal in value.\n */\nfunction arePrimitiveWrappersEqual(a, b) {\n    return sameValueZeroEqual(a.valueOf(), b.valueOf());\n}\n/**\n * Whether the regexps passed are equal in value.\n */\nfunction areRegExpsEqual(a, b) {\n    return a.source === b.source && a.flags === b.flags;\n}\n/**\n * Whether the `Set`s are equal in value.\n */\nfunction areSetsEqual(a, b, state) {\n    if (a.size !== b.size) {\n        return false;\n    }\n    var matchedIndices = {};\n    var aIterable = a.values();\n    var aResult;\n    var bResult;\n    while ((aResult = aIterable.next())) {\n        if (aResult.done) {\n            break;\n        }\n        var bIterable = b.values();\n        var hasMatch = false;\n        var matchIndex = 0;\n        while ((bResult = bIterable.next())) {\n            if (bResult.done) {\n                break;\n            }\n            if (!hasMatch &&\n                !matchedIndices[matchIndex] &&\n                (hasMatch = state.equals(aResult.value, bResult.value, aResult.value, bResult.value, a, b, state))) {\n                matchedIndices[matchIndex] = true;\n            }\n            matchIndex++;\n        }\n        if (!hasMatch) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Whether the TypedArray instances are equal in value.\n */\nfunction areTypedArraysEqual(a, b) {\n    var index = a.length;\n    if (b.length !== index) {\n        return false;\n    }\n    while (index-- > 0) {\n        if (a[index] !== b[index]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nvar ARGUMENTS_TAG = '[object Arguments]';\nvar BOOLEAN_TAG = '[object Boolean]';\nvar DATE_TAG = '[object Date]';\nvar MAP_TAG = '[object Map]';\nvar NUMBER_TAG = '[object Number]';\nvar OBJECT_TAG = '[object Object]';\nvar REG_EXP_TAG = '[object RegExp]';\nvar SET_TAG = '[object Set]';\nvar STRING_TAG = '[object String]';\nvar isArray = Array.isArray;\nvar isTypedArray = typeof ArrayBuffer === 'function' && ArrayBuffer.isView\n    ? ArrayBuffer.isView\n    : null;\nvar assign = Object.assign;\nvar getTag = Object.prototype.toString.call.bind(Object.prototype.toString);\n/**\n * Create a comparator method based on the type-specific equality comparators passed.\n */\nfunction createEqualityComparator(_a) {\n    var areArraysEqual = _a.areArraysEqual, areDatesEqual = _a.areDatesEqual, areMapsEqual = _a.areMapsEqual, areObjectsEqual = _a.areObjectsEqual, arePrimitiveWrappersEqual = _a.arePrimitiveWrappersEqual, areRegExpsEqual = _a.areRegExpsEqual, areSetsEqual = _a.areSetsEqual, areTypedArraysEqual = _a.areTypedArraysEqual;\n    /**\n     * compare the value of the two objects and return true if they are equivalent in values\n     */\n    return function comparator(a, b, state) {\n        // If the items are strictly equal, no need to do a value comparison.\n        if (a === b) {\n            return true;\n        }\n        // If the items are not non-nullish objects, then the only possibility\n        // of them being equal but not strictly is if they are both `NaN`. Since\n        // `NaN` is uniquely not equal to itself, we can use self-comparison of\n        // both objects, which is faster than `isNaN()`.\n        if (a == null ||\n            b == null ||\n            typeof a !== 'object' ||\n            typeof b !== 'object') {\n            return a !== a && b !== b;\n        }\n        var constructor = a.constructor;\n        // Checks are listed in order of commonality of use-case:\n        //   1. Common complex object types (plain object, array)\n        //   2. Common data values (date, regexp)\n        //   3. Less-common complex object types (map, set)\n        //   4. Less-common data values (promise, primitive wrappers)\n        // Inherently this is both subjective and assumptive, however\n        // when reviewing comparable libraries in the wild this order\n        // appears to be generally consistent.\n        // Constructors should match, otherwise there is potential for false positives\n        // between class and subclass or custom object and POJO.\n        if (constructor !== b.constructor) {\n            return false;\n        }\n        // `isPlainObject` only checks against the object's own realm. Cross-realm\n        // comparisons are rare, and will be handled in the ultimate fallback, so\n        // we can avoid capturing the string tag.\n        if (constructor === Object) {\n            return areObjectsEqual(a, b, state);\n        }\n        // `isArray()` works on subclasses and is cross-realm, so we can avoid capturing\n        // the string tag or doing an `instanceof` check.\n        if (isArray(a)) {\n            return areArraysEqual(a, b, state);\n        }\n        // `isTypedArray()` works on all possible TypedArray classes, so we can avoid\n        // capturing the string tag or comparing against all possible constructors.\n        if (isTypedArray != null && isTypedArray(a)) {\n            return areTypedArraysEqual(a, b, state);\n        }\n        // Try to fast-path equality checks for other complex object types in the\n        // same realm to avoid capturing the string tag. Strict equality is used\n        // instead of `instanceof` because it is more performant for the common\n        // use-case. If someone is subclassing a native class, it will be handled\n        // with the string tag comparison.\n        if (constructor === Date) {\n            return areDatesEqual(a, b, state);\n        }\n        if (constructor === RegExp) {\n            return areRegExpsEqual(a, b, state);\n        }\n        if (constructor === Map) {\n            return areMapsEqual(a, b, state);\n        }\n        if (constructor === Set) {\n            return areSetsEqual(a, b, state);\n        }\n        // Since this is a custom object, capture the string tag to determing its type.\n        // This is reasonably performant in modern environments like v8 and SpiderMonkey.\n        var tag = getTag(a);\n        if (tag === DATE_TAG) {\n            return areDatesEqual(a, b, state);\n        }\n        if (tag === REG_EXP_TAG) {\n            return areRegExpsEqual(a, b, state);\n        }\n        if (tag === MAP_TAG) {\n            return areMapsEqual(a, b, state);\n        }\n        if (tag === SET_TAG) {\n            return areSetsEqual(a, b, state);\n        }\n        if (tag === OBJECT_TAG) {\n            // The exception for value comparison is custom `Promise`-like class instances. These should\n            // be treated the same as standard `Promise` objects, which means strict equality, and if\n            // it reaches this point then that strict equality comparison has already failed.\n            return (typeof a.then !== 'function' &&\n                typeof b.then !== 'function' &&\n                areObjectsEqual(a, b, state));\n        }\n        // If an arguments tag, it should be treated as a standard object.\n        if (tag === ARGUMENTS_TAG) {\n            return areObjectsEqual(a, b, state);\n        }\n        // As the penultimate fallback, check if the values passed are primitive wrappers. This\n        // is very rare in modern JS, which is why it is deprioritized compared to all other object\n        // types.\n        if (tag === BOOLEAN_TAG || tag === NUMBER_TAG || tag === STRING_TAG) {\n            return arePrimitiveWrappersEqual(a, b, state);\n        }\n        // If not matching any tags that require a specific type of comparison, then we hard-code false because\n        // the only thing remaining is strict equality, which has already been compared. This is for a few reasons:\n        //   - Certain types that cannot be introspected (e.g., `WeakMap`). For these types, this is the only\n        //     comparison that can be made.\n        //   - For types that can be introspected, but rarely have requirements to be compared\n        //     (`ArrayBuffer`, `DataView`, etc.), the cost is avoided to prioritize the common\n        //     use-cases (may be included in a future release, if requested enough).\n        //   - For types that can be introspected but do not have an objective definition of what\n        //     equality is (`Error`, etc.), the subjective decision is to be conservative and strictly compare.\n        // In all cases, these decisions should be reevaluated based on changes to the language and\n        // common development practices.\n        return false;\n    };\n}\n/**\n * Create the configuration object used for building comparators.\n */\nfunction createEqualityComparatorConfig(_a) {\n    var circular = _a.circular, createCustomConfig = _a.createCustomConfig, strict = _a.strict;\n    var config = {\n        areArraysEqual: strict\n            ? areObjectsEqualStrict\n            : areArraysEqual,\n        areDatesEqual: areDatesEqual,\n        areMapsEqual: strict\n            ? combineComparators(areMapsEqual, areObjectsEqualStrict)\n            : areMapsEqual,\n        areObjectsEqual: strict\n            ? areObjectsEqualStrict\n            : areObjectsEqual,\n        arePrimitiveWrappersEqual: arePrimitiveWrappersEqual,\n        areRegExpsEqual: areRegExpsEqual,\n        areSetsEqual: strict\n            ? combineComparators(areSetsEqual, areObjectsEqualStrict)\n            : areSetsEqual,\n        areTypedArraysEqual: strict\n            ? areObjectsEqualStrict\n            : areTypedArraysEqual,\n    };\n    if (createCustomConfig) {\n        config = assign({}, config, createCustomConfig(config));\n    }\n    if (circular) {\n        var areArraysEqual$1 = createIsCircular(config.areArraysEqual);\n        var areMapsEqual$1 = createIsCircular(config.areMapsEqual);\n        var areObjectsEqual$1 = createIsCircular(config.areObjectsEqual);\n        var areSetsEqual$1 = createIsCircular(config.areSetsEqual);\n        config = assign({}, config, {\n            areArraysEqual: areArraysEqual$1,\n            areMapsEqual: areMapsEqual$1,\n            areObjectsEqual: areObjectsEqual$1,\n            areSetsEqual: areSetsEqual$1,\n        });\n    }\n    return config;\n}\n/**\n * Default equality comparator pass-through, used as the standard `isEqual` creator for\n * use inside the built comparator.\n */\nfunction createInternalEqualityComparator(compare) {\n    return function (a, b, _indexOrKeyA, _indexOrKeyB, _parentA, _parentB, state) {\n        return compare(a, b, state);\n    };\n}\n/**\n * Create the `isEqual` function used by the consuming application.\n */\nfunction createIsEqual(_a) {\n    var circular = _a.circular, comparator = _a.comparator, createState = _a.createState, equals = _a.equals, strict = _a.strict;\n    if (createState) {\n        return function isEqual(a, b) {\n            var _a = createState(), _b = _a.cache, cache = _b === void 0 ? circular ? new WeakMap() : undefined : _b, meta = _a.meta;\n            return comparator(a, b, {\n                cache: cache,\n                equals: equals,\n                meta: meta,\n                strict: strict,\n            });\n        };\n    }\n    if (circular) {\n        return function isEqual(a, b) {\n            return comparator(a, b, {\n                cache: new WeakMap(),\n                equals: equals,\n                meta: undefined,\n                strict: strict,\n            });\n        };\n    }\n    var state = {\n        cache: undefined,\n        equals: equals,\n        meta: undefined,\n        strict: strict,\n    };\n    return function isEqual(a, b) {\n        return comparator(a, b, state);\n    };\n}\n\n/**\n * Whether the items passed are deeply-equal in value.\n */\nvar deepEqual = createCustomEqual();\n/**\n * Whether the items passed are deeply-equal in value based on strict comparison.\n */\nvar strictDeepEqual = createCustomEqual({ strict: true });\n/**\n * Whether the items passed are deeply-equal in value, including circular references.\n */\nvar circularDeepEqual = createCustomEqual({ circular: true });\n/**\n * Whether the items passed are deeply-equal in value, including circular references,\n * based on strict comparison.\n */\nvar strictCircularDeepEqual = createCustomEqual({\n    circular: true,\n    strict: true,\n});\n/**\n * Whether the items passed are shallowly-equal in value.\n */\nvar shallowEqual = createCustomEqual({\n    createInternalComparator: function () { return sameValueZeroEqual; },\n});\n/**\n * Whether the items passed are shallowly-equal in value based on strict comparison\n */\nvar strictShallowEqual = createCustomEqual({\n    strict: true,\n    createInternalComparator: function () { return sameValueZeroEqual; },\n});\n/**\n * Whether the items passed are shallowly-equal in value, including circular references.\n */\nvar circularShallowEqual = createCustomEqual({\n    circular: true,\n    createInternalComparator: function () { return sameValueZeroEqual; },\n});\n/**\n * Whether the items passed are shallowly-equal in value, including circular references,\n * based on strict comparison.\n */\nvar strictCircularShallowEqual = createCustomEqual({\n    circular: true,\n    createInternalComparator: function () { return sameValueZeroEqual; },\n    strict: true,\n});\n/**\n * Create a custom equality comparison method.\n *\n * This can be done to create very targeted comparisons in extreme hot-path scenarios\n * where the standard methods are not performant enough, but can also be used to provide\n * support for legacy environments that do not support expected features like\n * `RegExp.prototype.flags` out of the box.\n */\nfunction createCustomEqual(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.circular, circular = _a === void 0 ? false : _a, createCustomInternalComparator = options.createInternalComparator, createState = options.createState, _b = options.strict, strict = _b === void 0 ? false : _b;\n    var config = createEqualityComparatorConfig(options);\n    var comparator = createEqualityComparator(config);\n    var equals = createCustomInternalComparator\n        ? createCustomInternalComparator(comparator)\n        : createInternalEqualityComparator(comparator);\n    return createIsEqual({ circular: circular, comparator: comparator, createState: createState, equals: equals, strict: strict });\n}\n\nexport { circularDeepEqual, circularShallowEqual, createCustomEqual, deepEqual, sameValueZeroEqual, shallowEqual, strictCircularDeepEqual, strictCircularShallowEqual, strictDeepEqual, strictShallowEqual };\n//# sourceMappingURL=index.mjs.map\n","// There is a circular version https://www.npmjs.com/package/fast-equals#circulardeepequal that I\n// think allows comparing React refs (which have circular references in particular places that this\n// library would ignore). Maybe we can change to that version sometime if needed.\nimport { deepEqual as isEqualDeep } from 'fast-equals';\n\n/**\n * Check that two objects are deeply equal, comparing members of each object and such\n *\n * @param a The first object to compare\n * @param b The second object to compare\n *\n *   WARNING: Objects like arrays from different iframes have different constructor function\n *   references even if they do the same thing, so this deep equality comparison fails objects that\n *   look the same but have different constructors because different constructors could produce\n *   false positives in [a few specific\n *   situations](https://github.com/planttheidea/fast-equals/blob/a41afc0a240ad5a472e47b53791e9be017f52281/src/comparator.ts#L96).\n *   This means that two objects like arrays from different iframes that look the same will fail\n *   this check. Please use some other means to check deep equality in those situations.\n *\n *   Note: This deep equality check considers `undefined` values on keys of objects NOT to be equal to\n *   not specifying the key at all. For example, `{ stuff: 3, things: undefined }` and `{ stuff: 3\n *   }` are not considered equal in this case\n *\n *   - For more information and examples, see [this\n *       CodeSandbox](https://codesandbox.io/s/deepequallibrarycomparison-4g4kk4?file=/src/index.mjs).\n *\n * @returns True if a and b are deeply equal; false otherwise\n */\nexport default function deepEqual(a: unknown, b: unknown) {\n  return isEqualDeep(a, b);\n}\n","/**\n * Converts a JavaScript value to a JSON string, changing `undefined` properties in the JavaScript\n * object to `null` properties in the JSON string.\n *\n * WARNING: `null` values will become `undefined` values after passing through {@link serialize} then\n * {@link deserialize}. For example, `{ a: 1, b: undefined, c: null }` will become `{ a: 1, b:\n * undefined, c: undefined }`. If you are passing around user data that needs to retain `null`\n * values, you should wrap them yourself in a string before using this function. Alternatively, you\n * can write your own replacer that will preserve `null` in a way that you can recover later.\n *\n * @param value A JavaScript value, usually an object or array, to be converted.\n * @param replacer A function that transforms the results. Note that all `undefined` values returned\n *   by the replacer will be further transformed into `null` in the JSON string.\n * @param space Adds indentation, white space, and line break characters to the return-value JSON\n *   text to make it easier to read. See the `space` parameter of `JSON.stringify` for more\n *   details.\n */\nexport function serialize(\n  value: unknown,\n  replacer?: (this: unknown, key: string, value: unknown) => unknown,\n  space?: string | number,\n): string {\n  const undefinedReplacer = (replacerKey: string, replacerValue: unknown) => {\n    let newValue = replacerValue;\n    if (replacer) newValue = replacer(replacerKey, newValue);\n    // All `undefined` values become `null` on the way from JS objects into JSON strings\n    // eslint-disable-next-line no-null/no-null\n    if (newValue === undefined) newValue = null;\n    return newValue;\n  };\n  return JSON.stringify(value, undefinedReplacer, space);\n}\n\n/**\n * Converts a JSON string into a value, converting all `null` properties from JSON into `undefined`\n * in the returned JavaScript value/object.\n *\n * WARNING: `null` values will become `undefined` values after passing through {@link serialize} then\n * {@link deserialize}. For example, `{ a: 1, b: undefined, c: null }` will become `{ a: 1, b:\n * undefined, c: undefined }`. If you are passing around user data that needs to retain `null`\n * values, you should wrap them yourself in a string before using this function. Alternatively, you\n * can write your own replacer that will preserve `null` in a way that you can recover later.\n *\n * @param text A valid JSON string.\n * @param reviver A function that transforms the results. This function is called for each member of\n *   the object. If a member contains nested objects, the nested objects are transformed before the\n *   parent object is. Note that `null` values are converted into `undefined` values after the\n *   reviver has run.\n */\nexport function deserialize(\n  value: string,\n  reviver?: (this: unknown, key: string, value: unknown) => unknown,\n  // Need to use `any` instead of `unknown` here to match the signature of JSON.parse\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // Helper function to replace `null` with `undefined` on a per property basis. This can't be done\n  // with our own reviver because `JSON.parse` removes `undefined` properties from the return value.\n  function replaceNull(obj: Record<string | number, unknown>): Record<string | number, unknown> {\n    Object.keys(obj).forEach((key: string | number) => {\n      // We only want to replace `null`, not other falsy values\n      // eslint-disable-next-line no-null/no-null\n      if (obj[key] === null) obj[key] = undefined;\n      // If the property is an object, recursively call the helper function on it\n      else if (typeof obj[key] === 'object')\n        // Since the object came from a string, we know the keys will not be symbols\n        // eslint-disable-next-line no-type-assertion/no-type-assertion\n        obj[key] = replaceNull(obj[key] as Record<string | number, unknown>);\n    });\n    return obj;\n  }\n\n  const parsedObject = JSON.parse(value, reviver);\n  // Explicitly convert the value 'null' that isn't stored as a property on an object to 'undefined'\n  // eslint-disable-next-line no-null/no-null\n  if (parsedObject === null) return undefined;\n  if (typeof parsedObject === 'object') return replaceNull(parsedObject);\n  return parsedObject;\n}\n\n/**\n * Check to see if the value is serializable without losing information\n *\n * @param value Value to test\n * @returns True if serializable; false otherwise\n *\n *   Note: the values `undefined` and `null` are serializable (on their own or in an array), but\n *   `null` values get transformed into `undefined` when serializing/deserializing.\n *\n *   WARNING: This is inefficient right now as it stringifies, parses, stringifies, and === the value.\n *   Please only use this if you need to\n *\n *   DISCLAIMER: this does not successfully detect that values are not serializable in some cases:\n *\n *   - Losses of removed properties like functions and `Map`s\n *   - Class instances (not deserializable into class instances without special code)\n *\n *   We intend to improve this in the future if it becomes important to do so. See [`JSON.stringify`\n *   documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#description)\n *   for more information.\n */\nexport function isSerializable(value: unknown): boolean {\n  try {\n    const serializedValue = serialize(value);\n    return serializedValue === serialize(deserialize(serializedValue));\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * HTML Encodes the provided string. Thanks to ChatGPT\n *\n * @param str String to HTML encode\n * @returns HTML-encoded string\n */\nexport const htmlEncode = (str: string): string =>\n  str\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;')\n    .replace(/\\//g, '&#x2F;');\n"],"names":["AsyncVariable","variableName","rejectIfNotSettledWithinMS","__publicField","resolve","reject","value","throwIfAlreadySettled","reason","DocumentCombinerEngine","startingDocument","copyDocuments","deepClone","documentName","document","previousDocumentVersion","documentToSet","error","potentialOutput","outputIteration","contribution","startingPoint","copyFrom","retVal","key","areNonArrayObjects","areArrayObjects","obj","values","allMatch","UnsubscriberAsyncList","name","unsubscribers","unsubscriber","unsubs","results","unsubscriberSucceeded","index","PlatformEventEmitter","event","callback","callbackIndex","_a","scrBookData","FIRST_SCR_BOOK_NUM","LAST_SCR_BOOK_NUM","FIRST_SCR_CHAPTER_NUM","FIRST_SCR_VERSE_NUM","getChaptersForBook","bookNum","offsetBook","scrRef","offset","offsetChapter","offsetVerse","aggregateUnsubscribers","args","success","aggregateUnsubscriberAsyncs","unsubPromises","newGuid","s","isString","o","debounce","fn","delay","timeout","groupBy","items","keySelector","valueSelector","map","item","group","isErrorWithMessage","toErrorWithMessage","maybeError","getErrorMessage","wait","ms","waitForDuration","maxWaitTimeInMS","getAllObjectFunctionNames","objId","objectFunctionNames","property","objectPrototype","getOwnPropertyNames","getOwnPropertySymbols","hasOwnProperty","combineComparators","comparatorA","comparatorB","a","b","state","createIsCircular","areItemsEqual","cache","cachedA","cachedB","result","getStrictProperties","object","hasOwn","sameValueZeroEqual","OWNER","getOwnPropertyDescriptor","keys","areArraysEqual","areDatesEqual","areMapsEqual","matchedIndices","aIterable","aResult","bResult","bIterable","hasMatch","matchIndex","aKey","aValue","_b","bKey","bValue","areObjectsEqual","properties","areObjectsEqualStrict","descriptorA","descriptorB","arePrimitiveWrappersEqual","areRegExpsEqual","areSetsEqual","areTypedArraysEqual","ARGUMENTS_TAG","BOOLEAN_TAG","DATE_TAG","MAP_TAG","NUMBER_TAG","OBJECT_TAG","REG_EXP_TAG","SET_TAG","STRING_TAG","isArray","isTypedArray","assign","getTag","createEqualityComparator","constructor","tag","createEqualityComparatorConfig","circular","createCustomConfig","strict","config","areArraysEqual$1","areMapsEqual$1","areObjectsEqual$1","areSetsEqual$1","createInternalEqualityComparator","compare","_indexOrKeyA","_indexOrKeyB","_parentA","_parentB","createIsEqual","comparator","createState","equals","meta","deepEqual","createCustomEqual","options","createCustomInternalComparator","isEqualDeep","serialize","replacer","space","replacerKey","replacerValue","newValue","deserialize","reviver","replaceNull","parsedObject","isSerializable","serializedValue","htmlEncode","str"],"mappings":"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","x_google_ignoreList":[7]}