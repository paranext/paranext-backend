{"version":3,"file":"index.es.js","sources":["../src/button.component.tsx","../src/label-position.model.ts","../src/checkbox.component.tsx","../src/combo-box.component.tsx","../../../node_modules/@sillsdev/scripture/dist/index.es.js","../src/scripture/scripture-util.ts","../src/text-field.component.tsx","../src/ref-selector.component.tsx","../src/slider.component.tsx","../src/switch.component.tsx","../src/snackbar.component.tsx","../src/menu-item.component.tsx","../src/table.component.tsx"],"sourcesContent":["import { Button as MuiButton } from '@mui/material';\nimport { MouseEventHandler, PropsWithChildren } from 'react';\nimport './button.component.css';\n\nexport type ButtonProps = PropsWithChildren<{\n  /**\n   * Enabled status of button\n   * @default false\n   */\n  isDisabled?: boolean;\n  /**\n   * Additional css classes to help with unique styling of the button\n   */\n  className?: string;\n  /**\n   * Optional click handler\n   */\n  onClick?: MouseEventHandler<HTMLButtonElement>;\n  /**\n   * Optional context menu handler\n   */\n  onContextMenu?: MouseEventHandler<HTMLButtonElement>;\n}>;\n\n/**\n * Button a user can click to do something\n *\n * Thanks to MUI for heavy inspiration and documentation\n * https://mui.com/material-ui/getting-started/overview/\n */\nfunction Button({ isDisabled = false, className, onClick, onContextMenu, children }: ButtonProps) {\n  return (\n    <MuiButton\n      disabled={isDisabled}\n      className={`papi-button ${className ?? ''}`}\n      onClick={onClick}\n      onContextMenu={onContextMenu}\n    >\n      {children}\n    </MuiButton>\n  );\n}\n\nexport default Button;\n","enum LabelPosition {\n  After = 'after',\n  Before = 'before',\n  Above = 'above',\n  Below = 'below',\n}\n\nexport default LabelPosition;\n","import { FormLabel, Checkbox as MuiCheckbox } from '@mui/material';\nimport { ChangeEvent } from 'react';\nimport './checkbox.component.css';\nimport LabelPosition from './label-position.model';\n\nexport type CheckboxProps = {\n  /**\n   * If `true`, the component is checked.\n   */\n  isChecked?: boolean;\n  /**\n   * If specified, the label that will appear associated with the checkbox.\n   * @default '' (no label will be shown)\n   */\n  labelText?: string;\n  /**\n   * Indicates the position of the label relative to the checkbox.\n   * @default 'after'\n   */\n  labelPosition?: LabelPosition;\n  /**\n   * If `true`, the component is in the indeterminate state.\n   * @default false\n   */\n  isIndeterminate?: boolean;\n  /**\n   * If `true`, the component is checked by default.\n   */\n  isDefaultChecked?: boolean;\n  /**\n   * Enabled status of switch\n   * @default false\n   */\n  isDisabled?: boolean;\n  /**\n   * True when (input related to) switch is erroneous\n   * @default false\n   */\n  hasError?: boolean;\n  /**\n   * Additional css classes to help with unique styling of the switch\n   */\n  className?: string;\n  /**\n   * Callback fired when the state is changed.\n   * @param event The event source of the callback. You can pull out the new value by accessing event.target.value (string).\n   * You can pull out the new checked state by accessing event.target.checked (boolean).\n   */\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\n/* function CheckboxContainer({ labelText? = '', isDisabled : boolean, hasError : boolean, children? }) {\n  return (\n    <FormLabel disabled={isDisabled} error={hasError}>\n      {children}\n      labelText\n    </FormLabel>\n  );\n} */\n\n/**\n * Primary UI component for user interaction\n */\nfunction Checkbox({\n  isChecked,\n  labelText = '',\n  labelPosition = LabelPosition.After,\n  isIndeterminate = false,\n  isDefaultChecked,\n  isDisabled = false,\n  hasError = false,\n  className,\n  onChange,\n}: CheckboxProps) {\n  const checkBox = (\n    <MuiCheckbox\n      checked={isChecked}\n      indeterminate={isIndeterminate}\n      defaultChecked={isDefaultChecked}\n      disabled={isDisabled}\n      className={`papi-checkbox ${hasError ? 'error' : ''} ${className ?? ''}`}\n      onChange={onChange}\n    />\n  );\n\n  let result;\n\n  if (labelText) {\n    const preceding =\n      labelPosition === LabelPosition.Before || labelPosition === LabelPosition.Above;\n\n    const labelSpan = (\n      <span className={`papi-checkbox-label ${hasError ? 'error' : ''} ${className ?? ''}`}>\n        {labelText}\n      </span>\n    );\n\n    const labelIsInline =\n      labelPosition === LabelPosition.Before || labelPosition === LabelPosition.After;\n\n    const label = labelIsInline ? labelSpan : <div>{labelSpan}</div>;\n\n    const checkBoxElement = labelIsInline ? checkBox : <div>{checkBox}</div>;\n\n    result = (\n      <FormLabel\n        className={`papi-checkbox ${labelPosition.toString()}`}\n        disabled={isDisabled}\n        error={hasError}\n      >\n        {preceding && label}\n        {checkBoxElement}\n        {!preceding && label}\n      </FormLabel>\n    );\n  } else {\n    result = checkBox;\n  }\n  return result;\n}\n\nexport default Checkbox;\n","import {\n  Autocomplete as MuiComboBox,\n  AutocompleteChangeDetails,\n  AutocompleteChangeReason,\n  TextField as MuiTextField,\n  AutocompleteValue,\n} from '@mui/material';\nimport { FocusEventHandler, SyntheticEvent } from 'react';\nimport './combo-box.component.css';\n\nexport type ComboBoxLabelOption = { label: string };\nexport type ComboBoxOption = string | ComboBoxLabelOption;\nexport type ComboBoxValue<T, X, Y, Z> = AutocompleteValue<T, X, Y, Z>;\nexport type ComboBoxChangeDetails<T> = AutocompleteChangeDetails<T>;\nexport type ComboBoxChangeReason = AutocompleteChangeReason;\n\nexport type ComboBoxProps<T> = {\n  /**\n   * Text label title for combobox\n   */\n  title?: string;\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n  /**\n   * If `true`, the component can be cleared, and will have a button to do so\n   * @default true\n   */\n  isClearable?: boolean;\n  /**\n   * True when (input related to) switch is erroneous\n   * @default false\n   */\n  hasError?: boolean;\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  isFullWidth?: boolean;\n  /**\n   * Width of the combobox in pixels. Setting this prop overrides the `isFullWidth` prop\n   */\n  width?: number;\n  /**\n   * List of available options for the dropdown menu\n   */\n  options?: readonly T[];\n  /**\n   * Additional css classes to help with unique styling of the combo box\n   */\n  className?: string;\n  /**\n   * The selected value that the combo box currently holds\n   */\n  value?: T;\n  /**\n   * Triggers when content of textfield is changed\n   */\n  onChange?: (\n    event: SyntheticEvent<Element, Event>,\n    value: ComboBoxValue<T, boolean | undefined, boolean | undefined, boolean | undefined>,\n    reason?: ComboBoxChangeReason,\n    details?: ComboBoxChangeDetails<T> | undefined,\n  ) => void;\n  /**\n   * Triggers when textfield gets focus\n   */\n  onFocus?: FocusEventHandler<HTMLDivElement>; // Storybook crashes when giving the combo box focus\n  /**\n   * Triggers when textfield loses focus\n   */\n  onBlur?: FocusEventHandler<HTMLDivElement>;\n};\n\n/**\n * Dropdown selector displaying various options from which to choose\n *\n * Thanks to MUI for heavy inspiration and documentation\n * https://mui.com/material-ui/getting-started/overview/\n */\nfunction ComboBox<T extends ComboBoxOption = ComboBoxOption>({\n  title,\n  isDisabled = false,\n  isClearable = true,\n  hasError = false,\n  isFullWidth = false,\n  width,\n  options = [],\n  className,\n  value,\n  onChange,\n  onFocus,\n  onBlur,\n}: ComboBoxProps<T>) {\n  return (\n    <MuiComboBox<T, boolean | undefined, boolean | undefined, boolean | undefined>\n      disablePortal\n      disabled={isDisabled}\n      disableClearable={!isClearable}\n      fullWidth={isFullWidth}\n      options={options}\n      className={`papi-combo-box ${hasError ? 'error' : ''} ${className ?? ''}`}\n      value={value}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      renderInput={(props) => (\n        <MuiTextField\n          {...props}\n          error={hasError}\n          fullWidth={isFullWidth}\n          disabled={isDisabled}\n          label={title}\n          style={{ width }}\n        />\n      )}\n    />\n  );\n}\n\nexport default ComboBox;\n","var I = Object.defineProperty;\nvar C = (r, e, t) => e in r ? I(r, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : r[e] = t;\nvar s = (r, e, t) => (C(r, typeof e != \"symbol\" ? e + \"\" : e, t), t);\nclass O {\n  constructor() {\n    s(this, \"books\");\n    s(this, \"firstSelectedBookNum\");\n    s(this, \"lastSelectedBookNum\");\n    s(this, \"count\");\n    s(this, \"selectedBookNumbers\");\n    s(this, \"selectedBookIds\");\n  }\n}\nconst N = class {\n  /**\n   * Gets the 1-based number of the specified book.\n   * This is a fairly performance-critical method.\n   * @param id - 3-letter book ID, e.g. `'MAT'`.\n   * @param ignoreCase - should case be ignored. Defaults to `true`.\n   * @returns book number, or 0 if ID doesn't exist.\n   */\n  static bookIdToNumber(e, t = !0) {\n    return t && (e = e.toUpperCase()), e in this.bookNumbers ? this.bookNumbers[e] : 0;\n  }\n  /**\n   * Gets the ID of a book from its book number.\n   * @param number - Book number (this is 1-based, not an index).\n   * @param errorValue - The string to return if the book number does not correspond to a valid book.\n   * Defaults to `'***'`.\n   * @returns The 3-letter `bookId` if found, or the `errorValue` otherwise.\n   */\n  static bookNumberToId(e, t = \"***\") {\n    const i = e - 1;\n    return i < 0 || i >= N.allBookIds.length ? t : N.allBookIds[i];\n  }\n  /**\n   * Gets the English book name from its book number.\n   * @param number - Book number (this is 1-based, not an index).\n   * @returns The English name of the book if found, or `'******'` otherwise.\n   */\n  static bookNumberToEnglishName(e) {\n    return e <= 0 || e > this.lastBook ? \"******\" : N.allBookEnglishNames[e - 1];\n  }\n  /**\n   * Gets the English book name from its book ID.\n   * @param id - 3-letter book ID, e.g. `'MAT'`.\n   * @returns The English name of the book if found, or `'******'` otherwise.\n   */\n  static bookIdToEnglishName(e) {\n    return this.bookNumberToEnglishName(this.bookIdToNumber(e));\n  }\n  /**\n   *\n   * @param bookNum - Book number (this is 1-based, not an index).\n   * @returns `true` if the book is obsolete, or `false` otherwise.\n   */\n  static isObsolete(e) {\n    return this.allBookEnglishNames[e - 1].includes(\"*obsolete*\");\n  }\n  static createBookNumbers() {\n    const e = {};\n    for (let t = 0; t < this.allBookIds.length; t++)\n      e[this.allBookIds[t]] = t + 1;\n    return e;\n  }\n};\nlet u = N;\n/**\n * Array of all book IDs.\n *  BE SURE TO UPDATE ISCANONICAL above whenever you change this array.\n */\ns(u, \"allBookIds\", [\n  \"GEN\",\n  \"EXO\",\n  \"LEV\",\n  \"NUM\",\n  \"DEU\",\n  \"JOS\",\n  \"JDG\",\n  \"RUT\",\n  \"1SA\",\n  \"2SA\",\n  // 10\n  \"1KI\",\n  \"2KI\",\n  \"1CH\",\n  \"2CH\",\n  \"EZR\",\n  \"NEH\",\n  \"EST\",\n  \"JOB\",\n  \"PSA\",\n  \"PRO\",\n  // 20\n  \"ECC\",\n  \"SNG\",\n  \"ISA\",\n  \"JER\",\n  \"LAM\",\n  \"EZK\",\n  \"DAN\",\n  \"HOS\",\n  \"JOL\",\n  \"AMO\",\n  // 30\n  \"OBA\",\n  \"JON\",\n  \"MIC\",\n  \"NAM\",\n  \"HAB\",\n  \"ZEP\",\n  \"HAG\",\n  \"ZEC\",\n  \"MAL\",\n  \"MAT\",\n  // 40\n  \"MRK\",\n  \"LUK\",\n  \"JHN\",\n  \"ACT\",\n  \"ROM\",\n  \"1CO\",\n  \"2CO\",\n  \"GAL\",\n  \"EPH\",\n  \"PHP\",\n  // 50\n  \"COL\",\n  \"1TH\",\n  \"2TH\",\n  \"1TI\",\n  \"2TI\",\n  \"TIT\",\n  \"PHM\",\n  \"HEB\",\n  \"JAS\",\n  \"1PE\",\n  // 60\n  \"2PE\",\n  \"1JN\",\n  \"2JN\",\n  \"3JN\",\n  \"JUD\",\n  \"REV\",\n  \"TOB\",\n  \"JDT\",\n  \"ESG\",\n  \"WIS\",\n  // 70\n  \"SIR\",\n  \"BAR\",\n  \"LJE\",\n  \"S3Y\",\n  \"SUS\",\n  \"BEL\",\n  \"1MA\",\n  \"2MA\",\n  \"3MA\",\n  \"4MA\",\n  // 80\n  \"1ES\",\n  \"2ES\",\n  \"MAN\",\n  \"PS2\",\n  \"ODA\",\n  \"PSS\",\n  \"JSA\",\n  // actual variant text for JOS, now in LXA text\n  \"JDB\",\n  // actual variant text for JDG, now in LXA text\n  \"TBS\",\n  // actual variant text for TOB, now in LXA text\n  \"SST\",\n  // actual variant text for SUS, now in LXA text // 90\n  \"DNT\",\n  // actual variant text for DAN, now in LXA text\n  \"BLT\",\n  // actual variant text for BEL, now in LXA text\n  \"XXA\",\n  \"XXB\",\n  \"XXC\",\n  \"XXD\",\n  \"XXE\",\n  \"XXF\",\n  \"XXG\",\n  \"FRT\",\n  // 100\n  \"BAK\",\n  \"OTH\",\n  \"3ES\",\n  // Used previously but really should be 2ES\n  \"EZA\",\n  // Used to be called 4ES, but not actually in any known project\n  \"5EZ\",\n  // Used to be called 5ES, but not actually in any known project\n  \"6EZ\",\n  // Used to be called 6ES, but not actually in any known project\n  \"INT\",\n  \"CNC\",\n  \"GLO\",\n  \"TDX\",\n  // 110\n  \"NDX\",\n  \"DAG\",\n  \"PS3\",\n  \"2BA\",\n  \"LBA\",\n  \"JUB\",\n  \"ENO\",\n  \"1MQ\",\n  \"2MQ\",\n  \"3MQ\",\n  // 120\n  \"REP\",\n  \"4BA\",\n  \"LAO\"\n]), /** Array of all non-canonical book IDs. */\ns(u, \"nonCanonicalIds\", [\n  \"XXA\",\n  \"XXB\",\n  \"XXC\",\n  \"XXD\",\n  \"XXE\",\n  \"XXF\",\n  \"XXG\",\n  \"FRT\",\n  \"BAK\",\n  \"OTH\",\n  \"INT\",\n  \"CNC\",\n  \"GLO\",\n  \"TDX\",\n  \"NDX\"\n]), s(u, \"firstBook\", 1), s(u, \"lastBook\", N.allBookIds.length), /**\n * Array of the English names of all books.\n */\ns(u, \"allBookEnglishNames\", [\n  \"Genesis\",\n  \"Exodus\",\n  \"Leviticus\",\n  \"Numbers\",\n  \"Deuteronomy\",\n  \"Joshua\",\n  \"Judges\",\n  \"Ruth\",\n  \"1 Samuel\",\n  \"2 Samuel\",\n  \"1 Kings\",\n  \"2 Kings\",\n  \"1 Chronicles\",\n  \"2 Chronicles\",\n  \"Ezra\",\n  \"Nehemiah\",\n  \"Esther (Hebrew)\",\n  \"Job\",\n  \"Psalms\",\n  \"Proverbs\",\n  \"Ecclesiastes\",\n  \"Song of Songs\",\n  \"Isaiah\",\n  \"Jeremiah\",\n  \"Lamentations\",\n  \"Ezekiel\",\n  \"Daniel (Hebrew)\",\n  \"Hosea\",\n  \"Joel\",\n  \"Amos\",\n  \"Obadiah\",\n  \"Jonah\",\n  \"Micah\",\n  \"Nahum\",\n  \"Habakkuk\",\n  \"Zephaniah\",\n  \"Haggai\",\n  \"Zechariah\",\n  \"Malachi\",\n  \"Matthew\",\n  \"Mark\",\n  \"Luke\",\n  \"John\",\n  \"Acts\",\n  \"Romans\",\n  \"1 Corinthians\",\n  \"2 Corinthians\",\n  \"Galatians\",\n  \"Ephesians\",\n  \"Philippians\",\n  \"Colossians\",\n  \"1 Thessalonians\",\n  \"2 Thessalonians\",\n  \"1 Timothy\",\n  \"2 Timothy\",\n  \"Titus\",\n  \"Philemon\",\n  \"Hebrews\",\n  \"James\",\n  \"1 Peter\",\n  \"2 Peter\",\n  \"1 John\",\n  \"2 John\",\n  \"3 John\",\n  \"Jude\",\n  \"Revelation\",\n  \"Tobit\",\n  \"Judith\",\n  \"Esther Greek\",\n  \"Wisdom of Solomon\",\n  \"Sirach (Ecclesiasticus)\",\n  \"Baruch\",\n  \"Letter of Jeremiah\",\n  \"Song of 3 Young Men\",\n  \"Susanna\",\n  \"Bel and the Dragon\",\n  \"1 Maccabees\",\n  \"2 Maccabees\",\n  \"3 Maccabees\",\n  \"4 Maccabees\",\n  \"1 Esdras (Greek)\",\n  \"2 Esdras (Latin)\",\n  \"Prayer of Manasseh\",\n  \"Psalm 151\",\n  \"Odes\",\n  \"Psalms of Solomon\",\n  // WARNING, if you change the spelling of the *obsolete* tag be sure to update\n  // IsObsolete routine\n  \"Joshua A. *obsolete*\",\n  \"Judges B. *obsolete*\",\n  \"Tobit S. *obsolete*\",\n  \"Susanna Th. *obsolete*\",\n  \"Daniel Th. *obsolete*\",\n  \"Bel Th. *obsolete*\",\n  \"Extra A\",\n  \"Extra B\",\n  \"Extra C\",\n  \"Extra D\",\n  \"Extra E\",\n  \"Extra F\",\n  \"Extra G\",\n  \"Front Matter\",\n  \"Back Matter\",\n  \"Other Matter\",\n  \"3 Ezra *obsolete*\",\n  \"Apocalypse of Ezra\",\n  \"5 Ezra (Latin Prologue)\",\n  \"6 Ezra (Latin Epilogue)\",\n  \"Introduction\",\n  \"Concordance \",\n  \"Glossary \",\n  \"Topical Index\",\n  \"Names Index\",\n  \"Daniel Greek\",\n  \"Psalms 152-155\",\n  \"2 Baruch (Apocalypse)\",\n  \"Letter of Baruch\",\n  \"Jubilees\",\n  \"Enoch\",\n  \"1 Meqabyan\",\n  \"2 Meqabyan\",\n  \"3 Meqabyan\",\n  \"Reproof (Proverbs 25-31)\",\n  \"4 Baruch (Rest of Baruch)\",\n  \"Laodiceans\"\n]), // Used for fast look up of book IDs to the book number.\ns(u, \"bookNumbers\", N.createBookNumbers());\nvar m = /* @__PURE__ */ ((r) => (r[r.Unknown = 0] = \"Unknown\", r[r.Original = 1] = \"Original\", r[r.Septuagint = 2] = \"Septuagint\", r[r.Vulgate = 3] = \"Vulgate\", r[r.English = 4] = \"English\", r[r.RussianProtestant = 5] = \"RussianProtestant\", r[r.RussianOrthodox = 6] = \"RussianOrthodox\", r))(m || {});\nconst f = class {\n  // private versInfo: Versification;\n  constructor(e) {\n    s(this, \"name\");\n    s(this, \"fullPath\");\n    s(this, \"isPresent\");\n    s(this, \"hasVerseSegments\");\n    s(this, \"isCustomized\");\n    s(this, \"baseVersification\");\n    s(this, \"scriptureBooks\");\n    s(this, \"_type\");\n    if (e != null)\n      typeof e == \"string\" ? this.name = e : this._type = e;\n    else\n      throw new Error(\"Argument null\");\n  }\n  get type() {\n    return this._type;\n  }\n  equals(e) {\n    return !e.type || !this.type ? !1 : e.type === this.type;\n  }\n};\nlet l = f;\ns(l, \"Original\", new f(m.Original)), s(l, \"Septuagint\", new f(m.Septuagint)), s(l, \"Vulgate\", new f(m.Vulgate)), s(l, \"English\", new f(m.English)), s(l, \"RussianProtestant\", new f(m.RussianProtestant)), s(l, \"RussianOrthodox\", new f(m.RussianOrthodox));\nfunction p(r, e) {\n  const t = e[0];\n  for (let i = 1; i < e.length; i++)\n    r = r.split(e[i]).join(t);\n  return r.split(t);\n}\nvar B = /* @__PURE__ */ ((r) => (r[r.Valid = 0] = \"Valid\", r[r.UnknownVersification = 1] = \"UnknownVersification\", r[r.OutOfRange = 2] = \"OutOfRange\", r[r.VerseOutOfOrder = 3] = \"VerseOutOfOrder\", r[r.VerseRepeated = 4] = \"VerseRepeated\", r))(B || {});\nconst a = class {\n  constructor(e, t, i, n) {\n    s(this, \"firstChapter\");\n    s(this, \"lastChapter\");\n    s(this, \"lastVerse\");\n    s(this, \"hasSegmentsDefined\");\n    s(this, \"text\");\n    s(this, \"BBBCCCVVVS\");\n    s(this, \"longHashCode\");\n    /** The versification of the reference. */\n    s(this, \"versification\");\n    s(this, \"rtlMark\", \"‏\");\n    s(this, \"_bookNum\", 0);\n    s(this, \"_chapterNum\", 0);\n    s(this, \"_verseNum\", 0);\n    s(this, \"_verse\");\n    if (i == null && n == null)\n      if (e != null && typeof e == \"string\") {\n        const o = e, h = t != null && t instanceof l ? t : void 0;\n        this.setEmpty(h), this.parse(o);\n      } else if (t == null)\n        if (e != null && e instanceof a) {\n          const o = e;\n          this._bookNum = o.bookNum, this._chapterNum = o.chapterNum, this._verseNum = o.verseNum, this._verse = o.verse, this.versification = o.versification;\n        } else {\n          if (e == null)\n            return;\n          const o = e instanceof l ? e : a.defaultVersification;\n          this.setEmpty(o);\n        }\n      else\n        throw new Error(\"VerseRef constructor not supported.\");\n    else if (e != null && t != null && i != null)\n      if (typeof e == \"string\" && typeof t == \"string\" && typeof i == \"string\")\n        this.setEmpty(n), this.updateInternal(e, t, i);\n      else if (typeof e == \"number\" && typeof t == \"number\" && typeof i == \"number\")\n        this._bookNum = e, this._chapterNum = t, this._verseNum = i, this.versification = n ?? a.defaultVersification;\n      else\n        throw new Error(\"VerseRef constructor not supported.\");\n    else\n      throw new Error(\"VerseRef constructor not supported.\");\n  }\n  /**\n   * @deprecated Will be removed in v2. Replace `VerseRef.parse('...')` with `new VerseRef('...')`\n   * or refactor to use `VerseRef.tryParse('...')` which has a different return type.\n   */\n  static parse(e, t = a.defaultVersification) {\n    const i = new a(t);\n    return i.parse(e), i;\n  }\n  /**\n   * Determines if the verse string is in a valid format (does not consider versification).\n   */\n  static isVerseParseable(e) {\n    return e.length > 0 && \"0123456789\".includes(e[0]) && !e.endsWith(this.verseRangeSeparator) && !e.endsWith(this.verseSequenceIndicator);\n  }\n  /**\n   * Tries to parse the specified string into a verse reference.\n   * @param str - The string to attempt to parse.\n   * @returns success: `true` if the specified string was successfully parsed, `false` otherwise.\n   * @returns verseRef: The result of the parse if successful, or empty VerseRef if it failed\n   */\n  static tryParse(e) {\n    let t;\n    try {\n      return t = a.parse(e), { success: !0, verseRef: t };\n    } catch (i) {\n      if (i instanceof v)\n        return t = new a(), { success: !1, verseRef: t };\n      throw i;\n    }\n  }\n  /**\n   * Gets the reference as a comparable integer where the book, chapter, and verse each occupy 3\n   * digits.\n   * @param bookNum - Book number (this is 1-based, not an index).\n   * @param chapterNum - Chapter number.\n   * @param verseNum - Verse number.\n   * @returns The reference as a comparable integer where the book, chapter, and verse each occupy 3\n   * digits.\n   */\n  static getBBBCCCVVV(e, t, i) {\n    return e % a.bcvMaxValue * a.bookDigitShifter + (t >= 0 ? t % a.bcvMaxValue * a.chapterDigitShifter : 0) + (i >= 0 ? i % a.bcvMaxValue : 0);\n  }\n  /**\n   * Parses a verse string and gets the leading numeric portion as a number.\n   * @param verseStr - verse string to parse\n   * @returns true if the entire string could be parsed as a single, simple verse number (1-999);\n   *    false if the verse string represented a verse bridge, contained segment letters, or was invalid\n   */\n  static tryGetVerseNum(e) {\n    let t;\n    if (!e)\n      return t = -1, { success: !0, vNum: t };\n    t = 0;\n    let i;\n    for (let n = 0; n < e.length; n++) {\n      if (i = e[n], i < \"0\" || i > \"9\")\n        return n === 0 && (t = -1), { success: !1, vNum: t };\n      if (t = t * 10 + +i - +\"0\", t > a.bcvMaxValue)\n        return t = -1, { success: !1, vNum: t };\n    }\n    return { success: !0, vNum: t };\n  }\n  /**\n   * Checks to see if a VerseRef hasn't been set - all values are the default.\n   */\n  get isDefault() {\n    return this.bookNum === 0 && this.chapterNum === 0 && this.verseNum === 0 && this.versification == null;\n  }\n  /**\n   * Gets whether the verse contains multiple verses.\n   */\n  get hasMultiple() {\n    return this._verse != null && (this._verse.includes(a.verseRangeSeparator) || this._verse.includes(a.verseSequenceIndicator));\n  }\n  /**\n   * Gets or sets the book of the reference. Book is the 3-letter abbreviation in capital letters,\n   * e.g. `'MAT'`.\n   */\n  get book() {\n    return u.bookNumberToId(this.bookNum, \"\");\n  }\n  set book(e) {\n    this.bookNum = u.bookIdToNumber(e);\n  }\n  /**\n   * Gets or sets the chapter of the reference,. e.g. `'3'`.\n   */\n  get chapter() {\n    return this.isDefault || this._chapterNum < 0 ? \"\" : this._chapterNum.toString();\n  }\n  set chapter(e) {\n    const t = +e;\n    this._chapterNum = Number.isInteger(t) ? t : -1;\n  }\n  /**\n   * Gets or sets the verse of the reference, including range, segments, and sequences, e.g. `'4'`,\n   * or `'4b-5a, 7'`.\n   */\n  get verse() {\n    return this._verse != null ? this._verse : this.isDefault || this._verseNum < 0 ? \"\" : this._verseNum.toString();\n  }\n  set verse(e) {\n    const { success: t, vNum: i } = a.tryGetVerseNum(e);\n    this._verse = t ? void 0 : e.replace(this.rtlMark, \"\"), this._verseNum = i, !(this._verseNum >= 0) && ({ vNum: this._verseNum } = a.tryGetVerseNum(this._verse));\n  }\n  /**\n   * Get or set Book based on book number, e.g. `42`.\n   */\n  get bookNum() {\n    return this._bookNum;\n  }\n  set bookNum(e) {\n    if (e <= 0 || e > u.lastBook)\n      throw new v(\n        \"BookNum must be greater than zero and less than or equal to last book\"\n      );\n    this._bookNum = e;\n  }\n  /**\n   * Gets or sets the chapter number, e.g. `3`. `-1` if not valid.\n   */\n  get chapterNum() {\n    return this._chapterNum;\n  }\n  set chapterNum(e) {\n    this.chapterNum = e;\n  }\n  /**\n   * Gets or sets verse start number, e.g. `4`. `-1` if not valid.\n   */\n  get verseNum() {\n    return this._verseNum;\n  }\n  set verseNum(e) {\n    this._verseNum = e;\n  }\n  /**\n   * String representing the versification (should ONLY be used for serialization/deserialization).\n   *\n   * @remarks This is for backwards compatibility when ScrVers was an enumeration.\n   */\n  get versificationStr() {\n    var e;\n    return (e = this.versification) == null ? void 0 : e.name;\n  }\n  set versificationStr(e) {\n    this.versification = this.versification != null ? new l(e) : void 0;\n  }\n  /**\n   * Determines if the reference is valid.\n   */\n  get valid() {\n    return this.validStatus === 0;\n  }\n  /**\n   * Get the valid status for this reference.\n   */\n  get validStatus() {\n    return this.validateVerse(a.verseRangeSeparators, a.verseSequenceIndicators);\n  }\n  /**\n   * Gets the reference as a comparable integer where the book,\n   * chapter, and verse each occupy three digits and the verse is 0.\n   */\n  get BBBCCC() {\n    return a.getBBBCCCVVV(this._bookNum, this._chapterNum, 0);\n  }\n  /**\n   * Gets the reference as a comparable integer where the book,\n   * chapter, and verse each occupy three digits. If verse is not null\n   * (i.e., this reference represents a complex reference with verse\n   * segments or bridge) this cannot be used for an exact comparison.\n   */\n  get BBBCCCVVV() {\n    return a.getBBBCCCVVV(this._bookNum, this._chapterNum, this._verseNum);\n  }\n  /**\n   * Gets whether the verse is defined as an excluded verse in the versification.\n   * Does not handle verse ranges.\n   */\n  // eslint-disable-next-line @typescript-eslint/class-literal-property-style\n  get isExcluded() {\n    return !1;\n  }\n  /**\n   * Parses the reference in the specified string.\n   * Optionally versification can follow reference as in GEN 3:11/4\n   * Throw an exception if\n   * - invalid book name\n   * - chapter number is missing or not a number\n   * - verse number is missing or does not start with a number\n   * - versification is invalid\n   * @param verseStr - string to parse e.g. 'MAT 3:11'\n   */\n  parse(e) {\n    if (e = e.replace(this.rtlMark, \"\"), e.includes(\"/\")) {\n      const o = e.split(\"/\");\n      if (e = o[0], o.length > 1)\n        try {\n          const h = +o[1].trim();\n          this.versification = new l(m[h]);\n        } catch {\n          throw new v(\"Invalid reference : \" + e);\n        }\n    }\n    const t = e.trim().split(\" \");\n    if (t.length !== 2)\n      throw new v(\"Invalid reference : \" + e);\n    const i = t[1].split(\":\"), n = +i[0];\n    if (i.length !== 2 || u.bookIdToNumber(t[0]) === 0 || !Number.isInteger(n) || n < 0 || !a.isVerseParseable(i[1]))\n      throw new v(\"Invalid reference : \" + e);\n    this.updateInternal(t[0], i[0], i[1]);\n  }\n  /**\n   * Simplifies this verse ref so that it has no bridging of verses or\n   * verse segments like `'1a'`.\n   */\n  simplify() {\n    this._verse = void 0;\n  }\n  /**\n   * Makes a clone of the reference.\n   *\n   * @returns The cloned VerseRef.\n   */\n  clone() {\n    return new a(this);\n  }\n  toString() {\n    const e = this.book;\n    return e === \"\" ? \"\" : `${e} ${this.chapter}:${this.verse}`;\n  }\n  /**\n   * Compares this `VerseRef` with supplied one.\n   * @param verseRef - `VerseRef` to compare this one to.\n   * @returns `true` if this `VerseRef` is equal to the supplied on, `false` otherwise.\n   */\n  equals(e) {\n    return e._bookNum === this._bookNum && e._chapterNum === this._chapterNum && e._verseNum === this._verseNum && e._verse === this._verse && e.versification != null && this.versification != null && e.versification.equals(this.versification);\n  }\n  /**\n   * Enumerate all individual verses contained in a VerseRef.\n   * Verse ranges are indicated by \"-\" and consecutive verses by \",\"s.\n   * Examples:\n   * GEN 1:2 returns GEN 1:2\n   * GEN 1:1a-3b,5 returns GEN 1:1a, GEN 1:2, GEN 1:3b, GEN 1:5\n   * GEN 1:2a-2c returns //! ??????\n   *\n   * @param specifiedVersesOnly - if set to <c>true</c> return only verses that are\n   * explicitly specified only, not verses within a range. Defaults to `false`.\n   * @param verseRangeSeparators - Verse range separators.\n   * Defaults to `VerseRef.verseRangeSeparators`.\n   * @param verseSequenceSeparators - Verse sequence separators.\n   * Defaults to `VerseRef.verseSequenceIndicators`.\n   * @returns An array of all single verse references in this VerseRef.\n   */\n  allVerses(e = !1, t = a.verseRangeSeparators, i = a.verseSequenceIndicators) {\n    if (this._verse == null || this.chapterNum <= 0)\n      return [this.clone()];\n    const n = [], o = p(this._verse, i);\n    for (const h of o.map((g) => p(g, t))) {\n      const g = this.clone();\n      g.verse = h[0];\n      const k = g.verseNum;\n      if (n.push(g), h.length > 1) {\n        const b = this.clone();\n        if (b.verse = h[1], !e)\n          for (let d = k + 1; d < b.verseNum; d++) {\n            const E = new a(\n              this._bookNum,\n              this._chapterNum,\n              d,\n              this.versification\n            );\n            this.isExcluded || n.push(E);\n          }\n        n.push(b);\n      }\n    }\n    return n;\n  }\n  /**\n   * Validates a verse number using the supplied separators rather than the defaults.\n   */\n  validateVerse(e, t) {\n    if (!this.verse)\n      return this.internalValid;\n    let i = 0;\n    for (const n of this.allVerses(!0, e, t)) {\n      const o = n.internalValid;\n      if (o !== 0)\n        return o;\n      const h = n.BBBCCCVVV;\n      if (i > h)\n        return 3;\n      if (i === h)\n        return 4;\n      i = h;\n    }\n    return 0;\n  }\n  /**\n   * Gets whether a single verse reference is valid.\n   */\n  get internalValid() {\n    return this.versification == null ? 1 : this._bookNum <= 0 || this._bookNum > u.lastBook ? 2 : 0;\n  }\n  setEmpty(e = a.defaultVersification) {\n    this._bookNum = 0, this._chapterNum = -1, this._verse = void 0, this.versification = e;\n  }\n  updateInternal(e, t, i) {\n    this.bookNum = u.bookIdToNumber(e), this.chapter = t, this.verse = i;\n  }\n};\nlet c = a;\ns(c, \"defaultVersification\", l.English), s(c, \"verseRangeSeparator\", \"-\"), s(c, \"verseSequenceIndicator\", \",\"), s(c, \"verseRangeSeparators\", [a.verseRangeSeparator]), s(c, \"verseSequenceIndicators\", [a.verseSequenceIndicator]), s(c, \"chapterDigitShifter\", 1e3), s(c, \"bookDigitShifter\", a.chapterDigitShifter * a.chapterDigitShifter), s(c, \"bcvMaxValue\", a.chapterDigitShifter - 1), /**\n * The valid status of the VerseRef.\n */\ns(c, \"ValidStatusType\", B);\nclass v extends Error {\n}\nexport {\n  O as BookSet,\n  u as Canon,\n  l as ScrVers,\n  m as ScrVersType,\n  c as VerseRef,\n  v as VerseRefException\n};\n//# sourceMappingURL=index.es.js.map\n","import { Canon } from '@sillsdev/scripture';\nimport { BookInfo, ScriptureReference } from './scripture.model';\nimport { ComboBoxLabelOption } from '../combo-box.component';\n\nconst scrBookData: BookInfo[] = [\n  { shortName: 'ERR', fullNames: ['ERROR'], chapters: -1 },\n  { shortName: 'GEN', fullNames: ['Genesis'], chapters: 50 },\n  { shortName: 'EXO', fullNames: ['Exodus'], chapters: 40 },\n  { shortName: 'LEV', fullNames: ['Leviticus'], chapters: 27 },\n  { shortName: 'NUM', fullNames: ['Numbers'], chapters: 36 },\n  { shortName: 'DEU', fullNames: ['Deuteronomy'], chapters: 34 },\n  { shortName: 'JOS', fullNames: ['Joshua'], chapters: 24 },\n  { shortName: 'JDG', fullNames: ['Judges'], chapters: 21 },\n  { shortName: 'RUT', fullNames: ['Ruth'], chapters: 4 },\n  { shortName: '1SA', fullNames: ['1 Samuel'], chapters: 31 },\n  { shortName: '2SA', fullNames: ['2 Samuel'], chapters: 24 },\n  { shortName: '1KI', fullNames: ['1 Kings'], chapters: 22 },\n  { shortName: '2KI', fullNames: ['2 Kings'], chapters: 25 },\n  { shortName: '1CH', fullNames: ['1 Chronicles'], chapters: 29 },\n  { shortName: '2CH', fullNames: ['2 Chronicles'], chapters: 36 },\n  { shortName: 'EZR', fullNames: ['Ezra'], chapters: 10 },\n  { shortName: 'NEH', fullNames: ['Nehemiah'], chapters: 13 },\n  { shortName: 'EST', fullNames: ['Esther'], chapters: 10 },\n  { shortName: 'JOB', fullNames: ['Job'], chapters: 42 },\n  { shortName: 'PSA', fullNames: ['Psalm', 'Psalms'], chapters: 150 },\n  { shortName: 'PRO', fullNames: ['Proverbs'], chapters: 31 },\n  { shortName: 'ECC', fullNames: ['Ecclesiastes'], chapters: 12 },\n  { shortName: 'SNG', fullNames: ['Song of Solomon', 'Song of Songs'], chapters: 8 },\n  { shortName: 'ISA', fullNames: ['Isaiah'], chapters: 66 },\n  { shortName: 'JER', fullNames: ['Jeremiah'], chapters: 52 },\n  { shortName: 'LAM', fullNames: ['Lamentations'], chapters: 5 },\n  { shortName: 'EZK', fullNames: ['Ezekiel'], chapters: 48 },\n  { shortName: 'DAN', fullNames: ['Daniel'], chapters: 12 },\n  { shortName: 'HOS', fullNames: ['Hosea'], chapters: 14 },\n  { shortName: 'JOL', fullNames: ['Joel'], chapters: 3 },\n  { shortName: 'AMO', fullNames: ['Amos'], chapters: 9 },\n  { shortName: 'OBA', fullNames: ['Obadiah'], chapters: 1 },\n  { shortName: 'JON', fullNames: ['Jonah'], chapters: 4 },\n  { shortName: 'MIC', fullNames: ['Micah'], chapters: 7 },\n  { shortName: 'NAM', fullNames: ['Nahum'], chapters: 3 },\n  { shortName: 'HAB', fullNames: ['Habakkuk'], chapters: 3 },\n  { shortName: 'ZEP', fullNames: ['Zephaniah'], chapters: 3 },\n  { shortName: 'HAG', fullNames: ['Haggai'], chapters: 2 },\n  { shortName: 'ZEC', fullNames: ['Zechariah'], chapters: 14 },\n  { shortName: 'MAL', fullNames: ['Malachi'], chapters: 4 },\n  { shortName: 'MAT', fullNames: ['Matthew'], chapters: 28 },\n  { shortName: 'MRK', fullNames: ['Mark'], chapters: 16 },\n  { shortName: 'LUK', fullNames: ['Luke'], chapters: 24 },\n  { shortName: 'JHN', fullNames: ['John'], chapters: 21 },\n  { shortName: 'ACT', fullNames: ['Acts'], chapters: 28 },\n  { shortName: 'ROM', fullNames: ['Romans'], chapters: 16 },\n  { shortName: '1CO', fullNames: ['1 Corinthians'], chapters: 16 },\n  { shortName: '2CO', fullNames: ['2 Corinthians'], chapters: 13 },\n  { shortName: 'GAL', fullNames: ['Galatians'], chapters: 6 },\n  { shortName: 'EPH', fullNames: ['Ephesians'], chapters: 6 },\n  { shortName: 'PHP', fullNames: ['Philippians'], chapters: 4 },\n  { shortName: 'COL', fullNames: ['Colossians'], chapters: 4 },\n  { shortName: '1TH', fullNames: ['1 Thessalonians'], chapters: 5 },\n  { shortName: '2TH', fullNames: ['2 Thessalonians'], chapters: 3 },\n  { shortName: '1TI', fullNames: ['1 Timothy'], chapters: 6 },\n  { shortName: '2TI', fullNames: ['2 Timothy'], chapters: 4 },\n  { shortName: 'TIT', fullNames: ['Titus'], chapters: 3 },\n  { shortName: 'PHM', fullNames: ['Philemon'], chapters: 1 },\n  { shortName: 'HEB', fullNames: ['Hebrews'], chapters: 13 },\n  { shortName: 'JAS', fullNames: ['James'], chapters: 5 },\n  { shortName: '1PE', fullNames: ['1 Peter'], chapters: 5 },\n  { shortName: '2PE', fullNames: ['2 Peter'], chapters: 3 },\n  { shortName: '1JN', fullNames: ['1 John'], chapters: 5 },\n  { shortName: '2JN', fullNames: ['2 John'], chapters: 1 },\n  { shortName: '3JN', fullNames: ['3 John'], chapters: 1 },\n  { shortName: 'JUD', fullNames: ['Jude'], chapters: 1 },\n  { shortName: 'REV', fullNames: ['Revelation'], chapters: 22 },\n];\n\nexport interface BookNameOption extends ComboBoxLabelOption {\n  bookId: string;\n}\n\n/**\n * Gets ComboBox options for book names. Use the _bookId_ for reference rather than the _label_ to\n * aid in localization.\n * @remarks This can be localized by loading _label_ with the localized book name.\n * @returns An array of ComboBox options for book names.\n */\nexport function getBookNameOptions(): BookNameOption[] {\n  return Canon.allBookIds.map((bookId) => ({\n    bookId,\n    label: Canon.bookIdToEnglishName(bookId),\n  }));\n}\n\nexport function bookNumToBookOption(bookNum: number): BookNameOption {\n  return {\n    bookId: Canon.bookNumberToId(bookNum),\n    label: Canon.bookNumberToEnglishName(bookNum),\n  };\n}\n\nexport const FIRST_SCR_BOOK_NUM = 1;\nexport const LAST_SCR_BOOK_NUM = scrBookData.length - 1;\nexport const FIRST_SCR_CHAPTER_NUM = 1;\nexport const FIRST_SCR_VERSE_NUM = 1;\n\nexport const getChaptersForBook = (bookNum: number): number => {\n  return scrBookData[bookNum]?.chapters ?? -1;\n};\n\nexport const offsetBook = (scrRef: ScriptureReference, offset: number): ScriptureReference => ({\n  bookNum: Math.max(FIRST_SCR_BOOK_NUM, Math.min(scrRef.bookNum + offset, LAST_SCR_BOOK_NUM)),\n  chapterNum: 1,\n  verseNum: 1,\n});\n\nexport const offsetChapter = (scrRef: ScriptureReference, offset: number): ScriptureReference => ({\n  ...scrRef,\n  chapterNum: Math.min(\n    Math.max(FIRST_SCR_CHAPTER_NUM, scrRef.chapterNum + offset),\n    getChaptersForBook(scrRef.bookNum),\n  ),\n  verseNum: 1,\n});\n\nexport const offsetVerse = (scrRef: ScriptureReference, offset: number): ScriptureReference => ({\n  ...scrRef,\n  verseNum: Math.max(FIRST_SCR_VERSE_NUM, scrRef.verseNum + offset),\n});\n","﻿import { TextField as MuiTextField } from '@mui/material';\nimport { ChangeEventHandler, FocusEventHandler } from 'react';\n\nexport type TextFieldProps = {\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant?: 'outlined' | 'filled';\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  hasError?: boolean;\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  isFullWidth?: boolean;\n  /**\n   * Text that gives the user instructions on what contents the TextField expects\n   */\n  helperText?: string;\n  /**\n   * The title of the TextField\n   */\n  label?: string;\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder?: string;\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  isRequired?: boolean;\n  /**\n   * Additional css classes to help with unique styling of the button\n   */\n  className?: string;\n  /**\n   * Starting value for the text field if it is not controlled\n   */\n  defaultValue?: unknown;\n  /**\n   * Value of the text field if controlled\n   */\n  value?: unknown;\n  /**\n   * Triggers when content of textfield is changed\n   */\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n  /**\n   * Triggers when textfield gets focus\n   */\n  onFocus?: FocusEventHandler<HTMLInputElement>;\n  /**\n   * Triggers when textfield loses focus\n   */\n  onBlur?: FocusEventHandler<HTMLInputElement>;\n};\n\n/**\n * Text input field\n *\n * Thanks to MUI for heavy inspiration and documentation\n * https://mui.com/material-ui/getting-started/overview/\n */\nfunction TextField({\n  variant = 'outlined',\n  isDisabled = false,\n  hasError = false,\n  isFullWidth = false,\n  helperText,\n  label,\n  placeholder,\n  isRequired = false,\n  className,\n  defaultValue,\n  value,\n  onChange,\n  onFocus,\n  onBlur,\n}: TextFieldProps) {\n  return (\n    <MuiTextField\n      variant={variant}\n      disabled={isDisabled}\n      error={hasError}\n      fullWidth={isFullWidth}\n      helperText={helperText}\n      label={label}\n      placeholder={placeholder}\n      required={isRequired}\n      className={`papi-textfield ${className ?? ''}`}\n      defaultValue={defaultValue}\n      value={value}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n    />\n  );\n}\n\nexport default TextField;\n","import { Canon } from '@sillsdev/scripture';\nimport { SyntheticEvent, useState } from 'react';\nimport {\n  BookNameOption,\n  getBookNameOptions,\n  bookNumToBookOption,\n  offsetBook,\n  offsetChapter,\n  offsetVerse,\n  FIRST_SCR_BOOK_NUM,\n  FIRST_SCR_CHAPTER_NUM,\n  FIRST_SCR_VERSE_NUM,\n  getChaptersForBook,\n} from './scripture/scripture-util';\nimport { ScriptureReference } from './scripture/scripture.model';\nimport './ref-selector.component.css';\nimport ComboBox from './combo-box.component';\nimport Button from './button.component';\nimport TextField from './text-field.component';\n\nexport interface ScrRefSelectorProps {\n  scrRef: ScriptureReference;\n  handleSubmit: (scrRef: ScriptureReference) => void;\n}\n\nfunction RefSelector({ scrRef, handleSubmit }: ScrRefSelectorProps) {\n  const [currentBookOption, setCurrentBookOption] = useState<BookNameOption>(\n    bookNumToBookOption(scrRef.bookNum),\n  );\n\n  const onChangeBook = (newRef: ScriptureReference) => {\n    setCurrentBookOption(bookNumToBookOption(newRef.bookNum));\n    handleSubmit(newRef);\n  };\n\n  const onSelectBook = (_event: SyntheticEvent<Element, Event>, value: unknown) => {\n    const bookNum: number = Canon.bookIdToNumber((value as BookNameOption).bookId);\n    const newRef: ScriptureReference = { bookNum, chapterNum: 1, verseNum: 1 };\n\n    onChangeBook(newRef);\n  };\n\n  const onChangeChapter = (event: { target: { value: number | string } }) => {\n    handleSubmit({ ...scrRef, chapterNum: +event.target.value });\n  };\n\n  const onChangeVerse = (event: { target: { value: number | string } }) => {\n    handleSubmit({ ...scrRef, verseNum: +event.target.value });\n  };\n\n  return (\n    <>\n      <ComboBox\n        title=\"Book\"\n        className=\"papi-ref-selector book\"\n        options={getBookNameOptions()}\n        onChange={onSelectBook}\n        value={currentBookOption}\n        isClearable={false}\n        width={200}\n      />\n      <Button\n        onClick={() => onChangeBook(offsetBook(scrRef, -1))}\n        isDisabled={scrRef.bookNum <= FIRST_SCR_BOOK_NUM}\n      >\n        &lt;\n      </Button>\n      <Button\n        onClick={() => onChangeBook(offsetBook(scrRef, 1))}\n        isDisabled={scrRef.bookNum >= getBookNameOptions().length}\n      >\n        &gt;\n      </Button>\n      <TextField\n        className=\"papi-ref-selector chapter-verse\"\n        label=\"Chapter\"\n        value={scrRef.chapterNum}\n        onChange={onChangeChapter}\n      />\n      <Button\n        onClick={() => handleSubmit(offsetChapter(scrRef, -1))}\n        isDisabled={scrRef.chapterNum <= FIRST_SCR_CHAPTER_NUM}\n      >\n        &lt;\n      </Button>\n      <Button\n        onClick={() => handleSubmit(offsetChapter(scrRef, 1))}\n        isDisabled={scrRef.chapterNum >= getChaptersForBook(scrRef.bookNum)}\n      >\n        &gt;\n      </Button>\n      <TextField\n        className=\"papi-ref-selector chapter-verse\"\n        label=\"Verse\"\n        value={scrRef.verseNum}\n        onChange={onChangeVerse}\n      />\n      <Button\n        onClick={() => handleSubmit(offsetVerse(scrRef, -1))}\n        isDisabled={scrRef.verseNum <= FIRST_SCR_VERSE_NUM}\n      >\n        &lt;\n      </Button>\n      <Button onClick={() => handleSubmit(offsetVerse(scrRef, 1))}>&gt;</Button>\n    </>\n  );\n}\n\nexport default RefSelector;\n","import { Slider as MuiSlider } from '@mui/material';\nimport { SyntheticEvent } from 'react';\nimport './slider.component.css';\n\nexport type SliderProps = {\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation?: 'horizontal' | 'vertical';\n  /**\n   * The minimum allowed value of the slider.\n   * Should not be equal to max.\n   * @default 0\n   */\n  min?: number;\n  /**\n   * The maximum allowed value of the slider.\n   * Should not be equal to min.\n   * @default 100\n   */\n  max?: number;\n  /**\n   * The granularity with which the slider can step through values. (A \"discrete\" slider.)\n   * The `min` prop serves as the origin for the valid values.\n   * We recommend (max - min) to be evenly divisible by the step.\n   * @default 1\n   */\n  step?: number;\n  /**\n   * Marks indicate predetermined values to which the user can move the slider.\n   * If `true` the marks are spaced according the value of the `step` prop.\n   * @default false\n   */\n  showMarks?: boolean;\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue?: number;\n  /**\n   * Controls when the value label is displayed:\n   *\n   * - `auto` the value label will display when the thumb is hovered or focused.\n   * - `on` will display persistently.\n   * - `off` will never display.\n   * @default 'off'\n   */\n  valueLabelDisplay?: 'on' | 'auto' | 'off';\n  /**\n   * Additional css classes to help with unique styling of the button\n   */\n  className?: string;\n  /**\n   * Callback function that is fired when the slider's value changed.\n   * @param event The event source of the callback. You can pull out the new value by accessing event.target.value (any).\n   * Warning: This is a generic event not a change event.\n   * @param value The new value.\n   * @param activeThumb Index of the currently moved thumb.\n   */\n  onChange?: (event: Event, value: number | number[], activeThumb: number) => void;\n  /**\n   * Callback function that is fired when the mouseup is triggered.\n   * @param event The event source of the callback. Warning: This is a generic event not a change event.\n   * @param value The new value.\n   */\n  onChangeCommitted?: (\n    event: Event | SyntheticEvent<Element, Event>,\n    value: number | number[],\n  ) => void;\n};\n\n/**\n * Slider that allows selecting a value from a range\n *\n * Thanks to MUI for heavy inspiration and documentation\n * https://mui.com/material-ui/getting-started/overview/\n */\nfunction Slider({\n  isDisabled = false,\n  orientation = 'horizontal',\n  min = 0,\n  max = 100,\n  step = 1,\n  showMarks = false,\n  defaultValue,\n  valueLabelDisplay = 'off',\n  className,\n  onChange,\n  onChangeCommitted,\n}: SliderProps) {\n  return (\n    <MuiSlider\n      disabled={isDisabled}\n      orientation={orientation}\n      min={min}\n      max={max}\n      step={step}\n      marks={showMarks}\n      defaultValue={defaultValue}\n      valueLabelDisplay={valueLabelDisplay}\n      className={`papi-slider ${orientation} ${className ?? ''}`}\n      onChange={onChange}\n      onChangeCommitted={onChangeCommitted}\n    />\n  );\n}\n\nexport default Slider;\n","﻿import { Switch as MuiSwitch } from '@mui/material';\nimport { ChangeEvent } from 'react';\nimport './switch.component.css';\n\nexport type SwitchProps = {\n  /**\n   * If `true`, the component is checked.\n   */\n  isChecked?: boolean;\n  /**\n   * Enabled status of switch\n   * @default false\n   */\n  isDisabled?: boolean;\n  /**\n   * True when (input related to) switch is erroneous\n   * @default false\n   */\n  hasError?: boolean;\n  /**\n   * Additional css classes to help with unique styling of the switch\n   */\n  className?: string;\n  /**\n   * Callback fired when the state is changed.\n   * @param event The event source of the callback. You can pull out the new value by accessing event.target.value (string).\n   * You can pull out the new checked state by accessing event.target.checked (boolean).\n   */\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\n/**\n * Switch to toggle on and off\n *\n * Thanks to MUI for heavy inspiration and documentation\n * https://mui.com/material-ui/getting-started/overview/\n */\nfunction Switch({\n  isChecked: checked,\n  isDisabled = false,\n  hasError = false,\n  className,\n  onChange,\n}: SwitchProps) {\n  return (\n    <MuiSwitch\n      checked={checked}\n      disabled={isDisabled}\n      className={`papi-switch ${hasError ? 'error' : ''} ${className ?? ''}`}\n      onChange={onChange}\n    />\n  );\n}\n\nexport default Switch;\n","import { Snackbar as MuiSnackbar, SnackbarCloseReason, SnackbarOrigin } from '@mui/material';\nimport { SyntheticEvent, ReactElement, ReactNode } from 'react';\nimport './snackbar.component.css';\n\nexport type CloseReason = SnackbarCloseReason;\nexport type AnchorOrigin = SnackbarOrigin;\n\nexport type SnackbarContentProps = {\n  /**\n   * The action to display, renders after the message\n   */\n  action?: ReactNode;\n\n  /**\n   * The message to display\n   */\n  message?: ReactNode;\n\n  /**\n   * Additional css classes to help with unique styling of the snackbar, internal\n   */\n  className?: string;\n};\n\nexport type SnackbarProps = {\n  /**\n   * If true, the component is shown\n   * @default false\n   */\n  isOpen?: boolean;\n\n  /**\n   * The number of milliseconds to wait before automatically calling onClose()\n   * @default null\n   */\n  autoHideDuration?: number | null;\n\n  /**\n   * Additional css classes to help with unique styling of the snackbar, external\n   */\n  className?: string;\n\n  /**\n   * Optional, used to control the open prop\n   * event: Event | SyntheticEvent<Element, Event>, reason: string\n   */\n  onClose?: (event: SyntheticEvent<any> | Event, reason: CloseReason) => void;\n\n  /**\n   * The anchor of the `Snackbar`.\n   * the horizontal alignment is ignored.\n   * @default vertical: 'bottom', horizontal: 'left'\n   */\n  anchorOrigin?: AnchorOrigin;\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children?: ReactElement<any, any>;\n\n  ContentProps?: SnackbarContentProps;\n};\n\n/**\n * Snackbar that provides brief notifications\n *\n * Thanks to MUI for heavy inspiration and documentation\n * https://mui.com/material-ui/getting-started/overview/\n */\nfunction Snackbar({\n  autoHideDuration = null,\n  isOpen = false,\n  className,\n  onClose,\n  anchorOrigin = { vertical: 'bottom', horizontal: 'left' },\n  ContentProps = {\n    action: '',\n    message: '',\n    className: `papi-snackbar ${className ?? ''}`,\n  },\n  children,\n}: SnackbarProps) {\n  const snackbar = (\n    <MuiSnackbar\n      autoHideDuration={autoHideDuration}\n      className={`papi-snackbar ${className ?? ''}`}\n      open={isOpen}\n      onClose={onClose}\n      anchorOrigin={anchorOrigin}\n      ContentProps={ContentProps}\n    >\n      {children}\n    </MuiSnackbar>\n  );\n  return snackbar;\n}\n\nexport default Snackbar;\n","import { MenuItem as MuiMenuItem } from '@mui/material';\nimport './menu-item.component.css';\nimport { PropsWithChildren, MouseEventHandler } from 'react';\n\nexport type MenuItemProps = PropsWithChildren<{\n  /**\n   * If true, list item is focused during the first mount\n   * @default false\n   */\n  hasAutoFocus?: boolean;\n\n  /**\n   * Additional css classes to help with unique styling of the button\n   */\n  className?: string;\n\n  /**\n   * If true, compact vertical padding designed for keyboard and mouse\n   * input is used.\n   * @default false\n   */\n  isDense?: boolean;\n\n  /**\n   * If true, the left and right padding is removed\n   * @default false\n   */\n  hasDisabledGutters?: boolean;\n\n  /**\n   * If true, a 1px light border is added to bottom of menu item\n   * @default false\n   */\n  hasDivider?: boolean;\n\n  /**\n   * Help identify which element has keyboard focus\n   */\n  focusVisibleClassName?: string;\n\n  /**\n   * Optional click handler\n   */\n  onClick?: MouseEventHandler<HTMLLIElement> | undefined;\n}>;\n\nfunction MenuItem({\n  hasAutoFocus = false,\n  className,\n  isDense = false,\n  hasDisabledGutters = false,\n  hasDivider = false,\n  focusVisibleClassName,\n  onClick,\n  children,\n}: MenuItemProps) {\n  return (\n    <MuiMenuItem\n      autoFocus={hasAutoFocus}\n      className={className}\n      dense={isDense}\n      disableGutters={hasDisabledGutters}\n      divider={hasDivider}\n      focusVisibleClassName={focusVisibleClassName}\n      onClick={onClick}\n    >\n      {children}\n    </MuiMenuItem>\n  );\n}\n\nexport default MenuItem;\n","import DataGrid, {\n  CellClickArgs,\n  CellKeyboardEvent,\n  CellKeyDownArgs,\n  CellMouseEvent,\n  CopyEvent,\n  PasteEvent,\n  RowsChangeData,\n  RenderCellProps,\n  RenderCheckboxProps,\n  SelectColumn,\n  SortColumn,\n} from 'react-data-grid';\nimport { ChangeEvent, Key, ReactElement, ReactNode, UIEvent, useMemo } from 'react';\nimport Checkbox from './checkbox.component';\nimport TextField from './text-field.component';\n\nimport 'react-data-grid/lib/styles.css';\nimport './table.component.css';\n\nexport interface TableCalculatedColumn<R> extends TableColumn<R> {\n  readonly idx: number;\n  readonly width: number | string;\n  readonly minWidth: number;\n  readonly maxWidth: number | undefined;\n  readonly resizable: boolean;\n  readonly sortable: boolean;\n  readonly frozen: boolean;\n  readonly isLastFrozenColumn: boolean;\n  readonly rowGroup: boolean;\n  readonly renderCell: (props: RenderCellProps<R>) => ReactNode;\n}\nexport type TableCellClickArgs<R> = CellClickArgs<R>;\nexport type TableCellKeyboardEvent = CellKeyboardEvent;\nexport type TableCellKeyDownArgs<R> = CellKeyDownArgs<R>;\nexport type TableCellMouseEvent = CellMouseEvent;\nexport type TableColumn<R> = {\n  /**\n   * The name of the column. By default it will be displayed in the header cell\n   */\n  readonly name: string | ReactElement;\n  /**\n   * A unique key to distinguish each column\n   */\n  readonly key: string;\n  /**\n   * Column width. If not specified, it will be determined automatically\n   * based on grid width and specified widths of other columns\n   */\n  readonly width?: number | string;\n  /**\n   * Minimum column width in px.\n   */\n  readonly minWidth?: number;\n  /**\n   * Maximum column width in px.\n   */\n  readonly maxWidth?: number;\n  /**\n   * If `true`, editing is enabled. If no custom cell editor is provided through `renderEditCell`\n   * the default text editor will be used for editing.\n   * Note: If `editable` is set to 'true' and no custom `renderEditCell` is provided,\n   * the internal logic that sets the `renderEditCell` will shallow clone the column.\n   */\n  readonly editable?: boolean | ((row: R) => boolean) | null;\n  /**\n   * Determines whether column is frozen or not\n   */\n  readonly frozen?: boolean;\n  /**\n   * Enable resizing of a column\n   */\n  readonly resizable?: boolean;\n  /**\n   * Enable sorting of a column\n   */\n  readonly sortable?: boolean;\n  /**\n   * Sets the column sort order to be descending instead of ascending the first time\n   * the column is sorted\n   */\n  readonly sortDescendingFirst?: boolean | null;\n  /**\n   * Editor to be rendered when cell of column is being edited.\n   * Don't forget to also set the `editable` prop to true in order to enable editing.\n   */\n  readonly renderEditCell?: ((props: TableEditorProps<R>) => ReactNode) | null;\n};\nexport type TableCopyEvent<R> = CopyEvent<R>;\nexport type TableEditorProps<R> = {\n  column: TableCalculatedColumn<R>;\n  row: R;\n  onRowChange: (row: R, commitChanges?: boolean) => void;\n  onClose: (commitChanges?: boolean) => void;\n};\nexport type TablePasteEvent<R> = PasteEvent<R>;\nexport type TableRowsChangeData<R> = RowsChangeData<R>;\nexport type TableSortColumn = SortColumn;\n\nfunction TableTextEditor<R>({ onRowChange, row, column }: TableEditorProps<R>): ReactElement {\n  const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    onRowChange({ ...row, [column.key]: e.target.value });\n  };\n\n  return <TextField defaultValue={row[column.key as keyof R]} onChange={changeHandler} />;\n}\n\nconst renderCheckbox = ({ onChange, disabled, checked, ...props }: RenderCheckboxProps) => {\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    onChange(e.target.checked, (e.nativeEvent as MouseEvent).shiftKey);\n  }\n\n  return (\n    <Checkbox\n      {...props}\n      // key={} Any idea how we can get a unique ID for each checkbox?\n      isChecked={checked}\n      isDisabled={disabled}\n      onChange={handleChange}\n    />\n  );\n};\n\n// Subset of https://github.com/adazzle/react-data-grid#api\nexport type TableProps<R> = {\n  /**\n   * An array of objects representing each column on the grid\n   */\n  columns: readonly TableColumn<R>[];\n  /**\n   * Whether or not a column with checkboxes is inserted that allows you to select rows\n   */\n  enableSelectColumn?: boolean;\n  /**\n   * Specifies the width of the select column. Only relevant when enableSelectColumn is true\n   * @default 50\n   */\n  selectColumnWidth?: number;\n  /**\n   * An array of objects representing the currently sorted columns\n   */\n  sortColumns?: readonly TableSortColumn[];\n  /**\n   * A callback function that is called when the sorted columns change\n   * @param sortColumns An array of objects representing the currently sorted columns in the table.\n   */\n  onSortColumnsChange?: (sortColumns: TableSortColumn[]) => void;\n  /**\n   * A callback function that is called when a column is resized\n   * @param idx The index of the column being resized\n   * @param width The new width of the column in pixels\n   */\n  onColumnResize?: (idx: number, width: number) => void;\n  /**\n   * Default column width. If not specified, it will be determined automatically\n   * based on grid width and specified widths of other columns\n   */\n  defaultColumnWidth?: number;\n  /**\n   * Minimum column width in px.\n   */\n  defaultColumnMinWidth?: number;\n  /**\n   * Maximum column width in px.\n   */\n  defaultColumnMaxWidth?: number;\n  /**\n   * Whether or not columns are sortable by default\n   * @default true\n   */\n  defaultColumnSortable?: boolean;\n  /**\n   * Whether or not columns are resizable by default\n   * @default true\n   */\n  defaultColumnResizable?: boolean;\n  /**\n   * An array of objects representing the rows in the grid\n   */\n  rows: readonly R[];\n  /**\n   * A function that returns the key for a given row\n   */\n  rowKeyGetter?: (row: R) => Key;\n  /**\n   * The height of each row in pixels\n   * @default 35\n   */\n  rowHeight?: number;\n  /**\n   * The height of the header row in pixels\n   * @default 35\n   */\n  headerRowHeight?: number;\n  /**\n   * A set of keys representing the currently selected rows\n   */\n  selectedRows?: ReadonlySet<Key>;\n  /**\n   * A callback function that is called when the selected rows change\n   */\n  onSelectedRowsChange?: (selectedRows: Set<Key>) => void;\n  /**\n   * A callback function that is called when the rows in the grid change\n   */\n  onRowsChange?: (rows: R[], data: TableRowsChangeData<R>) => void;\n  /**\n   * A callback function that is called when a cell is clicked\n   * @param event The event source of the callback\n   */\n  onCellClick?: (args: TableCellClickArgs<R>, event: TableCellMouseEvent) => void;\n  /**\n   * A callback function that is called when a cell is double-clicked\n   * @param event The event source of the callback\n   */\n  onCellDoubleClick?: (args: TableCellClickArgs<R>, event: TableCellMouseEvent) => void;\n  /**\n   * A callback function that is called when a cell is right-clicked\n   * @param event The event source of the callback\n   */\n  onCellContextMenu?: (args: TableCellClickArgs<R>, event: TableCellMouseEvent) => void;\n  /**\n   * A callback function that is called when a key is pressed while a cell is focused\n   * @param event The event source of the callback\n   */\n  onCellKeyDown?: (args: TableCellKeyDownArgs<R>, event: TableCellKeyboardEvent) => void;\n  /**\n   * The text direction of the table\n   * @default \"ltr\"\n   */\n  direction?: 'ltr' | 'rtl';\n  /**\n   * Whether or not virtualization is enabled for the table\n   * @default true\n   */\n  enableVirtualization?: boolean;\n  /**\n   * A callback function that is called when the table is scrolled\n   * @param event The event source of the callback\n   */\n  onScroll?: (event: UIEvent<HTMLDivElement>) => void;\n  /**\n   * A callback function that is called when the user copies data from the table.\n   * @param event The event source of the callback\n   */\n  onCopy?: (event: TableCopyEvent<R>) => void;\n  /**\n   * A callback function that is called when the user pastes data into the table.\n   * @param event The event source of the callback\n   */\n  onPaste?: (event: TablePasteEvent<R>) => R;\n  /**\n   * Additional css classes to help with unique styling of the table\n   */\n  className?: string;\n};\n\n/**\n * Configurable table component\n *\n * Thanks to Adazzle for heavy inspiration and documentation\n * https://adazzle.github.io/react-data-grid/\n */\nfunction Table<R>({\n  columns,\n  sortColumns,\n  onSortColumnsChange,\n  onColumnResize,\n  defaultColumnWidth,\n  defaultColumnMinWidth,\n  defaultColumnMaxWidth,\n  defaultColumnSortable = true,\n  defaultColumnResizable = true,\n  rows,\n  enableSelectColumn,\n  selectColumnWidth = 50,\n  rowKeyGetter,\n  rowHeight = 35,\n  headerRowHeight = 35,\n  selectedRows,\n  onSelectedRowsChange,\n  onRowsChange,\n  onCellClick,\n  onCellDoubleClick,\n  onCellContextMenu,\n  onCellKeyDown,\n  direction = 'ltr',\n  enableVirtualization = true,\n  onCopy,\n  onPaste,\n  onScroll,\n  className,\n}: TableProps<R>) {\n  const cachedColumns = useMemo(() => {\n    const editableColumns = columns.map((column) => {\n      if (typeof column.editable === 'function') {\n        const editableFalsy = (row: R) => {\n          // We've already confirmed that editable is a function\n          return !!(column.editable as (row: R) => boolean)(row);\n        };\n        return {\n          ...column,\n          editable: editableFalsy,\n          renderEditCell: column.renderEditCell || TableTextEditor,\n        };\n      }\n      if (column.editable && !column.renderEditCell) {\n        return { ...column, renderEditCell: TableTextEditor };\n      }\n      if (column.renderEditCell && !column.editable) {\n        return { ...column, editable: false };\n      }\n      return column;\n    });\n\n    return enableSelectColumn\n      ? [{ ...SelectColumn, minWidth: selectColumnWidth }, ...editableColumns]\n      : editableColumns;\n  }, [enableSelectColumn, columns]);\n\n  return (\n    <DataGrid<R>\n      columns={cachedColumns}\n      defaultColumnOptions={{\n        width: defaultColumnWidth,\n        minWidth: defaultColumnMinWidth,\n        maxWidth: defaultColumnMaxWidth,\n        sortable: defaultColumnSortable,\n        resizable: defaultColumnResizable,\n      }}\n      sortColumns={sortColumns}\n      onSortColumnsChange={onSortColumnsChange}\n      onColumnResize={onColumnResize}\n      rows={rows}\n      rowKeyGetter={rowKeyGetter}\n      rowHeight={rowHeight}\n      headerRowHeight={headerRowHeight}\n      selectedRows={selectedRows}\n      onSelectedRowsChange={onSelectedRowsChange}\n      onRowsChange={onRowsChange}\n      onCellClick={onCellClick}\n      onCellDoubleClick={onCellDoubleClick}\n      onCellContextMenu={onCellContextMenu}\n      onCellKeyDown={onCellKeyDown}\n      direction={direction}\n      enableVirtualization={enableVirtualization}\n      onCopy={onCopy}\n      onPaste={onPaste}\n      onScroll={onScroll}\n      renderers={{ renderCheckbox }}\n      className={`${className ?? 'rdg-light'}`}\n    />\n  );\n}\n\nexport default Table;\n"],"names":["Button","isDisabled","className","onClick","onContextMenu","children","jsx","MuiButton","LabelPosition","Checkbox","isChecked","labelText","labelPosition","isIndeterminate","isDefaultChecked","hasError","onChange","checkBox","MuiCheckbox","result","preceding","labelSpan","labelIsInline","label","checkBoxElement","jsxs","FormLabel","ComboBox","title","isClearable","isFullWidth","width","options","value","onFocus","onBlur","MuiComboBox","props","MuiTextField","I","C","r","e","t","s","N","i","u","m","f","l","p","B","a","n","o","h","v","g","k","b","d","E","c","scrBookData","getBookNameOptions","Canon","bookId","bookNumToBookOption","bookNum","FIRST_SCR_BOOK_NUM","LAST_SCR_BOOK_NUM","FIRST_SCR_CHAPTER_NUM","FIRST_SCR_VERSE_NUM","getChaptersForBook","_a","offsetBook","scrRef","offset","offsetChapter","offsetVerse","TextField","variant","helperText","placeholder","isRequired","defaultValue","RefSelector","handleSubmit","currentBookOption","setCurrentBookOption","useState","onChangeBook","newRef","onSelectBook","_event","onChangeChapter","event","onChangeVerse","Fragment","Slider","orientation","min","max","step","showMarks","valueLabelDisplay","onChangeCommitted","MuiSlider","Switch","checked","MuiSwitch","Snackbar","autoHideDuration","isOpen","onClose","anchorOrigin","ContentProps","MuiSnackbar","MenuItem","hasAutoFocus","isDense","hasDisabledGutters","hasDivider","focusVisibleClassName","MuiMenuItem","TableTextEditor","onRowChange","row","column","changeHandler","renderCheckbox","disabled","handleChange","Table","columns","sortColumns","onSortColumnsChange","onColumnResize","defaultColumnWidth","defaultColumnMinWidth","defaultColumnMaxWidth","defaultColumnSortable","defaultColumnResizable","rows","enableSelectColumn","selectColumnWidth","rowKeyGetter","rowHeight","headerRowHeight","selectedRows","onSelectedRowsChange","onRowsChange","onCellClick","onCellDoubleClick","onCellContextMenu","onCellKeyDown","direction","enableVirtualization","onCopy","onPaste","onScroll","cachedColumns","useMemo","editableColumns","SelectColumn","DataGrid"],"mappings":"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_google_ignoreList":[4]}