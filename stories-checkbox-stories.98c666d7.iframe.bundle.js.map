{"version":3,"file":"stories-checkbox-stories.98c666d7.iframe.bundle.js","mappings":"ypBAEA,MA+BA,2BA/BoC,CAClCA,MAAO,kBACPC,UAAW,gDACXC,KAAM,CAAC,YACPC,SAAU,CACRC,UAAW,CACTC,QAAS,QAEXC,cAAe,CACbD,QAAS,iDAEXE,UAAW,CACTF,QAAS,WAEXG,iBAAkB,CAChBH,QAAS,WAEXI,WAAY,CACVJ,QAAS,WAEXK,gBAAiB,CACfL,QAAS,WAEXM,SAAU,CACRN,QAAS,WAEXO,UAAW,CACTP,QAAS,UAMFQ,QAAiB,CAC5BC,KAAM,CAAC,GAEIC,eAAwB,CACnCD,KAAM,CACJN,kBAAkB,EAClBJ,UAAW,oBACXE,cAAe,gDAAcU,QAGpBC,cAAuB,CAClCH,KAAM,CACJJ,iBAAiB,EACjBN,UAAW,mGAGFc,mBAA4B,CACvCJ,KAAM,CACJV,UAAW,iBACXE,cAAe,gDAAca,QAGpBC,SAAkB,CAC7BN,KAAM,CACJL,YAAY,EACZL,UAAW,qBAGFiB,WAAoB,CAC/BP,KAAM,CACJH,UAAU,EACVP,UAAW,OACXE,cAAe,gDAAcgB,QAGpBC,SAAkB,CAC7BT,KAAM,CACJV,UAAW,WACXQ,UAAW,aAGFY,eAAwB,CACnCV,KAAM,CACJV,UAAW,kBACXQ,UAAW,oBAGFa,SAAkB,CAC7BX,KAAM,CACJ,QAAAY,CAASC,OAEPC,QAAQC,IAAIF,MAAMG,OAAOC,QAC3B,IAGJlB,QAAQmB,WAAa,IAChBnB,QAAQmB,WACXC,KAAM,IACDpB,QAAQmB,YAAYC,KACvBC,OAAQ,CACNC,eAAgB,sBACbtB,QAAQmB,YAAYC,MAAMC,UAInCnB,eAAeiB,WAAa,IACvBjB,eAAeiB,WAClBC,KAAM,IACDlB,eAAeiB,YAAYC,KAC9BC,OAAQ,CACNC,eAAgB,oIACbpB,eAAeiB,YAAYC,MAAMC,UAI1CjB,cAAce,WAAa,IACtBf,cAAce,WACjBC,KAAM,IACDhB,cAAce,YAAYC,KAC7BC,OAAQ,CACNC,eAAgB,uKACblB,cAAce,YAAYC,MAAMC,UAIzChB,mBAAmBc,WAAa,IAC3Bd,mBAAmBc,WACtBC,KAAM,IACDf,mBAAmBc,YAAYC,KAClCC,OAAQ,CACNC,eAAgB,oGACbjB,mBAAmBc,YAAYC,MAAMC,UAI9Cd,SAASY,WAAa,IACjBZ,SAASY,WACZC,KAAM,IACDb,SAASY,YAAYC,KACxBC,OAAQ,CACNC,eAAgB,oFACbf,SAASY,YAAYC,MAAMC,UAIpCb,WAAWW,WAAa,IACnBX,WAAWW,WACdC,KAAM,IACDZ,WAAWW,YAAYC,KAC1BC,OAAQ,CACNC,eAAgB,+GACbd,WAAWW,YAAYC,MAAMC,UAItCX,SAASS,WAAa,IACjBT,SAASS,WACZC,KAAM,IACDV,SAASS,YAAYC,KACxBC,OAAQ,CACNC,eAAgB,iFACbZ,SAASS,YAAYC,MAAMC,UAIpCV,eAAeQ,WAAa,IACvBR,eAAeQ,WAClBC,KAAM,IACDT,eAAeQ,YAAYC,KAC9BC,OAAQ,CACNC,eAAgB,+FACbX,eAAeQ,YAAYC,MAAMC,UAI1CT,SAASO,WAAa,IACjBP,SAASO,WACZC,KAAM,IACDR,SAASO,YAAYC,KACxBC,OAAQ,CACNC,eAAgB,gJACbV,SAASO,YAAYC,MAAMC,S","sources":["webpack:///./src/stories/checkbox.stories.tsx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\nimport { Checkbox, LabelPosition } from 'papi-components';\nconst meta: Meta<typeof Checkbox> = {\n  title: 'Basics/Checkbox',\n  component: Checkbox,\n  tags: ['autodocs'],\n  argTypes: {\n    labelText: {\n      control: 'text'\n    },\n    labelPosition: {\n      control: LabelPosition\n    },\n    isChecked: {\n      control: 'boolean'\n    },\n    isDefaultChecked: {\n      control: 'boolean'\n    },\n    isDisabled: {\n      control: 'boolean'\n    },\n    isIndeterminate: {\n      control: 'boolean'\n    },\n    hasError: {\n      control: 'boolean'\n    },\n    className: {\n      control: 'text'\n    }\n  }\n};\nexport default meta;\ntype Story = StoryObj<typeof Checkbox>;\nexport const Default: Story = {\n  args: {}\n};\nexport const DefaultChecked: Story = {\n  args: {\n    isDefaultChecked: true,\n    labelText: 'Initially checked',\n    labelPosition: LabelPosition.After\n  }\n};\nexport const Indeterminate: Story = {\n  args: {\n    isIndeterminate: true,\n    labelText: 'Clicking this does nothing. It would need isIndeterminate to be programmatically set to false.'\n  }\n};\nexport const LabelPositionAbove: Story = {\n  args: {\n    labelText: 'Label position',\n    labelPosition: LabelPosition.Above\n  }\n};\nexport const Disabled: Story = {\n  args: {\n    isDisabled: true,\n    labelText: 'This is disabled'\n  }\n};\nexport const ErrorState: Story = {\n  args: {\n    hasError: true,\n    labelText: 'Bad!',\n    labelPosition: LabelPosition.Below\n  }\n};\nexport const Paratext: Story = {\n  args: {\n    labelText: 'Paratext',\n    className: 'paratext'\n  }\n};\nexport const ParatextBright: Story = {\n  args: {\n    labelText: 'Paratext Bright',\n    className: 'paratext bright'\n  }\n};\nexport const OnChange: Story = {\n  args: {\n    onChange(event) {\n      // eslint-disable-next-line no-console\n      console.log(event.target.checked);\n    }\n  }\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {}\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nDefaultChecked.parameters = {\n  ...DefaultChecked.parameters,\n  docs: {\n    ...DefaultChecked.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    isDefaultChecked: true,\\n    labelText: 'Initially checked',\\n    labelPosition: LabelPosition.After\\n  }\\n}\",\n      ...DefaultChecked.parameters?.docs?.source\n    }\n  }\n};\nIndeterminate.parameters = {\n  ...Indeterminate.parameters,\n  docs: {\n    ...Indeterminate.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    isIndeterminate: true,\\n    labelText: 'Clicking this does nothing. It would need isIndeterminate to be programmatically set to false.'\\n  }\\n}\",\n      ...Indeterminate.parameters?.docs?.source\n    }\n  }\n};\nLabelPositionAbove.parameters = {\n  ...LabelPositionAbove.parameters,\n  docs: {\n    ...LabelPositionAbove.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    labelText: 'Label position',\\n    labelPosition: LabelPosition.Above\\n  }\\n}\",\n      ...LabelPositionAbove.parameters?.docs?.source\n    }\n  }\n};\nDisabled.parameters = {\n  ...Disabled.parameters,\n  docs: {\n    ...Disabled.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    isDisabled: true,\\n    labelText: 'This is disabled'\\n  }\\n}\",\n      ...Disabled.parameters?.docs?.source\n    }\n  }\n};\nErrorState.parameters = {\n  ...ErrorState.parameters,\n  docs: {\n    ...ErrorState.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    hasError: true,\\n    labelText: 'Bad!',\\n    labelPosition: LabelPosition.Below\\n  }\\n}\",\n      ...ErrorState.parameters?.docs?.source\n    }\n  }\n};\nParatext.parameters = {\n  ...Paratext.parameters,\n  docs: {\n    ...Paratext.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    labelText: 'Paratext',\\n    className: 'paratext'\\n  }\\n}\",\n      ...Paratext.parameters?.docs?.source\n    }\n  }\n};\nParatextBright.parameters = {\n  ...ParatextBright.parameters,\n  docs: {\n    ...ParatextBright.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    labelText: 'Paratext Bright',\\n    className: 'paratext bright'\\n  }\\n}\",\n      ...ParatextBright.parameters?.docs?.source\n    }\n  }\n};\nOnChange.parameters = {\n  ...OnChange.parameters,\n  docs: {\n    ...OnChange.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    onChange(event) {\\n      // eslint-disable-next-line no-console\\n      console.log(event.target.checked);\\n    }\\n  }\\n}\",\n      ...OnChange.parameters?.docs?.source\n    }\n  }\n};"],"names":["title","component","tags","argTypes","labelText","control","labelPosition","isChecked","isDefaultChecked","isDisabled","isIndeterminate","hasError","className","Default","args","DefaultChecked","After","Indeterminate","LabelPositionAbove","Above","Disabled","ErrorState","Below","Paratext","ParatextBright","OnChange","onChange","event","console","log","target","checked","parameters","docs","source","originalSource"],"sourceRoot":""}