name: Test

on:
  push:
    branches: ['main']
  pull_request:
    # The branches below should be a subset of the branches above
    branches: ['main']
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  test:
    name: Test on ${{ matrix.os }}, .Net ${{ matrix.dotnet_version }}, and node ${{ matrix.node_version }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        dotnet_version: [7.0.x]
        node_version: [18.x]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{matrix.dotnet_version}}

      - name: Install Node.js and NPM
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          cache: npm

      - name: npm install
        run: npm install

      - name: Install DMG license
        if: ${{ matrix.os == 'macos-latest' }}
        run: npm install dmg-license

      - name: dotnet build
        run: npm run build:data-release

      - name: check dotnet formatting
        run: cd c-sharp && dotnet tool restore && dotnet csharpier --check .

      - name: npm test
        env:
          # no hardlinks so dependencies are copied
          USE_HARD_LINKS: false
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run lint
          npm test
          npm run package

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
