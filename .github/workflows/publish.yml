name: Publish

on:
  push:
    branches: [release/*]
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  publish:
    name: Publish on ${{ matrix.os }}, .Net ${{ matrix.dotnet_version }}, and node ${{ matrix.node_version }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        dotnet_version: [7.0.x]
        node_version: [18.x]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{matrix.dotnet_version}}

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          cache: npm

      - name: Install and build
        run: |
          npm install
          npm run build

      - name: Install DMG license
        if: ${{ matrix.os == 'macos-latest' }}
        run: npm install dmg-license

      - name: dotnet build - MacOS and Windows
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          npm run build:data-release:windows
          npm run build:data-release:macos

      - name: dotnet build - Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: npm run build:data-release:linux

      - name: Publish releases - Windows and MacOS
        # If the branch is labeled as a release version (e.g. "release/v1.2.3"),
        if: ${{ matrix.os == 'macos-latest' && startsWith(github.ref, 'refs/heads/release/v') && contains(github.ref, '.') }}
        env:
          # These values are used for auto updates signing
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always --win --mac

      - name: Publish releases - Linux
        # If the branch is labeled as a release version (e.g. "release/v1.2.3"),
        if: ${{ matrix.os == 'ubuntu-latest' && startsWith(github.ref, 'refs/heads/release/v') && contains(github.ref, '.') }}
        env:
          # no hardlinks so dependencies are copied
          USE_HARD_LINKS: false
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always --linux

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
