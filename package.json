{
  "description": "Extensible Bible translation software",
  "keywords": [
    "electron",
    "boilerplate",
    "react",
    "typescript",
    "ts",
    "sass",
    "webpack",
    "hot",
    "reload"
  ],
  "homepage": "https://github.com/paranext/paranext-core#readme",
  "bugs": {
    "url": "https://github.com/paranext/paranext-core/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/paranext/paranext-core.git"
  },
  "license": "MIT",
  "author": {
    "name": "Paranext",
    "url": "https://github.com/paranext/"
  },
  "contributors": [
    {
      "name": "Ira J Hopkinson",
      "url": "https://github.com/irahopkinson"
    },
    {
      "name": "Tim Steenwyk",
      "url": "https://github.com/FoolRunning"
    },
    {
      "name": "TJ Couch",
      "email": "tj_couch@sil.org",
      "url": "https://github.com/tjcouch-sil"
    }
  ],
  "main": "./src/main/main.ts",
  "scripts": {
    "build": "concurrently \"npm run build:main\" \"npm run build:extension-host\" \"npm run build:renderer\"",
    "build:main": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.main.prod.ts",
    "build:extension-host": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.extension-host.prod.ts",
    "build:renderer": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.prod.ts",
    "build:data": "dotnet build c-sharp/ParanextDataProvider.sln",
    "build:data-release": "run-script-os",
    "build:data-release:windows": "dotnet publish c-sharp/ParanextDataProvider.csproj -r win-x64 -o ./c-sharp/bin/Release/net7.0/publish/win-x64/",
    "build:data-release:linux": "dotnet publish c-sharp/ParanextDataProvider.csproj -r linux-x64 -o ./c-sharp/bin/Release/net7.0/publish/linux-x64/",
    "build:data-release:macos": "dotnet publish c-sharp/ParanextDataProvider.csproj -r osx-x64 -o ./c-sharp/bin/Release/net7.0/publish/osx-x64/ && dotnet publish c-sharp/ParanextDataProvider.csproj -p:PublishProfile=FolderProfile -r osx-arm64 -o ./c-sharp/bin/Release/net7.0/publish/osx-arm64/",
    "csharp:tool:restore": "cd c-sharp && dotnet tool restore",
    "postinstall": "ts-node .erb/scripts/check-native-dep.js && electron-builder install-app-deps && cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.dev.dll.ts",
    "lint": "cross-env NODE_ENV=development eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:config": "cross-env NODE_ENV=development eslint --print-config .eslintrc.js > .eslintConfig.json",
    "package": "ts-node ./.erb/scripts/clean.js dist && npm run build && npm run build:data-release && electron-builder build --publish never",
    "package:debug": "cross-env DEBUG_PROD=true npm run package",
    "prepare": "husky install && npm run csharp:tool:restore",
    "prettier": "npx prettier --write \"**/*.{ts,tsx,js,jsx,json,css,scss,html,md,yml}\"",
    "rebuild": "electron-rebuild --parallel --types prod,dev,optional --module-dir release/app",
    "start": "ts-node ./.erb/scripts/check-port-in-use.js && npm run start:renderer",
    "start:main": "cross-env NODE_ENV=development electronmon -r ts-node/register/transpile-only .",
    "start:extension-host": "cross-env NODE_ENV=development nodemon --transpile-only ./src/extension-host/extension-host.ts",
    "start:preload": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.preload.dev.ts",
    "start:renderer": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack serve --config ./.erb/configs/webpack.config.renderer.dev.ts",
    "start:data": "dotnet watch --project c-sharp/ParanextDataProvider.csproj",
    "test": "jest",
    "storybook": "storybook dev -p 6006",
    "storybook:build": "storybook build"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "cross-env NODE_ENV=development eslint --cache"
    ],
    "*.json,.{eslintrc,prettierrc}": [
      "prettier --ignore-path .eslintignore --parser json --write"
    ],
    "*.{css,scss}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ],
    "*.{html,md,yml}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ]
  },
  "browserslist": [],
  "dependencies": {
    "@emotion/react": "^11.10.6",
    "@emotion/styled": "^11.10.6",
    "@mui/material": "^5.11.12",
    "async-mutex": "^0.4.0",
    "electron-debug": "^3.2.0",
    "electron-log": "^5.0.0-beta.19",
    "electron-updater": "^5.3.0",
    "electron-window-state": "^5.0.3",
    "fast-deep-equal": "^3.1.3",
    "memoize-one": "^6.0.0",
    "node-localstorage": "^2.2.1",
    "rc-dock": "^3.2.17",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.9.0",
    "ws": "^8.13.0"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.20.2",
    "@babel/preset-react": "^7.18.6",
    "@babel/preset-typescript": "^7.21.0",
    "@electron/notarize": "^1.2.3",
    "@electron/rebuild": "^3.2.10",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.10",
    "@storybook/addon-essentials": "^7.0.0-beta.60",
    "@storybook/addon-interactions": "^7.0.0-beta.60",
    "@storybook/addon-links": "^7.0.0-beta.60",
    "@storybook/blocks": "^7.0.0-beta.60",
    "@storybook/react": "^7.0.0-beta.60",
    "@storybook/react-webpack5": "^7.0.0-beta.60",
    "@storybook/testing-library": "^0.0.14-next.1",
    "@svgr/webpack": "^6.5.1",
    "@teamsupercell/typings-for-css-modules-loader": "^2.5.2",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "@types/jest": "^29.5.0",
    "@types/node": "18.13.0",
    "@types/node-localstorage": "^1.3.0",
    "@types/react": "^18.0.28",
    "@types/react-dom": "^18.0.11",
    "@types/react-test-renderer": "^18.0.0",
    "@types/terser-webpack-plugin": "^5.2.0",
    "@types/webpack-bundle-analyzer": "^4.6.0",
    "@types/ws": "^8.5.4",
    "@typescript-eslint/eslint-plugin": "^5.55.0",
    "@typescript-eslint/parser": "^5.55.0",
    "browserslist-config-erb": "^0.0.3",
    "chalk": "^4.1.2",
    "concurrently": "^7.6.0",
    "core-js": "^3.29.1",
    "cross-env": "^7.0.3",
    "css-loader": "^6.7.3",
    "css-minimizer-webpack-plugin": "^4.2.2",
    "detect-port": "^1.5.1",
    "electron": "^23.1.4",
    "electron-builder": "^23.6.0",
    "electron-devtools-installer": "^3.2.0",
    "electronmon": "^2.0.2",
    "eslint": "^8.36.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-erb": "^4.0.6",
    "eslint-import-resolver-typescript": "^3.5.3",
    "eslint-import-resolver-webpack": "^0.13.2",
    "eslint-plugin-compat": "^4.1.2",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jest": "^27.2.1",
    "eslint-plugin-jsx-a11y": "^6.7.1",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-storybook": "^0.6.11",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^5.5.0",
    "husky": "^8.0.3",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.5.0",
    "jest-environment-jsdom": "^29.5.0",
    "lint-staged": "^13.2.0",
    "mini-css-extract-plugin": "^2.7.4",
    "nodemon": "^2.0.21",
    "prettier": "^2.8.4",
    "react-refresh": "^0.14.0",
    "react-test-renderer": "^18.2.0",
    "rimraf": "^4.4.0",
    "run-script-os": "^1.1.6",
    "sass": "^1.59.3",
    "sass-loader": "^13.2.0",
    "storybook": "^7.0.0-beta.60",
    "style-loader": "^3.3.2",
    "terser-webpack-plugin": "^5.3.7",
    "ts-jest": "^29.0.5",
    "ts-loader": "^9.4.2",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.1.2",
    "tsconfig-paths-webpack-plugin": "^4.0.1",
    "typescript": "^4.9.5",
    "url-loader": "^4.1.1",
    "webpack": "^5.76.2",
    "webpack-bundle-analyzer": "^4.8.0",
    "webpack-cli": "^5.0.1",
    "webpack-dev-server": "^4.12.0",
    "webpack-merge": "^5.8.0"
  },
  "devEngines": {
    "node": ">=14.x",
    "npm": ">=7.x"
  },
  "electronmon": {
    "patterns": [
      "!**/**",
      "src/main/**",
      "src/node/**",
      "src/shared/**"
    ],
    "logLevel": "quiet"
  },
  "nodemonConfig": {
    "watch": [
      "src/client/**",
      "src/extension-host/**",
      "src/node/**",
      "src/shared/**"
    ]
  }
}
